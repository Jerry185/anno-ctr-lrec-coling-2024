<?xml version="1.0"?>
<TimeML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://timeml.org/timeMLdocs/TimeML_1.2.1.xsd">
<DCT><TIMEX3 functionInDocument="CREATION_TIME" temporalFunction="false" tid="t0" type="DATE" value="2018-05-31">2018-05-31</TIMEX3></DCT>
<TEXT>
SMiShing with Punycode   <TIMEX3 tid="t1" type="DATE" value="2018-05-31">May 31, 2018</TIMEX3>       Cybercriminals keep coming up with new ways to steal and profit from personal user data.  Because mobile devices are so prevalent, and so capable, they are becoming the targets of a variety of cyberattacks that were previously limited to computers.  One such attack technique is SMS phishing—SMiShing—in which attacks are delivered via text messages.  With SMiShing, mobile users receive links to phishing websites through SMS or chat applications, with text messages luring users to click on links and enter their personal information.  Zscaler ThreatlabZ is seeing more of these SMiShing attacks use “Punycode” to make phishing URLs look like legitimate website URLs.   This technique is called a [homograph attack](https://en.wikipedia.org/wiki/IDN_homograph_attack).  The attacker tries to deceive users by replacing one or more characters in the URL with similar-looking characters from another character script.  The following displays hits that we have seen over last three months for phishing activity on mobile devices targeted with Punycode URLs.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/ZDF.png)  Figure 1: Hits seen for SMiShing activity targeting mobile devices with Punycode URLs from <TIMEX3 tid="t2" type="DATE" value="2018-03-01">March 1</TIMEX3> to <TIMEX3 tid="t3" type="DATE" value="2018-05-28">May 28, 2018</TIMEX3>.  Let’s look at a recent example that shows a WhatsApp message pretending to be a link to a Jet Airways offer of free air tickets.  The link is designed to look like the actual jetairways.com website, but it is using a homograph attack, in which look-alike characters are used to trick the victims.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/whatsapp_message.png)  Figure 2: WhatsApp message on a group pretending to be a link for free tickets.  If you look closely at the character “i” in the URL domain label, you can see that it is a homograph from the Latin character set.  More precisely, it is a Unicode Character “Latin small letter dotless I” (U+0131) that replaces the letter “i” in “airways.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/UTF.png)  Figure 3: Decoding the homograph domain label.  If the user clicks this link on an iPhone, it opens the Safari web browser and tries to load the phishing website.  Notice that the URL looks like jetairways.com; it is difficult to detect that it is not the true site.  **![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/WhatsApp%20Image%202018-05-23%20at%2012.37.34%20PM.jpeg)**  Figure 4: Safari Browser on iPhone showing URL in original IDN (Internationalized Domain Name) format.  Not all browsers treat IDN URLs equally, in the image below we see that Google Chrome on an Android phone shows the user the URL in Punycode format.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/Android_Updated.png)  Figure 5: Google Chrome browser on an Andorid phone showing the URL in Punycode instead of IDN format.  The Web browsers decide whether to display the IDN or Punycode format based on conditions like the presence of certain characters which can spoof the separators like ". or "/", determining whether all characters come from same language, if characters belong to allowable combinations or by checking if the domain belongs to whitelisted TLDs.   The algorithm for this is detailed [here](https://wiki.mozilla.org/IDN_Display_Algorithm#Algorithm).  Google Chrome has also adopted a similar set of rules as followed by Mozilla Firefox as detailed [here](https://www.chromium.org/developers/design-documents/idn-in-google-chrome).  Browsers can make these decisions based on restriction levels as classified [here](http://www.unicode.org/reports/tr39/#Restriction_Level_Detection).  The different behavior to IDN domain labels by common web browsers is seen below.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/Browser_Behavior.png)  Figure 6: Different behavior seen for IDN domains on common browsers.  Coming back to our current example, if we check the domain history for this domain on Domaintools it shows that the domain was newly registered within the last two weeks.  **![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/2018-05-23%2012_43_54-Jeta%C4%B1rways.com%20WHOIS%2C%20DNS%2C%20%26%20Domain%20Info%20-%20DomainTools.png)**  Figure 7: Domain registration information.  The full cycle of this phishing attack can be seen in the screenshot below,  ![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/smishing/Fiddler.png)  Figure 8: Phishing cycle showing a screenshot of phishing webpage.  We can see that after being served the phishing page, the victim is redirected to another domain, newuewfarben[.]com, which can be used to serve malware.  At the time of testing, this URL was inactive.  Conclusion:  -----------  SMiShing has been on a rise in year <TIMEX3 tid="t4" type="DATE" value="2018">2018</TIMEX3> and the addition of homograph technique will continue to make it more effective against unsuspecting mobile users.  Web browsers have implemented protections against homograph attacks, but because of the legitimate use of Punycode characters, it becomes very difficult for the developers to implement a foolproof fix.  Attackers leverage this to work around the rules and create homographs which are displayed as IDNs despite being malicious in nature.  Zscaler ThreatLabZ is actively monitoring such attacks, to ensure that Zscaler customers are protected.  **How can users protect themselves?**  Users should exercise caution before clicking on any links shared via SMS or IM application, even when they are from trusted contacts.  The IDN format display is controlled by the browsers design and end users have limited control over how the URL is being displayed.  The primary and most effective option would be to make use of password managers which check the URLs before entering the passwords into the website, this reduces the chances of users entering credentials to a homograph URL phishing website.  The secondary check would be to carefully observe the URLs to spot any obvious character switches.  
</TEXT>
</TimeML>