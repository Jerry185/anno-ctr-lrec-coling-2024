<DOCSTART>	O	O	O	O	O	O

Analysis	O	O	O	O	O	O
Of	O	O	O	O	O	O
A	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
Bot	O	O	O	O	O	O

January	O	O	B-DATE	O	O	B-DATE
24	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2014	O	O	I-DATE	O	O	I-DATE

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Introduction	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
 	O	O	O	O	O	O

In	O	O	O	O	O	O
the	O	O	O	O	O	O
long	O	O	O	O	O	O
list	O	O	O	O	O	O
of	O	O	O	O	O	O
complex	O	O	O	O	O	O
threats	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
see	O	O	O	O	O	O
daily	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
is	O	O	O	O	O	O
interesting	O	O	O	O	O	O
to	O	O	O	O	O	O
see	O	O	O	O	O	O
malware	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
rather	O	O	O	O	O	O
simple	O	O	O	O	O	O
but	O	O	O	O	O	O
effective	O	O	O	O	O	O
in	O	O	O	O	O	O
terms	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
that	O	O	O	O	O	O
it	O	O	O	O	O	O
carries	O	O	O	O	O	O
.	O	O	O	O	O	O

At	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
recently	O	O	O	O	O	O
 	O	O	O	O	O	O
came	O	O	O	O	O	O
across	O	O	O	O	O	O
one	O	O	O	O	O	O
such	O	O	O	O	O	O
innocent	O	O	O	O	O	O
looking	O	O	O	O	O	O
Bot	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
targeted	O	O	O	O	O	O
our	O	O	O	O	O	O
customers	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
file	O	O	O	O	O	O
arrived	O	O	O	O	O	O
as	O	O	O	O	O	O
an	O	O	O	O	O	O
attachment	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
spam	O	O	O	O	O	O
email	O	O	O	O	O	O
message	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
malware	O	O	O	O	O	O
was	O	O	O	O	O	O
written	O	O	O	O	O	O
in	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Analysis	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
  	O	O	O	O	O	O

Virustotal	O	O	O	O	O	O
scan	O	O	O	O	O	O
results	O	O	O	O	O	O
show	O	O	O	O	O	O
14	O	O	O	O	O	O
out	O	O	O	O	O	O
of	O	O	O	O	O	O
50	O	O	O	O	O	O
vendors	O	O	O	O	O	O
detecting	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
Virus-total	O	O	O	O	O	O
Result	O	O	O	O	O	O
|	O	O	O	O	O	O

The	O	O	O	O	O	O
image	O	O	O	O	O	O
below	O	O	O	O	O	O
shows	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
opened	O	O	O	O	O	O
in	O	O	O	O	O	O
notepad	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
can	O	O	O	O	O	O
see	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
file	O	O	O	O	O	O
is	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
.	O	O	O	O	O	O

That	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
because	O	O	O	O	O	O
the	O	O	O	O	O	O
file	O	O	O	O	O	O
has	O	O	O	O	O	O
a	O	O	O	O	O	O
“	O	O	O	O	O	O
.	O	O	O	O	O	O
vbe	O	O	O	O	O	O
”	O	O	O	O	O	O
extension	O	O	O	O	O	O
(	O	O	O	O	O	O
a	O	O	O	O	O	O
“	O	O	O	O	O	O
.	O	O	O	O	O	O
vbe	O	O	O	O	O	O
”	O	O	O	O	O	O
is	O	O	O	O	O	O
an	O	O	O	O	O	O
encoded	O	O	O	O	O	O
VBscript	O	O	O	O	O	O
file	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
would	O	O	O	O	O	O
otherwise	O	O	O	O	O	O
have	O	O	O	O	O	O
a	O	O	O	O	O	O
“	O	O	O	O	O	O
.	O	O	O	O	O	O
vbs	O	O	O	O	O	O
”	O	O	O	O	O	O
extension	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
encoding	O	O	O	O	O	O
support	O	O	O	O	O	O
is	O	O	O	O	O	O
provided	O	O	O	O	O	O
to	O	O	O	O	O	O
prevent	O	O	O	O	O	O
people	O	O	O	O	O	O
from	O	O	O	O	O	O
reading	O	O	O	O	O	O
the	O	O	O	O	O	O
script	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
2	O	O	O	O	O	O
:	O	O	O	O	O	O
Obfuscated	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
|	O	O	O	O	O	O

To	O	O	O	O	O	O
be	O	O	O	O	O	O
persistent	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
copies	O	O	O	O	O	O
itself	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
startup	O	O	O	O	O	O
folder	O	O	O	O	O	O
in	O	O	O	O	O	O
Windows	O	O	O	O	O	O
(	O	O	O	O	O	O
Figure	O	O	O	O	O	O
3	O	O	O	O	O	O
)	O	O	O	O	O	O
  	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
Copy	O	O	O	O	O	O
of	O	O	O	O	O	O
Malware	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
startup	O	O	O	O	O	O
folder	O	O	O	O	O	O
|	O	O	O	O	O	O

Registry	O	O	O	O	O	O
entry	O	O	O	O	O	O
created	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
to	O	O	O	O	O	O
run	O	O	O	O	O	O
itself	O	O	O	O	O	O
at	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
startup	O	O	O	O	O	O
.	O	O	O	O	O	O
(	O	O	O	O	O	O
Figure	O	O	O	O	O	O
4	O	O	O	O	O	O
)	O	O	O	O	O	O
  	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
4	O	O	O	O	O	O
:	O	O	O	O	O	O
Windows	O	O	O	O	O	O
Registry	O	O	O	O	O	O
(	O	O	O	O	O	O
run	O	O	O	O	O	O
entry	O	O	O	O	O	O
)	O	O	O	O	O	O
|	O	O	O	O	O	O

It	O	O	O	O	O	O
also	O	O	O	O	O	O
adds	O	O	O	O	O	O
a	O	O	O	O	O	O
copy	O	O	O	O	O	O
of	O	O	O	O	O	O
itself	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
Windows	O	O	O	O	O	O
temporary	O	O	O	O	O	O
folder	O	O	O	O	O	O
(	O	O	O	O	O	O
Figure	O	O	O	O	O	O
5	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
5	O	O	O	O	O	O
:	O	O	O	O	O	O
Copy	O	O	O	O	O	O
of	O	O	O	O	O	O
Malware	O	O	O	O	O	O
in	O	O	O	O	O	O
temp	O	O	O	O	O	O
folder	O	O	O	O	O	O
|	O	O	O	O	O	O

Next	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
attempts	O	O	O	O	O	O
to	O	O	O	O	O	O
establish	O	O	O	O	O	O
a	O	O	O	O	O	O
connection	O	O	O	O	O	O
to	O	O	O	O	O	O
it's	O	O	O	O	O	O
server	O	O	O	O	O	O
(	O	O	O	O	O	O
here	O	O	O	O	O	O
wscript.exe	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
Script	O	O	O	O	O	O
Engine	O	O	O	O	O	O
which	O	O	O	O	O	O
executes	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
6	O	O	O	O	O	O
:	O	O	O	O	O	O
Network	O	O	O	O	O	O
communication	O	O	O	O	O	O
|	O	O	O	O	O	O

To	O	O	O	O	O	O
extract	O	O	O	O	O	O
more	O	O	O	O	O	O
information	O	O	O	O	O	O
we	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
decode	O	O	O	O	O	O
the	O	O	O	O	O	O
file	O	O	O	O	O	O
and	O	O	O	O	O	O
obtain	O	O	O	O	O	O
the	O	O	O	O	O	O
original	O	O	O	O	O	O
malware	O	O	O	O	O	O
code	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
readable	O	O	O	O	O	O
form	O	O	O	O	O	O
.	O	O	O	O	O	O

Let's	O	O	O	O	O	O
have	O	O	O	O	O	O
a	O	O	O	O	O	O
look	O	O	O	O	O	O
at	O	O	O	O	O	O
the	O	O	O	O	O	O
decoded	O	O	O	O	O	O
file	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
7	O	O	O	O	O	O
:	O	O	O	O	O	O
Malware	O	O	O	O	O	O
install	O	O	O	O	O	O
code	O	O	O	O	O	O
|	O	O	O	O	O	O

The	O	O	O	O	O	O
image	O	O	O	O	O	O
above	O	O	O	O	O	O
shows	O	O	O	O	O	O
the	O	O	O	O	O	O
code	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
responsible	O	O	O	O	O	O
for	O	O	O	O	O	O
adding	O	O	O	O	O	O
entry	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
registry	O	O	O	O	O	O
which	O	O	O	O	O	O
 	O	O	O	O	O	O
allows	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
to	O	O	O	O	O	O
execute	O	O	O	O	O	O
every	O	O	O	O	O	O
time	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
starts	O	O	O	O	O	O
,	O	O	O	O	O	O
Also	O	O	O	O	O	O
create	O	O	O	O	O	O
it's	O	O	O	O	O	O
own	O	O	O	O	O	O
copy	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
startup	O	O	O	O	O	O
,	O	O	O	O	O	O
temporary	O	O	O	O	O	O
folder	O	O	O	O	O	O
.	O	O	O	O	O	O

Another	O	O	O	O	O	O
interesting	O	O	O	O	O	O
part	O	O	O	O	O	O
of	O	O	O	O	O	O
this	O	O	O	O	O	O
malware	O	O	O	O	O	O
is	O	O	O	O	O	O
it's	O	O	O	O	O	O
ability	O	O	O	O	O	O
to	O	O	O	O	O	O
communicate	O	O	O	O	O	O
over	O	O	O	O	O	O
the	O	O	O	O	O	O
network	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
malware	O	O	O	O	O	O
can	O	O	O	O	O	O
actually	O	O	O	O	O	O
receive	O	O	O	O	O	O
a	O	O	O	O	O	O
set	O	O	O	O	O	O
of	O	O	O	O	O	O
commands	O	O	O	O	O	O
and	O	O	O	O	O	O
execute	O	O	O	O	O	O
them	O	O	O	O	O	O
in	O	O	O	O	O	O
an	O	O	O	O	O	O
infected	O	O	O	O	O	O
machine	O	O	O	O	O	O

At	O	O	O	O	O	O
the	O	O	O	O	O	O
time	O	O	O	O	O	O
of	O	O	O	O	O	O
analysis	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
to	O	O	O	O	O	O
which	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
communicates	O	O	O	O	O	O
seems	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
down	O	O	O	O	O	O
.	O	O	O	O	O	O

Therefore	O	O	O	O	O	O
,	O	O	O	O	O	O
in	O	O	O	O	O	O
order	O	O	O	O	O	O
to	O	O	O	O	O	O
fully	O	O	O	O	O	O
understand	O	O	O	O	O	O
how	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
communicates	O	O	O	O	O	O
and	O	O	O	O	O	O
also	O	O	O	O	O	O
to	O	O	O	O	O	O
demonstrate	O	O	O	O	O	O
how	O	O	O	O	O	O
effective	O	O	O	O	O	O
and	O	O	O	O	O	O
damaging	O	O	O	O	O	O
this	O	O	O	O	O	O
Bot	O	O	O	O	O	O
is	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
have	O	O	O	O	O	O
decided	O	O	O	O	O	O
to	O	O	O	O	O	O
create	O	O	O	O	O	O
an	O	O	O	O	O	O
HTTP	O	O	O	O	O	O
server	O	O	O	O	O	O
and	O	O	O	O	O	O
issue	O	O	O	O	O	O
commands	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
bot	O	O	O	O	O	O
directly	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
can	O	O	O	O	O	O
see	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
code	O	O	O	O	O	O
below	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
wide	O	O	O	O	O	O
range	O	O	O	O	O	O
of	O	O	O	O	O	O
commands	O	O	O	O	O	O
that	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
executed	O	O	O	O	O	O
by	O	O	O	O	O	O
this	O	O	O	O	O	O
Bot	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
commands	O	O	O	O	O	O
are	O	O	O	O	O	O
simple	O	O	O	O	O	O
and	O	O	O	O	O	O
self	O	O	O	O	O	O
explanatory	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
8	O	O	O	O	O	O
:	O	O	O	O	O	O
Remote	O	O	O	O	O	O
Commands	O	O	O	O	O	O
|	O	O	O	O	O	O

Let's	O	O	O	O	O	O
see	O	O	O	O	O	O
the	O	O	O	O	O	O
effects	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
few	O	O	O	O	O	O
of	O	O	O	O	O	O
these	O	O	O	O	O	O
commands	O	O	O	O	O	O
in	O	O	O	O	O	O
detail	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
“	O	O	O	O	O	O
execute	O	O	O	O	O	O
”	O	O	O	O	O	O
command	O	O	O	O	O	O
is	O	O	O	O	O	O
capable	O	O	O	O	O	O
of	O	O	O	O	O	O
executing	O	O	O	O	O	O
additional	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
statements	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
machine	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
“	O	O	O	O	O	O
update	O	O	O	O	O	O
”	O	O	O	O	O	O
command	O	O	O	O	O	O
is	O	O	O	O	O	O
issued	O	O	O	O	O	O
to	O	O	O	O	O	O
update	O	O	O	O	O	O
the	O	O	O	O	O	O
Bot	O	O	O	O	O	O
,	O	O	O	O	O	O
while	O	O	O	O	O	O
“	O	O	O	O	O	O
uninstall	O	O	O	O	O	O
”	O	O	O	O	O	O
removes	O	O	O	O	O	O
the	O	O	O	O	O	O
Bot	O	O	O	O	O	O
entry	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
Windows	O	O	O	O	O	O
registry	O	O	O	O	O	O
and	O	O	O	O	O	O
startup	O	O	O	O	O	O
folder	O	O	O	O	O	O
.	O	O	O	O	O	O

There	O	O	O	O	O	O
are	O	O	O	O	O	O
also	O	O	O	O	O	O
commands	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
“	O	O	O	O	O	O
send	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
”	O	O	O	O	O	O
recv	O	O	O	O	O	O
”	O	O	O	O	O	O
and	O	O	O	O	O	O
“	O	O	O	O	O	O
site-send	O	O	O	O	O	O
”	O	O	O	O	O	O
.	O	O	O	O	O	O

Interesting	O	O	O	O	O	O
commands	O	O	O	O	O	O
include	O	O	O	O	O	O
“	O	O	O	O	O	O
enum-driver	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
enum-faf	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
enum-process	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
cmd-shell	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
delete	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
exitprocess	O	O	O	O	O	O
”	O	O	O	O	O	O
.	O	O	O	O	O	O

Let	O	O	O	O	O	O
us	O	O	O	O	O	O
execute	O	O	O	O	O	O
our	O	O	O	O	O	O
server	O	O	O	O	O	O
and	O	O	O	O	O	O
wait	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
Bot	O	O	O	O	O	O
to	O	O	O	O	O	O
connect	O	O	O	O	O	O
to	O	O	O	O	O	O
us	O	O	O	O	O	O
and	O	O	O	O	O	O
send	O	O	O	O	O	O
information	O	O	O	O	O	O
so	O	O	O	O	O	O
we	O	O	O	O	O	O
can	O	O	O	O	O	O
then	O	O	O	O	O	O
issue	O	O	O	O	O	O
commands	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
9	O	O	O	O	O	O
:	O	O	O	O	O	O
Malware	O	O	O	O	O	O
callback	O	O	O	O	O	O
|	O	O	O	O	O	O

As	O	O	O	O	O	O
seen	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
image	O	O	O	O	O	O
above	O	O	O	O	O	O
,	O	O	O	O	O	O
a	O	O	O	O	O	O
“	O	O	O	O	O	O
POST	O	O	O	O	O	O
”	O	O	O	O	O	O
request	O	O	O	O	O	O
is	O	O	O	O	O	O
made	O	O	O	O	O	O
with	O	O	O	O	O	O
it's	O	O	O	O	O	O
path	O	O	O	O	O	O
as	O	O	O	O	O	O
“	O	O	O	O	O	O
/	O	O	O	O	O	O
is-ready	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
indicatingthat	O	O	O	O	O	O
the	O	O	O	O	O	O
Bot	O	O	O	O	O	O
is	O	O	O	O	O	O
up	O	O	O	O	O	O
and	O	O	O	O	O	O
ready	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
can	O	O	O	O	O	O
also	O	O	O	O	O	O
observe	O	O	O	O	O	O
information	O	O	O	O	O	O
about	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
machine	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
“	O	O	O	O	O	O
volumeserialnumber	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
computername	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
username	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
operating	O	O	O	O	O	O
system	O	O	O	O	O	O
type	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
installed	O	O	O	O	O	O
“	O	O	O	O	O	O
anti-virus	O	O	O	O	O	O
name	O	O	O	O	O	O
”	O	O	O	O	O	O
etc	O	O	O	O	O	O
.	O	O	O	O	O	O

To	O	O	O	O	O	O
retrieve	O	O	O	O	O	O
such	O	O	O	O	O	O
information	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
relies	O	O	O	O	O	O
on	O	O	O	O	O	O
Windows	O	O	O	O	O	O
Management	O	O	O	O	O	O
Instrumentation	O	O	O	O	O	O
(	O	O	O	O	O	O
WMI	O	O	O	O	O	O
)	O	O	O	O	O	O
queries	O	O	O	O	O	O
.	O	O	O	O	O	O

Let	O	O	O	O	O	O
us	O	O	O	O	O	O
issue	O	O	O	O	O	O
the	O	O	O	O	O	O
command	O	O	O	O	O	O
“	O	O	O	O	O	O
enum-driver	O	O	O	O	O	O
”	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
command	O	O	O	O	O	O
fetches	O	O	O	O	O	O
the	O	O	O	O	O	O
drive	O	O	O	O	O	O
name	O	O	O	O	O	O
and	O	O	O	O	O	O
drive	O	O	O	O	O	O
type	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
machine	O	O	O	O	O	O
as	O	O	O	O	O	O
seen	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
image	O	O	O	O	O	O
below	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
10	O	O	O	O	O	O
:	O	O	O	O	O	O
enum-drive	O	O	O	O	O	O
|	O	O	O	O	O	O

The	O	O	O	O	O	O
next	O	O	O	O	O	O
command	O	O	O	O	O	O
“	O	O	O	O	O	O
enum-faf	O	O	O	O	O	O
”	O	O	O	O	O	O
enumerates	O	O	O	O	O	O
and	O	O	O	O	O	O
fetches	O	O	O	O	O	O
the	O	O	O	O	O	O
content	O	O	O	O	O	O
of	O	O	O	O	O	O
an	O	O	O	O	O	O
input	O	O	O	O	O	O
directory	O	O	O	O	O	O
or	O	O	O	O	O	O
drive	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
machine	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
11	O	O	O	O	O	O
:	O	O	O	O	O	O
enum	O	O	O	O	O	O
files	O	O	O	O	O	O
 	O	O	O	O	O	O
|	O	O	O	O	O	O

The	O	O	O	O	O	O
“	O	O	O	O	O	O
enum-process	O	O	O	O	O	O
”	O	O	O	O	O	O
command	O	O	O	O	O	O
fetches	O	O	O	O	O	O
a	O	O	O	O	O	O
list	O	O	O	O	O	O
of	O	O	O	O	O	O
processes	O	O	O	O	O	O
that	O	O	O	O	O	O
are	O	O	O	O	O	O
running	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
system	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
12	O	O	O	O	O	O
:	O	O	O	O	O	O
enum-process	O	O	O	O	O	O
|	O	O	O	O	O	O

The	O	O	O	O	O	O
“	O	O	O	O	O	O
cmd-shell	O	O	O	O	O	O
”	O	O	O	O	O	O
command	O	O	O	O	O	O
will	O	O	O	O	O	O
allow	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
to	O	O	O	O	O	O
execute	O	O	O	O	O	O
all	O	O	O	O	O	O
DOS	O	O	O	O	O	O
commands	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
infectedsystem	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Figure	O	O	O	O	O	O
13	O	O	O	O	O	O
:	O	O	O	O	O	O
Execute	O	O	O	O	O	O
Dos	O	O	O	O	O	O
Command	O	O	O	O	O	O
|	O	O	O	O	O	O

Those	O	O	O	O	O	O
are	O	O	O	O	O	O
just	O	O	O	O	O	O
a	O	O	O	O	O	O
few	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
powerful	O	O	O	O	O	O
commands	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
can	O	O	O	O	O	O
execute	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
system	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
gives	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
near	O	O	O	O	O	O
limitless	O	O	O	O	O	O
power	O	O	O	O	O	O
to	O	O	O	O	O	O
control	O	O	O	O	O	O
and	O	O	O	O	O	O
steal	O	O	O	O	O	O
data	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
machine	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Bot	O	O	O	O	O	O
and	O	O	O	O	O	O
all	O	O	O	O	O	O
it's	O	O	O	O	O	O
communication	O	O	O	O	O	O
are	O	O	O	O	O	O
blocked	O	O	O	O	O	O
by	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
.	O	O	O	O	O	O

