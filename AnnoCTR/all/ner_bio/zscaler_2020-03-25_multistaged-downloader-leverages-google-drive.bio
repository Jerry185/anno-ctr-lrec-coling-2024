<DOCSTART>	O	O	O	O	O	O

Multistaged	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
Leverages	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
to	O	O	O	O	O	O
Download	O	O	O	O	O	O
Advanced	O	O	O	O	O	O
Malware	O	O	O	O	O	O

March	O	O	B-DATE	O	O	B-DATE
25	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2020	O	O	I-DATE	O	O	I-DATE

Ever	O	O	O	O	O	O
use	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
.	O	O	O	O	O	O

Of	O	O	O	O	O	O
course	O	O	O	O	O	O
you	O	O	O	O	O	O
have—you	O	O	O	O	O	O
and	O	O	O	O	O	O
approximately	O	O	O	O	O	O
1	O	O	O	O	O	O
billion	O	O	O	O	O	O
other	O	O	O	O	O	O
people	O	O	O	O	O	O
.	O	O	O	O	O	O

And	O	O	O	O	O	O
it	O	O	O	O	O	O
is	O	O	O	O	O	O
estimated	O	O	O	O	O	O
that	O	O	O	O	O	O
those	O	O	O	O	O	O
1	O	O	O	O	O	O
billion	O	O	O	O	O	O
users	O	O	O	O	O	O
have	O	O	O	O	O	O
loaded	O	O	O	O	O	O
more	O	O	O	O	O	O
than	O	O	O	O	O	O
[	O	O	O	O	O	O
2	O	O	O	O	O	O
trillion	O	O	O	O	O	O
files	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.businessinsider.com	O	O	O	O	O	O
/	O	O	O	O	O	O
2	O	O	O	O	O	O
-	O	O	O	O	O	O
trillion-files-google-drive-exec-prabhakar-raghavan	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
-	O	O	O	O	O	O
5	O	O	O	O	O	O
)	O	O	O	O	O	O
on	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
.	O	O	O	O	O	O

So	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
a	O	O	O	O	O	O
pretty	O	O	O	O	O	O
big	O	O	O	O	O	O
deal	O	O	O	O	O	O
when	O	O	O	O	O	O
a	O	O	O	O	O	O
cyberattack	O	O	O	O	O	O
uses	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
to	O	O	O	O	O	O
deliver	O	O	O	O	O	O
its	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

That	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
exactly	O	O	O	O	O	O
what	O	O	O	O	O	O
was	O	O	O	O	O	O
happening	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
downloader	O	O	O	O	O	O
being	O	O	O	O	O	O
tracked	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
[	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
team	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
threatlabz	O	O	O	O	O	O
/	O	O	O	O	O	O
threat-map-dashboard	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

As	O	O	O	O	O	O
you	O	O	O	O	O	O
may	O	O	O	O	O	O
know	O	O	O	O	O	O
,	O	O	O	O	O	O
downloaders	O	O	O	O	O	O
are	O	O	O	O	O	O
often	O	O	O	O	O	O
considered	O	O	O	O	O	O
the	O	O	O	O	O	O
first	O	O	O	O	O	O
stage	O	O	O	O	O	O
of	O	O	O	O	O	O
infection	O	O	O	O	O	O
.	O	O	O	O	O	O

They	O	O	O	O	O	O
usually	O	O	O	O	O	O
contain	O	O	O	O	O	O
 	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
codes	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
the	O	O	O	O	O	O
actual	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

Sometimes	O	O	O	O	O	O
they	O	O	O	O	O	O
also	O	O	O	O	O	O
have	O	O	O	O	O	O
some	O	O	O	O	O	O
anti-debugging	O	O	O	O	O	O
and	O	O	O	O	O	O
evasion	O	O	O	O	O	O
techniques	O	O	O	O	O	O
to	O	O	O	O	O	O
safeguard	O	O	O	O	O	O
the	O	O	O	O	O	O
actual	O	O	O	O	O	O
payload	O	O	O	O	O	O
from	O	O	O	O	O	O
being	O	O	O	O	O	O
detected	O	O	O	O	O	O
by	O	O	O	O	O	O
anti-malware	O	O	O	O	O	O
programs	O	O	O	O	O	O
.	O	O	O	O	O	O

Downloaders	O	O	O	O	O	O
often	O	O	O	O	O	O
provide	O	O	O	O	O	O
attackers	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
ability	O	O	O	O	O	O
to	O	O	O	O	O	O
gain	O	O	O	O	O	O
an	O	O	O	O	O	O
initial	O	O	O	O	O	O
foothold	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
team	O	O	O	O	O	O
was	O	O	O	O	O	O
tracking	O	O	O	O	O	O
a	O	O	O	O	O	O
highly	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
downloader	O	O	O	O	O	O
known	O	O	O	O	O	O
as	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Downloader.EdLoader	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
(	O	O	O	O	O	O
the	O	O	O	O	O	O
name	O	O	O	O	O	O
was	O	O	O	O	O	O
given	O	O	O	O	O	O
by	O	O	O	O	O	O
a	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
researcher	O	O	O	O	O	O
)	O	O	O	O	O	O
that	O	O	O	O	O	O
has	O	O	O	O	O	O
employed	O	O	O	O	O	O
some	O	O	O	O	O	O
anti-analysis	O	O	O	O	O	O
techniques	O	O	O	O	O	O
to	O	O	O	O	O	O
make	O	O	O	O	O	O
analysis	O	O	O	O	O	O
more	O	O	O	O	O	O
difficult	O	O	O	O	O	O
and	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
actively	O	O	O	O	O	O
spreading	O	O	O	O	O	O
during	O	O	O	O	O	O
the	O	O	O	O	O	O
past	O	O	O	O	O	O
few	O	O	O	O	O	O
months	O	O	O	O	O	O
via	O	O	O	O	O	O
a	O	O	O	O	O	O
different	O	O	O	O	O	O
mechanism	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
interesting	O	O	O	O	O	O
part	O	O	O	O	O	O
of	O	O	O	O	O	O
this	O	O	O	O	O	O
downloader	O	O	O	O	O	O
is	O	O	O	O	O	O
that	O	O	O	O	O	O
it	O	O	O	O	O	O
is	O	O	O	O	O	O
leveraging	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
the	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
this	O	O	O	O	O	O
blog	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
’	O	O	O	O	O	O
ll	O	O	O	O	O	O
share	O	O	O	O	O	O
our	O	O	O	O	O	O
analysis	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
campaign	O	O	O	O	O	O
using	O	O	O	O	O	O
a	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
exploit	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
initial	O	O	O	O	O	O
phase	O	O	O	O	O	O
and	O	O	O	O	O	O
its	O	O	O	O	O	O
use	O	O	O	O	O	O
of	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
a	O	O	O	O	O	O
different	O	O	O	O	O	O
password	O	O	O	O	O	O
stealer	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
later	O	O	O	O	O	O
phase	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Samples	O	O	O	O	O	O
observed	O	O	O	O	O	O
in	O	O	O	O	O	O
ZScaler	O	O	O	O	O	O
cloud	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
ZDF	O	O	O	O	O	O
%	O	O	O	O	O	O
20dashboard.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
Samples	O	O	O	O	O	O
observed	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
cloud	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
The	O	O	O	O	O	O
spreading	O	O	O	O	O	O
mechanism	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

This	O	O	O	O	O	O
downloader	O	O	O	O	O	O
basically	O	O	O	O	O	O
comes	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
via	O	O	O	O	O	O
spamming	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
.	O	O	O	O	O	O

During	O	O	O	O	O	O
the	O	O	O	O	O	O
past	O	O	O	O	O	O
few	O	O	O	O	O	O
months	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
’	O	O	O	O	O	O
ve	O	O	O	O	O	O
seen	O	O	O	O	O	O
multiple	O	O	O	O	O	O
spam	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
featuring	O	O	O	O	O	O
various	O	O	O	O	O	O
email	O	O	O	O	O	O
templates	O	O	O	O	O	O
having	O	O	O	O	O	O
language	O	O	O	O	O	O
specific	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
country	O	O	O	O	O	O
being	O	O	O	O	O	O
targeted	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Geo	O	O	O	O	O	O
regions	O	O	O	O	O	O
of	O	O	O	O	O	O
infection	O	O	O	O	O	O
observed	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Region.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
2	O	O	O	O	O	O
:	O	O	O	O	O	O
Geographical	O	O	O	O	O	O
regions	O	O	O	O	O	O
hit	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
infection	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

Let	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
take	O	O	O	O	O	O
a	O	O	O	O	O	O
look	O	O	O	O	O	O
at	O	O	O	O	O	O
how	O	O	O	O	O	O
the	O	O	O	O	O	O
mechanisms	O	O	O	O	O	O
that	O	O	O	O	O	O
help	O	O	O	O	O	O
the	O	O	O	O	O	O
infection	O	O	O	O	O	O
spread	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Infection	O	O	O	O	O	O
Flow	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Infection	O	O	O	O	O	O
%	O	O	O	O	O	O
20flow.jpg	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
workflow	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
infection	O	O	O	O	O	O
chain	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
user	O	O	O	O	O	O
receives	O	O	O	O	O	O
an	O	O	O	O	O	O
email	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
contains	O	O	O	O	O	O
the	O	O	O	O	O	O
malicious	O	O	O	O	O	O
attachment	O	O	O	O	O	O
in	O	O	O	O	O	O
either	O	O	O	O	O	O
RTF	O	O	O	O	O	O
or	O	O	O	O	O	O
XLSM	O	O	O	O	O	O
format	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Mail	O	O	O	O	O	O
template	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
mail	O	O	O	O	O	O
%	O	O	O	O	O	O
20template1	O	O	O	O	O	O
_	O	O	O	O	O	O
0	O	O	O	O	O	O
.	O	O	O	O	O	O
PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
4	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
email	O	O	O	O	O	O
template	O	O	O	O	O	O
a	O	O	O	O	O	O
user	O	O	O	O	O	O
receives	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

This	O	O	O	O	O	O
malicious	O	O	O	O	O	O
attachment	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
RTF	O	O	O	O	O	O
document	O	O	O	O	O	O
contains	O	O	O	O	O	O
Excel	O	O	O	O	O	O
sheets	O	O	O	O	O	O
that	O	O	O	O	O	O
leverage	O	O	O	O	O	O
the	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
CVE	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
-	O	O	O	O	O	O
8570	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
exploit	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
the	O	O	O	O	O	O
initial	O	O	O	O	O	O
payload	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
victim	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
machine	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
RTF	O	O	O	O	O	O
document	O	O	O	O	O	O
with	O	O	O	O	O	O
embedded	O	O	O	O	O	O
object	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
object	O	O	O	O	O	O
%	O	O	O	O	O	O
20click	O	O	O	O	O	O
%	O	O	O	O	O	O
20msg.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
5	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
RTF	O	O	O	O	O	O
document	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
embedded	O	O	O	O	O	O
object	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
CVE	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
-	O	O	O	O	O	O
8570	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
exploit	O	O	O	O	O	O
makes	O	O	O	O	O	O
use	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
composite	O	O	O	O	O	O
moniker	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
RTF	O	O	O	O	O	O
document	O	O	O	O	O	O
to	O	O	O	O	O	O
execute	O	O	O	O	O	O
a	O	O	O	O	O	O
scriptlet	O	O	O	O	O	O
of	O	O	O	O	O	O
an	O	O	O	O	O	O
XML	O	O	O	O	O	O
file	O	O	O	O	O	O
wrapping	O	O	O	O	O	O
the	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
this	O	O	O	O	O	O
case	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
RTF	O	O	O	O	O	O
document	O	O	O	O	O	O
has	O	O	O	O	O	O
two	O	O	O	O	O	O
ObjData	O	O	O	O	O	O
files	O	O	O	O	O	O
,	O	O	O	O	O	O
one	O	O	O	O	O	O
of	O	O	O	O	O	O
which	O	O	O	O	O	O
has	O	O	O	O	O	O
an	O	O	O	O	O	O
SCT	O	O	O	O	O	O
file	O	O	O	O	O	O
encoded	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
SCT	O	O	O	O	O	O
file	O	O	O	O	O	O
is	O	O	O	O	O	O
then	O	O	O	O	O	O
dropped	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
%	O	O	O	O	O	O
TEMP	O	O	O	O	O	O
%	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
folder	O	O	O	O	O	O
and	O	O	O	O	O	O
executed	O	O	O	O	O	O
by	O	O	O	O	O	O
a	O	O	O	O	O	O
second	O	O	O	O	O	O
ObjData	O	O	O	O	O	O
file	O	O	O	O	O	O
embedded	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
RTF	O	O	O	O	O	O
document	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
SCT	O	O	O	O	O	O
file	O	O	O	O	O	O
with	O	O	O	O	O	O
XML	O	O	O	O	O	O
scriptlet	O	O	O	O	O	O
wrapping	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloading	O	O	O	O	O	O
%	O	O	O	O	O	O
20URL.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
6	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
SCT	O	O	O	O	O	O
file	O	O	O	O	O	O
with	O	O	O	O	O	O
an	O	O	O	O	O	O
XML	O	O	O	O	O	O
scriptlet	O	O	O	O	O	O
wrapping	O	O	O	O	O	O
the	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
SCT	O	O	O	O	O	O
file	O	O	O	O	O	O
contains	O	O	O	O	O	O
a	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
URL	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
Base64	O	O	O	O	O	O
,	O	O	O	O	O	O
downloads	O	O	O	O	O	O
the	O	O	O	O	O	O
initial	O	O	O	O	O	O
payload	O	O	O	O	O	O
via	O	O	O	O	O	O
a	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
command	O	O	O	O	O	O
and	O	O	O	O	O	O
saves	O	O	O	O	O	O
it	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
%	O	O	O	O	O	O
APPDATA	O	O	O	O	O	O
%	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
folder	O	O	O	O	O	O
,	O	O	O	O	O	O
then	O	O	O	O	O	O
executes	O	O	O	O	O	O
it	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Powershell	O	O	O	O	O	O
cmd	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
scT	O	O	O	O	O	O
file	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Powershellcmd.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
7	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
command	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
SCT	O	O	O	O	O	O
file	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

A	O	O	O	O	O	O
few	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
malicious	O	O	O	O	O	O
attachments	O	O	O	O	O	O
are	O	O	O	O	O	O
XLSM	O	O	O	O	O	O
files	O	O	O	O	O	O
having	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
malicious	O	O	O	O	O	O
macros	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
function	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Sub	O	O	O	O	O	O
Auto	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
Open	O	O	O	O	O	O
(	O	O	O	O	O	O
)	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

When	O	O	O	O	O	O
a	O	O	O	O	O	O
victim	O	O	O	O	O	O
opens	O	O	O	O	O	O
the	O	O	O	O	O	O
Excel	O	O	O	O	O	O
file	O	O	O	O	O	O
,	O	O	O	O	O	O
a	O	O	O	O	O	O
macro	O	O	O	O	O	O
code	O	O	O	O	O	O
will	O	O	O	O	O	O
be	O	O	O	O	O	O
automatically	O	O	O	O	O	O
executed	O	O	O	O	O	O
.	O	O	O	O	O	O

Here	O	O	O	O	O	O
also	O	O	O	O	O	O
,	O	O	O	O	O	O
similar	O	O	O	O	O	O
to	O	O	O	O	O	O
SCT	O	O	O	O	O	O
files	O	O	O	O	O	O
,	O	O	O	O	O	O
a	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
URL	O	O	O	O	O	O
is	O	O	O	O	O	O
being	O	O	O	O	O	O
used	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
the	O	O	O	O	O	O
initial	O	O	O	O	O	O
payload	O	O	O	O	O	O
and	O	O	O	O	O	O
is	O	O	O	O	O	O
executed	O	O	O	O	O	O
via	O	O	O	O	O	O
a	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
command	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
XLSM	O	O	O	O	O	O
file	O	O	O	O	O	O
having	O	O	O	O	O	O
malicious	O	O	O	O	O	O
macro	O	O	O	O	O	O
code	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Macro-decoded.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
8	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
XLSM	O	O	O	O	O	O
file	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
malicious	O	O	O	O	O	O
macro	O	O	O	O	O	O
code	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
initial	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
newly	O	O	O	O	O	O
crafted	O	O	O	O	O	O
downloader	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
uses	O	O	O	O	O	O
the	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
the	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
custom	O	O	O	O	O	O
algorithm	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
decrypted	O	O	O	O	O	O
and	O	O	O	O	O	O
executed	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
present	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
initial	O	O	O	O	O	O
downloader	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
analysis	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

We	O	O	O	O	O	O
have	O	O	O	O	O	O
successfully	O	O	O	O	O	O
tracked	O	O	O	O	O	O
down	O	O	O	O	O	O
the	O	O	O	O	O	O
request	O	O	O	O	O	O
and	O	O	O	O	O	O
discovered	O	O	O	O	O	O
more	O	O	O	O	O	O
information	O	O	O	O	O	O
about	O	O	O	O	O	O
how	O	O	O	O	O	O
this	O	O	O	O	O	O
downloader	O	O	O	O	O	O
works	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
first	O	O	O	O	O	O
injects	O	O	O	O	O	O
itself	O	O	O	O	O	O
into	O	O	O	O	O	O
one	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
following	O	O	O	O	O	O
system	O	O	O	O	O	O
processes	O	O	O	O	O	O
—	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
RegAsm.exe	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
,	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
MSBuild.exe	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
and	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
RegSvcs.exe	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
—	O	O	O	O	O	O
or	O	O	O	O	O	O
self-injects	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
process	O	O	O	O	O	O
hollowing	O	O	O	O	O	O
technique	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Anti-analysis	O	O	O	O	O	O
—	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
This	O	O	O	O	O	O
downloader	O	O	O	O	O	O
uses	O	O	O	O	O	O
different	O	O	O	O	O	O
anti-analysis	O	O	O	O	O	O
techniques	O	O	O	O	O	O
:	O	O	O	O	O	O

*	O	O	O	O	O	O
It	O	O	O	O	O	O
enumerates	O	O	O	O	O	O
all	O	O	O	O	O	O
top-level	O	O	O	O	O	O
windows	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
screen	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
EnumWindows	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
API	O	O	O	O	O	O
to	O	O	O	O	O	O
identify	O	O	O	O	O	O
sandbox	O	O	O	O	O	O
/	O	O	O	O	O	O
emulators	O	O	O	O	O	O
.	O	O	O	O	O	O

If	O	O	O	O	O	O
the	O	O	O	O	O	O
count	O	O	O	O	O	O
of	O	O	O	O	O	O
windows	O	O	O	O	O	O
is	O	O	O	O	O	O
less	O	O	O	O	O	O
than	O	O	O	O	O	O
12	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
terminates	O	O	O	O	O	O
itself	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
It	O	O	O	O	O	O
patches	O	O	O	O	O	O
the	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
DbgBreakPoint	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
and	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
DbgUiRemoteBreakin	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Windows	O	O	O	O	O	O
APIs	O	O	O	O	O	O
as	O	O	O	O	O	O
an	O	O	O	O	O	O
anti-debugging	O	O	O	O	O	O
measure	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Patched	O	O	O	O	O	O
DbgUIRemoteBreakin	O	O	O	O	O	O
API	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Patched	O	O	O	O	O	O
%	O	O	O	O	O	O
20DbgUIRemoteBreakin	O	O	O	O	O	O
%	O	O	O	O	O	O
20API.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
9	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
The	O	O	O	O	O	O
patched	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
DbgUIRemoteBreakin	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
API	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
It	O	O	O	O	O	O
tries	O	O	O	O	O	O
to	O	O	O	O	O	O
detach	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
attached	O	O	O	O	O	O
debugger	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
NtSetInformationThread	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Windows	O	O	O	O	O	O
API	O	O	O	O	O	O
and	O	O	O	O	O	O
an	O	O	O	O	O	O
undocumented	O	O	O	O	O	O
thread	O	O	O	O	O	O
information	O	O	O	O	O	O
class	O	O	O	O	O	O
-	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
ThreadHideFromDebugger	O	O	O	O	O	O
(	O	O	O	O	O	O
0x11	O	O	O	O	O	O
)	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
NtSetInformationThread	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
NtSetInformationThread.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
10	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
 	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
NtSetInformationThread	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
API	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
It	O	O	O	O	O	O
checks	O	O	O	O	O	O
for	O	O	O	O	O	O
debug	O	O	O	O	O	O
registers	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Debug	O	O	O	O	O	O
Registers	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Debug	O	O	O	O	O	O
%	O	O	O	O	O	O
20Registers.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
11	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
debug	O	O	O	O	O	O
registers	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
Before	O	O	O	O	O	O
making	O	O	O	O	O	O
a	O	O	O	O	O	O
call	O	O	O	O	O	O
to	O	O	O	O	O	O
some	O	O	O	O	O	O
Windows	O	O	O	O	O	O
APIs	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
also	O	O	O	O	O	O
checks	O	O	O	O	O	O
for	O	O	O	O	O	O
a	O	O	O	O	O	O
breakpoint	O	O	O	O	O	O
instruction	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
API	O	O	O	O	O	O
code	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Checking	O	O	O	O	O	O
breakpoint	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Checking	O	O	O	O	O	O
%	O	O	O	O	O	O
20breakpoint.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
12	O	O	O	O	O	O
:	O	O	O	O	O	O
Checking	O	O	O	O	O	O
for	O	O	O	O	O	O
a	O	O	O	O	O	O
breakpoint	O	O	O	O	O	O
instruction	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Payload	O	O	O	O	O	O
download	O	O	O	O	O	O
and	O	O	O	O	O	O
installation	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

It	O	O	O	O	O	O
downloads	O	O	O	O	O	O
an	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

During	O	O	O	O	O	O
our	O	O	O	O	O	O
analysis	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
found	O	O	O	O	O	O
different	O	O	O	O	O	O
variants	O	O	O	O	O	O
that	O	O	O	O	O	O
download	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
from	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
as	O	O	O	O	O	O
well	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Snapshot	O	O	O	O	O	O
of	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Snapshot	O	O	O	O	O	O
%	O	O	O	O	O	O
20of	O	O	O	O	O	O
%	O	O	O	O	O	O
20encrypted	O	O	O	O	O	O
%	O	O	O	O	O	O
20payload.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
13	O	O	O	O	O	O
:	O	O	O	O	O	O
A	O	O	O	O	O	O
snapshot	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

It	O	O	O	O	O	O
uses	O	O	O	O	O	O
a	O	O	O	O	O	O
simple	O	O	O	O	O	O
XOR	O	O	O	O	O	O
encryption	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
decryption	O	O	O	O	O	O
key	O	O	O	O	O	O
is	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
found	O	O	O	O	O	O
different	O	O	O	O	O	O
variants	O	O	O	O	O	O
using	O	O	O	O	O	O
different	O	O	O	O	O	O
XOR	O	O	O	O	O	O
keys	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
XOR	O	O	O	O	O	O
decryption	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
XOR	O	O	O	O	O	O
%	O	O	O	O	O	O
20decryption.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
14	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
 	O	O	O	O	O	O
XOR	O	O	O	O	O	O
decryption	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O
 	O	O	O	O	O	O

The	O	O	O	O	O	O
decrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
mapped	O	O	O	O	O	O
and	O	O	O	O	O	O
executed	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
sample	O	O	O	O	O	O
process	O	O	O	O	O	O
.	O	O	O	O	O	O

Depending	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
configuration	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
downloader	O	O	O	O	O	O
copies	O	O	O	O	O	O
itself	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
%	O	O	O	O	O	O
USERPROFILE	O	O	O	O	O	O
%	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
directory	O	O	O	O	O	O
.	O	O	O	O	O	O

That	O	O	O	O	O	O
is	O	O	O	O	O	O
where	O	O	O	O	O	O
it	O	O	O	O	O	O
dropped	O	O	O	O	O	O
the	O	O	O	O	O	O
two	O	O	O	O	O	O
files—self	O	O	O	O	O	O
copy	O	O	O	O	O	O
and	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
files—that	O	O	O	O	O	O
execute	O	O	O	O	O	O
it	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
VB	O	O	O	O	O	O
script	O	O	O	O	O	O
code	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
VB	O	O	O	O	O	O
%	O	O	O	O	O	O
20script	O	O	O	O	O	O
%	O	O	O	O	O	O
20code.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
15	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
 	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
code	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Persistence	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

It	O	O	O	O	O	O
creates	O	O	O	O	O	O
a	O	O	O	O	O	O
run	O	O	O	O	O	O
registry	O	O	O	O	O	O
key	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
points	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
files	O	O	O	O	O	O
:	O	O	O	O	O	O

HKEY	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
USERS	O	O	O	O	O	O
\	O	O	O	O	O	O
Software	O	O	O	O	O	O
\	O	O	O	O	O	O
Microsoft	O	O	O	O	O	O
\	O	O	O	O	O	O
Windows	O	O	O	O	O	O
\	O	O	O	O	O	O
CurrentVersion	O	O	O	O	O	O
\	O	O	O	O	O	O
RunOnce	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
detection	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
Downloader	O	O	O	O	O	O
/	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
%	O	O	O	O	O	O
20detection.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
16	O	O	O	O	O	O
:	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
detected	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
downloader	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Conclusion	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Malicious	O	O	O	O	O	O
downloaders	O	O	O	O	O	O
have	O	O	O	O	O	O
been	O	O	O	O	O	O
using	O	O	O	O	O	O
advance	O	O	O	O	O	O
techniques	O	O	O	O	O	O
over	O	O	O	O	O	O
the	O	O	O	O	O	O
years	O	O	O	O	O	O
,	O	O	O	O	O	O
but	O	O	O	O	O	O
the	O	O	O	O	O	O
end	O	O	O	O	O	O
goal	O	O	O	O	O	O
remains	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
-	O	O	O	O	O	O
getting	O	O	O	O	O	O
malware	O	O	O	O	O	O
onto	O	O	O	O	O	O
a	O	O	O	O	O	O
user	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
system	O	O	O	O	O	O
.	O	O	O	O	O	O

And	O	O	O	O	O	O
using	O	O	O	O	O	O
a	O	O	O	O	O	O
popular	O	O	O	O	O	O
user	O	O	O	O	O	O
tool	O	O	O	O	O	O
,	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
Drive	O	O	O	O	O	O
,	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
a	O	O	O	O	O	O
malicious	O	O	O	O	O	O
payload	O	O	O	O	O	O
can	O	O	O	O	O	O
infect	O	O	O	O	O	O
a	O	O	O	O	O	O
large	O	O	O	O	O	O
number	O	O	O	O	O	O
of	O	O	O	O	O	O
machines	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
team	O	O	O	O	O	O
continuously	O	O	O	O	O	O
monitors	O	O	O	O	O	O
and	O	O	O	O	O	O
blocks	O	O	O	O	O	O
malicious	O	O	O	O	O	O
downloaders	O	O	O	O	O	O
and	O	O	O	O	O	O
other	O	O	O	O	O	O
types	O	O	O	O	O	O
of	O	O	O	O	O	O
advance	O	O	O	O	O	O
malware	O	O	O	O	O	O
to	O	O	O	O	O	O
ensure	O	O	O	O	O	O
the	O	O	O	O	O	O
protection	O	O	O	O	O	O
of	O	O	O	O	O	O
our	O	O	O	O	O	O
customers	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
IOCs	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

|	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
EDLoader	O	O	O	O	O	O
Hash	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
|	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Downloaded	O	O	O	O	O	O
Malware	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
e78f619305b9884de720bd3b980bede6	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.NetwiredRC	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
a1ac955ae6af1910309233788356726d	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.AgentTesla	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
5ab142bbb2fc9c033b57e7cdda9f6a78	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.RemcosRAT	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
dadfb5780b0492f765d0900d76daf494	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.Predatorlogger	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
b7f69192280bbc13e44069c11f260c41	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.Nanocore	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
6ea19c5e7a0808ac26581ca386044fad	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.Vidar	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
fdff7593b4ed9fed58e2b38044b45b5f	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.Azorult	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
759d976d6094acd420a16574475d3cc1	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.Avemaria	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
c4714065dfa9a6f48e28fcc3a41bf3ce	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.Kpot	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
c004fbe61ff4d8013b63cf3548364ecb	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.Avecaesar	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
72218b21016889d1082b49fd21b0cda7	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.Raccoon	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
edd4b40d55884ad6d8ffa11d5e13a5e7	O	O	O	O	O	O
|	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.Lokibot	O	O	O	O	O	O
|	O	O	O	O	O	O

