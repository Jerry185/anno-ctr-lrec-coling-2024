<DOCSTART>	O	O	O	O	O	O

Demystifying	O	O	O	O	O	O
the	O	O	O	O	O	O
Crypter	O	O	O	O	O	O
Used	O	O	O	O	O	O
in	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
,	O	O	O	O	O	O
Qbot	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
Dridex	O	O	O	O	O	O

February	O	O	B-DATE	O	O	B-DATE
14	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2019	O	O	I-DATE	O	O	I-DATE

A	O	O	O	O	O	O
crypter	O	O	O	O	O	O
is	O	O	O	O	O	O
software	O	O	O	O	O	O
that	O	O	O	O	O	O
can	O	O	O	O	O	O
encrypt	O	O	O	O	O	O
,	O	O	O	O	O	O
obfuscate	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
manipulate	O	O	O	O	O	O
malware	O	O	O	O	O	O
to	O	O	O	O	O	O
make	O	O	O	O	O	O
it	O	O	O	O	O	O
harder	O	O	O	O	O	O
to	O	O	O	O	O	O
detect	O	O	O	O	O	O
by	O	O	O	O	O	O
security	O	O	O	O	O	O
programs	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
research	O	O	O	O	O	O
team	O	O	O	O	O	O
recently	O	O	O	O	O	O
spotted	O	O	O	O	O	O
a	O	O	O	O	O	O
common	O	O	O	O	O	O
crypter	O	O	O	O	O	O
being	O	O	O	O	O	O
used	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
recent	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
,	O	O	O	O	O	O
Qbot	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
Dridex	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
same	O	O	O	O	O	O
crypter	O	O	O	O	O	O
was	O	O	O	O	O	O
observed	O	O	O	O	O	O
in	O	O	O	O	O	O
some	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
[	O	O	O	O	O	O
Ursnif	O	O	O	O	O	O
and	O	O	O	O	O	O
BitPaymer	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
blog.trendmicro.com	O	O	O	O	O	O
/	O	O	O	O	O	O
trendlabs-security-intelligence	O	O	O	O	O	O
/	O	O	O	O	O	O
ursnif-emotet-dridex-and-bitpaymer-gangs-linked-by-a-similar-loader	O	O	O	O	O	O
/	O	O	O	O	O	O
)	O	O	O	O	O	O
 	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
as	O	O	O	O	O	O
well	O	O	O	O	O	O
.	O	O	O	O	O	O

One	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
reasons	O	O	O	O	O	O
that	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
and	O	O	O	O	O	O
Dridex	O	O	O	O	O	O
were	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
survive	O	O	O	O	O	O
for	O	O	O	O	O	O
so	O	O	O	O	O	O
long	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
attributed	O	O	O	O	O	O
to	O	O	O	O	O	O
their	O	O	O	O	O	O
ability	O	O	O	O	O	O
to	O	O	O	O	O	O
evade	O	O	O	O	O	O
detection	O	O	O	O	O	O
through	O	O	O	O	O	O
the	O	O	O	O	O	O
use	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
volatile	O	O	O	O	O	O
and	O	O	O	O	O	O
polymorphic	O	O	O	O	O	O
crypter	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
wraps	O	O	O	O	O	O
its	O	O	O	O	O	O
original	O	O	O	O	O	O
binary	O	O	O	O	O	O
inside	O	O	O	O	O	O
to	O	O	O	O	O	O
complicate	O	O	O	O	O	O
its	O	O	O	O	O	O
detection	O	O	O	O	O	O
and	O	O	O	O	O	O
analysis	O	O	O	O	O	O
.	O	O	O	O	O	O

Emotet	O	O	O	O	O	O
is	O	O	O	O	O	O
modular	O	O	O	O	O	O
malware	O	O	O	O	O	O
that	O	O	O	O	O	O
primarily	O	O	O	O	O	O
functions	O	O	O	O	O	O
as	O	O	O	O	O	O
a	O	O	O	O	O	O
downloader	O	O	O	O	O	O
or	O	O	O	O	O	O
dropper	O	O	O	O	O	O
for	O	O	O	O	O	O
other	O	O	O	O	O	O
banking	B-SECTOR	O	O	O	O	B-SECTOR
Trojans	O	O	O	O	O	O
.	O	O	O	O	O	O

Emotet	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
active	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
past	O	O	O	O	O	O
four	O	O	O	O	O	O
years	O	O	O	O	O	O
and	O	O	O	O	O	O
it	O	O	O	O	O	O
was	O	O	O	O	O	O
one	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
most	O	O	O	O	O	O
prevalent	O	O	O	O	O	O
malware	O	O	O	O	O	O
families	O	O	O	O	O	O
of	O	O	O	O	O	O
2018	O	O	B-DATE	O	O	B-DATE
.	O	O	O	O	O	O

In	O	O	O	O	O	O
previous	O	O	O	O	O	O
blogs	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
[	O	O	O	O	O	O
analyzed	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
research	O	O	O	O	O	O
/	O	O	O	O	O	O
look-recent-emotet-campaigns-august	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
)	O	O	O	O	O	O
 	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
and	O	O	O	O	O	O
one	O	O	O	O	O	O
of	O	O	O	O	O	O
its	O	O	O	O	O	O
delivery	O	O	O	O	O	O
[	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
research	O	O	O	O	O	O
/	O	O	O	O	O	O
independence-day-greeting-campaign-delivers-emotet	O	O	O	O	O	O
-	O	O	O	O	O	O
5	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

Dridex	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
banking	B-SECTOR	O	O	O	O	B-SECTOR
Trojan	O	O	O	O	O	O
that	O	O	O	O	O	O
evolved	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
Zeus	O	O	O	O	O	O
Trojan	O	O	O	O	O	O
family	O	O	O	O	O	O
.	O	O	O	O	O	O

Dridex	O	O	O	O	O	O
remains	O	O	O	O	O	O
active	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
wild	O	O	O	O	O	O
even	O	O	O	O	O	O
after	O	O	O	O	O	O
the	O	O	O	O	O	O
FBI	B-ORG	O	O	O	O	B-ORG
’	O	O	O	O	O	O
s	O	O	O	O	O	O
 	O	O	O	O	O	O
[	O	O	O	O	O	O
takedown	O	O	O	O	O	O
attempt	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
research	O	O	O	O	O	O
/	O	O	O	O	O	O
dridex-activity-continues	O	O	O	O	O	O
)	O	O	O	O	O	O
 	O	O	O	O	O	O
in	O	O	O	O	O	O
2015	O	O	B-DATE	O	O	B-DATE
.	O	O	O	O	O	O

Qbot	O	O	O	O	O	O
can	O	O	O	O	O	O
allow	O	O	O	O	O	O
remote	O	O	O	O	O	O
access	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
victim	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
system	O	O	O	O	O	O
,	O	O	O	O	O	O
 	O	O	O	O	O	O
steal	O	O	O	O	O	O
information	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
upload	O	O	O	O	O	O
this	O	O	O	O	O	O
stolen	O	O	O	O	O	O
information	O	O	O	O	O	O
 	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
attacker	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
remote	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O

Recently	O	O	O	O	O	O
,	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
payload	O	O	O	O	O	O
URLs	O	O	O	O	O	O
were	O	O	O	O	O	O
found	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
 	O	O	O	O	O	O
[	O	O	O	O	O	O
serving	O	O	O	O	O	O
Qbot	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
twitter.com	O	O	O	O	O	O
/	O	O	O	O	O	O
kafeine	O	O	O	O	O	O
/	O	O	O	O	O	O
status	O	O	O	O	O	O
/	O	O	O	O	O	O
1090698376503586817	O	O	O	O	O	O
)	O	O	O	O	O	O
 	O	O	O	O	O	O
and	O	O	O	O	O	O
were	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
 	O	O	O	O	O	O
crypter	O	O	O	O	O	O
we	O	O	O	O	O	O
’	O	O	O	O	O	O
re	O	O	O	O	O	O
examining	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
report	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
crypter	O	O	O	O	O	O
provides	O	O	O	O	O	O
multiple	O	O	O	O	O	O
layers	O	O	O	O	O	O
of	O	O	O	O	O	O
protection	O	O	O	O	O	O
on	O	O	O	O	O	O
its	O	O	O	O	O	O
core	O	O	O	O	O	O
malware	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
this	O	O	O	O	O	O
research	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
will	O	O	O	O	O	O
describe	O	O	O	O	O	O
the	O	O	O	O	O	O
properties	O	O	O	O	O	O
of	O	O	O	O	O	O
crypted	O	O	O	O	O	O
 	O	O	O	O	O	O
binaries	O	O	O	O	O	O
that	O	O	O	O	O	O
hold	O	O	O	O	O	O
true	O	O	O	O	O	O
across	O	O	O	O	O	O
various	O	O	O	O	O	O
mutations	O	O	O	O	O	O
.	O	O	O	O	O	O

These	O	O	O	O	O	O
properties	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
validated	O	O	O	O	O	O
statically	O	O	O	O	O	O
(	O	O	O	O	O	O
without	O	O	O	O	O	O
executing	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
)	O	O	O	O	O	O
and	O	O	O	O	O	O
used	O	O	O	O	O	O
to	O	O	O	O	O	O
write	O	O	O	O	O	O
a	O	O	O	O	O	O
decrypter	O	O	O	O	O	O
.	O	O	O	O	O	O

Below	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
 	O	O	O	O	O	O
pictorial	O	O	O	O	O	O
view	O	O	O	O	O	O
of	O	O	O	O	O	O
how	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
core	O	O	O	O	O	O
binary	O	O	O	O	O	O
is	O	O	O	O	O	O
digested	O	O	O	O	O	O
inside	O	O	O	O	O	O
the	O	O	O	O	O	O
crypter	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
layers	O	O	O	O	O	O
of	O	O	O	O	O	O
obfuscation	O	O	O	O	O	O
and	O	O	O	O	O	O
encryption	O	O	O	O	O	O
 	O	O	O	O	O	O
wrappers	O	O	O	O	O	O
.	O	O	O	O	O	O

0	O	O	O	O	O	O
.	O	O	O	O	O	O
Core	O	O	O	O	O	O
 	O	O	O	O	O	O
binary	O	O	O	O	O	O

1	O	O	O	O	O	O
.	O	O	O	O	O	O
Code	O	O	O	O	O	O
is	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
by	O	O	O	O	O	O
shuffling	O	O	O	O	O	O
instructions	O	O	O	O	O	O
and	O	O	O	O	O	O
substituting	O	O	O	O	O	O
jump	O	O	O	O	O	O
 	O	O	O	O	O	O
instruction	O	O	O	O	O	O

2	O	O	O	O	O	O
.	O	O	O	O	O	O
Obfuscated	O	O	O	O	O	O
binary	O	O	O	O	O	O
is	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
and	O	O	O	O	O	O
appended	O	O	O	O	O	O
at	O	O	O	O	O	O
the	O	O	O	O	O	O
end	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
 	O	O	O	O	O	O
binary	O	O	O	O	O	O

3	O	O	O	O	O	O
.	O	O	O	O	O	O
File	O	O	O	O	O	O
alignment	O	O	O	O	O	O
of	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
is	O	O	O	O	O	O
jumbled	O	O	O	O	O	O

4	O	O	O	O	O	O
.	O	O	O	O	O	O
Custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
is	O	O	O	O	O	O
 	O	O	O	O	O	O
encrypted	O	O	O	O	O	O

5	O	O	O	O	O	O
.	O	O	O	O	O	O
Final	O	O	O	O	O	O
binary	O	O	O	O	O	O
encapsulating	O	O	O	O	O	O
scattered	O	O	O	O	O	O
chunks	O	O	O	O	O	O
of	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
 	O	O	O	O	O	O
binary	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453452	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Image	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
Stages	O	O	O	O	O	O
occur	O	O	O	O	O	O
in	O	O	O	O	O	O
crypter	O	O	O	O	O	O

Our	O	O	O	O	O	O
goal	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
reverse	O	O	O	O	O	O
each	O	O	O	O	O	O
of	O	O	O	O	O	O
above	O	O	O	O	O	O
stages	O	O	O	O	O	O
to	O	O	O	O	O	O
get	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
malware	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

Furthermore	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
binary	O	O	O	O	O	O
is	O	O	O	O	O	O
supposed	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
independently	O	O	O	O	O	O
loadable	O	O	O	O	O	O
/	O	O	O	O	O	O
executable	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
IOCs	O	O	O	O	O	O
should	O	O	O	O	O	O
be	O	O	O	O	O	O
easily	O	O	O	O	O	O
extractable	O	O	O	O	O	O
.	O	O	O	O	O	O

So	O	O	O	O	O	O
,	O	O	O	O	O	O
starting	O	O	O	O	O	O
with	O	O	O	O	O	O
stage	O	O	O	O	O	O
5	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
will	O	O	O	O	O	O
describe	O	O	O	O	O	O
certain	O	O	O	O	O	O
heuristics	O	O	O	O	O	O
properties	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
and	O	O	O	O	O	O
using	O	O	O	O	O	O
these	O	O	O	O	O	O
properties	O	O	O	O	O	O
we	O	O	O	O	O	O
will	O	O	O	O	O	O
decrypt	O	O	O	O	O	O
the	O	O	O	O	O	O
stage	O	O	O	O	O	O
and	O	O	O	O	O	O
continue	O	O	O	O	O	O
to	O	O	O	O	O	O
track	O	O	O	O	O	O
down	O	O	O	O	O	O
till	O	O	O	O	O	O
stage	O	O	O	O	O	O
0	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
our	O	O	O	O	O	O
analysis	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
found	O	O	O	O	O	O
that	O	O	O	O	O	O
these	O	O	O	O	O	O
heuristics	O	O	O	O	O	O
properties	O	O	O	O	O	O
hold	O	O	O	O	O	O
true	O	O	O	O	O	O
across	O	O	O	O	O	O
all	O	O	O	O	O	O
mutations	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
binaries	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Stage	O	O	O	O	O	O
5	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
5th	O	O	O	O	O	O
stage	O	O	O	O	O	O
binary	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
executable	O	O	O	O	O	O
file	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
downloaded	O	O	O	O	O	O
via	O	O	O	O	O	O
malicious	O	O	O	O	O	O
links	O	O	O	O	O	O
in	O	O	O	O	O	O
MalSpams	O	O	O	O	O	O
or	O	O	O	O	O	O
malicious	O	O	O	O	O	O
macros	O	O	O	O	O	O
in	O	O	O	O	O	O
MS	B-ORG	O	O	O	O	B-ORG
Office	O	O	O	O	O	O
documents	O	O	O	O	O	O
.	O	O	O	O	O	O

Our	O	O	O	O	O	O
goal	O	O	O	O	O	O
in	O	O	O	O	O	O
stage	O	O	O	O	O	O
5	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
reach	O	O	O	O	O	O
stage	O	O	O	O	O	O
4	O	O	O	O	O	O
to	O	O	O	O	O	O
obtain	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

As	O	O	O	O	O	O
we	O	O	O	O	O	O
can	O	O	O	O	O	O
see	O	O	O	O	O	O
in	O	O	O	O	O	O
image	O	O	O	O	O	O
1	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
at	O	O	O	O	O	O
this	O	O	O	O	O	O
stage	O	O	O	O	O	O
contains	O	O	O	O	O	O
scattered	O	O	O	O	O	O
chunks	O	O	O	O	O	O
of	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
spot	O	O	O	O	O	O
these	O	O	O	O	O	O
chunks	O	O	O	O	O	O
and	O	O	O	O	O	O
assemble	O	O	O	O	O	O
them	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
proper	O	O	O	O	O	O
order	O	O	O	O	O	O
.	O	O	O	O	O	O

Before	O	O	O	O	O	O
discussing	O	O	O	O	O	O
how	O	O	O	O	O	O
we	O	O	O	O	O	O
are	O	O	O	O	O	O
going	O	O	O	O	O	O
to	O	O	O	O	O	O
do	O	O	O	O	O	O
this	O	O	O	O	O	O
,	O	O	O	O	O	O
what	O	O	O	O	O	O
follows	O	O	O	O	O	O
are	O	O	O	O	O	O
few	O	O	O	O	O	O
examples	O	O	O	O	O	O
of	O	O	O	O	O	O
how	O	O	O	O	O	O
these	O	O	O	O	O	O
chunks	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
spread	O	O	O	O	O	O
across	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
chunks	O	O	O	O	O	O
are	O	O	O	O	O	O
outlined	O	O	O	O	O	O
in	O	O	O	O	O	O
red	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453465	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453476	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Image	O	O	O	O	O	O
2	O	O	O	O	O	O
.	O	O	O	O	O	O

Examples	O	O	O	O	O	O
of	O	O	O	O	O	O
chunk	O	O	O	O	O	O
patterns	O	O	O	O	O	O

From	O	O	O	O	O	O
the	O	O	O	O	O	O
above	O	O	O	O	O	O
examples	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
can	O	O	O	O	O	O
see	O	O	O	O	O	O
that	O	O	O	O	O	O
these	O	O	O	O	O	O
chunks	O	O	O	O	O	O
are	O	O	O	O	O	O
not	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
fixed	O	O	O	O	O	O
locations	O	O	O	O	O	O
,	O	O	O	O	O	O
as	O	O	O	O	O	O
their	O	O	O	O	O	O
sizes	O	O	O	O	O	O
are	O	O	O	O	O	O
inconsistent	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
order	O	O	O	O	O	O
of	O	O	O	O	O	O
chunks	O	O	O	O	O	O
varies	O	O	O	O	O	O
,	O	O	O	O	O	O
too	O	O	O	O	O	O
.	O	O	O	O	O	O

Therefore	O	O	O	O	O	O
,	O	O	O	O	O	O
our	O	O	O	O	O	O
first	O	O	O	O	O	O
challenge	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
locate	O	O	O	O	O	O
these	O	O	O	O	O	O
chunks	O	O	O	O	O	O
and	O	O	O	O	O	O
arrange	O	O	O	O	O	O
them	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
proper	O	O	O	O	O	O
order	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
good	O	O	O	O	O	O
news	O	O	O	O	O	O
is	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
know	O	O	O	O	O	O
the	O	O	O	O	O	O
crypter	O	O	O	O	O	O
will	O	O	O	O	O	O
also	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
arrange	O	O	O	O	O	O
the	O	O	O	O	O	O
chunks	O	O	O	O	O	O
and	O	O	O	O	O	O
will	O	O	O	O	O	O
do	O	O	O	O	O	O
so	O	O	O	O	O	O
by	O	O	O	O	O	O
storing	O	O	O	O	O	O
the	O	O	O	O	O	O
chunk	O	O	O	O	O	O
addresses	O	O	O	O	O	O
and	O	O	O	O	O	O
sizes	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
table	O	O	O	O	O	O
.	O	O	O	O	O	O

Let	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
call	O	O	O	O	O	O
this	O	O	O	O	O	O
table	O	O	O	O	O	O
“	O	O	O	O	O	O
Chunk	O	O	O	O	O	O
Descriptor	O	O	O	O	O	O
Table	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
bad	O	O	O	O	O	O
news	O	O	O	O	O	O
is	O	O	O	O	O	O
that	O	O	O	O	O	O
this	O	O	O	O	O	O
table	O	O	O	O	O	O
cannot	O	O	O	O	O	O
be	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
predictable	O	O	O	O	O	O
location	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
nor	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
structure	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
table	O	O	O	O	O	O
is	O	O	O	O	O	O
constant	O	O	O	O	O	O
across	O	O	O	O	O	O
mutations	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

Below	O	O	O	O	O	O
are	O	O	O	O	O	O
some	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
variants	O	O	O	O	O	O
of	O	O	O	O	O	O
this	O	O	O	O	O	O
table	O	O	O	O	O	O
structure	O	O	O	O	O	O
.	O	O	O	O	O	O

Chunk	O	O	O	O	O	O
Descriptor	O	O	O	O	O	O
Table	O	O	O	O	O	O
is	O	O	O	O	O	O
basically	O	O	O	O	O	O
an	O	O	O	O	O	O
array	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
Chunk	O	O	O	O	O	O
Descriptor	O	O	O	O	O	O
Entry	O	O	O	O	O	O
.	O	O	O	O	O	O

struct	O	O	O	O	O	O
ChunkDescriptorEntry	O	O	O	O	O	O
[	O	O	O	O	O	O
n	O	O	O	O	O	O
]	O	O	O	O	O	O
ChunkDescriptorTable	O	O	O	O	O	O
;	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
n	O	O	O	O	O	O
=	O	O	O	O	O	O
=	O	O	O	O	O	O
number	O	O	O	O	O	O
of	O	O	O	O	O	O
chunks	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453487	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Image	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
Examples	O	O	O	O	O	O
of	O	O	O	O	O	O
Chunk	O	O	O	O	O	O
Descriptor	O	O	O	O	O	O
Table	O	O	O	O	O	O
structures	O	O	O	O	O	O

In	O	O	O	O	O	O
above	O	O	O	O	O	O
structure	O	O	O	O	O	O
,	O	O	O	O	O	O
“	O	O	O	O	O	O
chunkAddressDword	O	O	O	O	O	O
”	O	O	O	O	O	O
 	O	O	O	O	O	O
contains	O	O	O	O	O	O
the	O	O	O	O	O	O
virtual	O	O	O	O	O	O
address	O	O	O	O	O	O
of	O	O	O	O	O	O
chunk	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
size	O	O	O	O	O	O
of	O	O	O	O	O	O
chunk	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
obtained	O	O	O	O	O	O
by	O	O	O	O	O	O
 	O	O	O	O	O	O
one	O	O	O	O	O	O
of	O	O	O	O	O	O
following	O	O	O	O	O	O
operations	O	O	O	O	O	O
on	O	O	O	O	O	O
“	O	O	O	O	O	O
firstDword	O	O	O	O	O	O
”	O	O	O	O	O	O
and	O	O	O	O	O	O
“	O	O	O	O	O	O
secondDword	O	O	O	O	O	O
”	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
operation	O	O	O	O	O	O
is	O	O	O	O	O	O
constant	O	O	O	O	O	O
across	O	O	O	O	O	O
all	O	O	O	O	O	O
chunk	O	O	O	O	O	O
descriptor	O	O	O	O	O	O
entries	O	O	O	O	O	O
.	O	O	O	O	O	O

1	O	O	O	O	O	O
.	O	O	O	O	O	O
unsigned	O	O	O	O	O	O
int	O	O	O	O	O	O
chunkSize	O	O	O	O	O	O
=	O	O	O	O	O	O
firstDword	O	O	O	O	O	O
+	O	O	O	O	O	O
secondDword	O	O	O	O	O	O

2	O	O	O	O	O	O
.	O	O	O	O	O	O
unsigned	O	O	O	O	O	O
int	O	O	O	O	O	O
chunkSize	O	O	O	O	O	O
=	O	O	O	O	O	O
firstDword	O	O	O	O	O	O
^	O	O	O	O	O	O
secondDword	O	O	O	O	O	O

3	O	O	O	O	O	O
.	O	O	O	O	O	O
unsigned	O	O	O	O	O	O
int	O	O	O	O	O	O
chunkSize	O	O	O	O	O	O
=	O	O	O	O	O	O
secondDword	O	O	O	O	O	O
-	O	O	O	O	O	O
firstDword	O	O	O	O	O	O

Heuristics	O	O	O	O	O	O
properties	O	O	O	O	O	O
of	O	O	O	O	O	O
Chunk	O	O	O	O	O	O
Descriptor	O	O	O	O	O	O
Table	O	O	O	O	O	O
:	O	O	O	O	O	O

1.0	O	O	O	O	O	O
<	O	O	O	O	O	O
=	O	O	O	O	O	O
x	O	O	O	O	O	O
<	O	O	O	O	O	O
=	O	O	O	O	O	O
?	O	O	O	O	O	O
,	O	O	O	O	O	O
     	O	O	O	O	O	O
0	O	O	O	O	O	O
<	O	O	O	O	O	O
=	O	O	O	O	O	O
y	O	O	O	O	O	O
<	O	O	O	O	O	O
=	O	O	O	O	O	O
?	O	O	O	O	O	O
,	O	O	O	O	O	O
     	O	O	O	O	O	O
0	O	O	O	O	O	O
<	O	O	O	O	O	O
=	O	O	O	O	O	O
z	O	O	O	O	O	O
<	O	O	O	O	O	O
=	O	O	O	O	O	O
.	O	O	O	O	O	O

2	O	O	O	O	O	O
.	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
firstDword	O	O	O	O	O	O
)	O	O	O	O	O	O
<	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
secondDword	O	O	O	O	O	O
)	O	O	O	O	O	O
<	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
chunkAddressDword	O	O	O	O	O	O
)	O	O	O	O	O	O

3	O	O	O	O	O	O
.	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
firstDword	O	O	O	O	O	O
)	O	O	O	O	O	O
<	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
chunkAddressDword	O	O	O	O	O	O
)	O	O	O	O	O	O
<	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
secondDword	O	O	O	O	O	O
)	O	O	O	O	O	O

4	O	O	O	O	O	O
.	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
chunkAddressDword	O	O	O	O	O	O
)	O	O	O	O	O	O
<	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
firstDword	O	O	O	O	O	O
)	O	O	O	O	O	O
<	O	O	O	O	O	O
offset	O	O	O	O	O	O
(	O	O	O	O	O	O
secondDword	O	O	O	O	O	O
)	O	O	O	O	O	O

5	O	O	O	O	O	O
.	O	O	O	O	O	O
entropy	O	O	O	O	O	O
(	O	O	O	O	O	O
chunk	O	O	O	O	O	O
)	O	O	O	O	O	O
>	O	O	O	O	O	O
5	O	O	O	O	O	O
out	O	O	O	O	O	O
of	O	O	O	O	O	O
8	O	O	O	O	O	O
.	O	O	O	O	O	O

6	O	O	O	O	O	O
.	O	O	O	O	O	O
Chunks	O	O	O	O	O	O
do	O	O	O	O	O	O
not	O	O	O	O	O	O
contain	O	O	O	O	O	O
consecutive	O	O	O	O	O	O
4	O	O	O	O	O	O
zeros	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
following	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
pseudo	O	O	O	O	O	O
code	O	O	O	O	O	O
for	O	O	O	O	O	O
finding	O	O	O	O	O	O
the	O	O	O	O	O	O
chunk	O	O	O	O	O	O
pattern	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
function	O	O	O	O	O	O
“	O	O	O	O	O	O
FindChunkEntry	O	O	O	O	O	O
”	O	O	O	O	O	O
return	O	O	O	O	O	O
offset	O	O	O	O	O	O
of	O	O	O	O	O	O
chunk	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
distance	O	O	O	O	O	O
of	O	O	O	O	O	O
firstDword	O	O	O	O	O	O
,	O	O	O	O	O	O
chunkAddressDword	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
beginning	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
chunk	O	O	O	O	O	O
offset	O	O	O	O	O	O
.	O	O	O	O	O	O

If	O	O	O	O	O	O
the	O	O	O	O	O	O
return	O	O	O	O	O	O
value	O	O	O	O	O	O
of	O	O	O	O	O	O
three	O	O	O	O	O	O
consecutive	O	O	O	O	O	O
calls	O	O	O	O	O	O
to	O	O	O	O	O	O
function	O	O	O	O	O	O
and	O	O	O	O	O	O
length	O	O	O	O	O	O
between	O	O	O	O	O	O
three	O	O	O	O	O	O
returned	O	O	O	O	O	O
offsets	O	O	O	O	O	O
are	O	O	O	O	O	O
equal	O	O	O	O	O	O
,	O	O	O	O	O	O
then	O	O	O	O	O	O
the	O	O	O	O	O	O
whole	O	O	O	O	O	O
array	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
parsed	O	O	O	O	O	O
to	O	O	O	O	O	O
generate	O	O	O	O	O	O
an	O	O	O	O	O	O
associative	O	O	O	O	O	O
array	O	O	O	O	O	O
of	O	O	O	O	O	O
chunk	O	O	O	O	O	O
addresses	O	O	O	O	O	O
and	O	O	O	O	O	O
chunk	O	O	O	O	O	O
sizes	O	O	O	O	O	O
.	O	O	O	O	O	O

(	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
offset1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
m1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
n1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
FindChunkEntry	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
filedata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
fileSize	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

(	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
offset2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
m2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
n2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
FindChunkEntry	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
filedata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
offset1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
fileSize	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

(	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
offset3	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
m3	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
n3	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
FindChunkEntry	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
filedata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
offset2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
fileSize	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

If	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
offset2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
offset1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
offset3	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
–	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
offset2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
found	O	O	O	O	O	O
the	O	O	O	O	O	O
FindChunkEntry	O	O	O	O	O	O
array	O	O	O	O	O	O

FindChunkEntry	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
filedata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
fileSize	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
while	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
fileSize	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
firstDword	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
filedata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
while	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
T	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
secondDword	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
filedata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
chunkSize	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
firstDword	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
secondDword	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
T	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                        	O	O	O	O	O	O
while	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
T	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
chunkAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
filedata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ValidateChunk	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
chunkAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
chunkSize	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
TRUE	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Heuristics	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
5	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
6	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
x	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
y	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
z	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

return	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
x	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
y	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
elif	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
x	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
y	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
z	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

return	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
x	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
y	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
elif	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
x	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
y	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
z	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

return	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
x	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
y	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
r	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
q	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

Now	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
an	O	O	O	O	O	O
associative	O	O	O	O	O	O
array	O	O	O	O	O	O
of	O	O	O	O	O	O
chunk	O	O	O	O	O	O
address	O	O	O	O	O	O
and	O	O	O	O	O	O
chunk	O	O	O	O	O	O
sizes	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
can	O	O	O	O	O	O
combine	O	O	O	O	O	O
these	O	O	O	O	O	O
chunks	O	O	O	O	O	O
to	O	O	O	O	O	O
get	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

Here	O	O	O	O	O	O
we	O	O	O	O	O	O
are	O	O	O	O	O	O
at	O	O	O	O	O	O
stage	O	O	O	O	O	O
4	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Stage	O	O	O	O	O	O
4	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
​	O	O	O	O	O	O

In	O	O	O	O	O	O
our	O	O	O	O	O	O
analysis	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
observed	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
(	O	O	O	O	O	O
PE	O	O	O	O	O	O
exe	O	O	O	O	O	O
)	O	O	O	O	O	O
is	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
 	O	O	O	O	O	O
simple	O	O	O	O	O	O
byte-to-byte	O	O	O	O	O	O
addition	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
loop	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
key	O	O	O	O	O	O
array	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
is	O	O	O	O	O	O
not	O	O	O	O	O	O
necessary	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
present	O	O	O	O	O	O
at	O	O	O	O	O	O
zero	O	O	O	O	O	O
offset	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
stage	O	O	O	O	O	O
four	O	O	O	O	O	O
,	O	O	O	O	O	O
our	O	O	O	O	O	O
objective	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
find	O	O	O	O	O	O
the	O	O	O	O	O	O
offset	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
decryption	O	O	O	O	O	O
key	O	O	O	O	O	O
.	O	O	O	O	O	O

First	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
will	O	O	O	O	O	O
find	O	O	O	O	O	O
the	O	O	O	O	O	O
decryption	O	O	O	O	O	O
key	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
brute	O	O	O	O	O	O
forced	O	O	O	O	O	O
over	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
to	O	O	O	O	O	O
find	O	O	O	O	O	O
the	O	O	O	O	O	O
starting	O	O	O	O	O	O
offset	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
.	O	O	O	O	O	O

Decryption	O	O	O	O	O	O
is	O	O	O	O	O	O
present	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
5th	O	O	O	O	O	O
stage	O	O	O	O	O	O
binary	O	O	O	O	O	O
but	O	O	O	O	O	O
not	O	O	O	O	O	O
at	O	O	O	O	O	O
 	O	O	O	O	O	O
a	O	O	O	O	O	O
predictable	O	O	O	O	O	O
location	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
will	O	O	O	O	O	O
derive	O	O	O	O	O	O
the	O	O	O	O	O	O
decryption	O	O	O	O	O	O
key	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
itself	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
heuristics	O	O	O	O	O	O
property	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
noted	O	O	O	O	O	O
about	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
pattern	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
repeating	O	O	O	O	O	O
consecutive	O	O	O	O	O	O
sequence	O	O	O	O	O	O
of	O	O	O	O	O	O
bytes	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
pattern	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
repeating	O	O	O	O	O	O
sequence	O	O	O	O	O	O
is	O	O	O	O	O	O
induced	O	O	O	O	O	O
by	O	O	O	O	O	O
nature	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
encryption	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
properties	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
,	O	O	O	O	O	O
this	O	O	O	O	O	O
pattern	O	O	O	O	O	O
will	O	O	O	O	O	O
appear	O	O	O	O	O	O
at	O	O	O	O	O	O
locations	O	O	O	O	O	O
that	O	O	O	O	O	O
should	O	O	O	O	O	O
have	O	O	O	O	O	O
filled	O	O	O	O	O	O
with	O	O	O	O	O	O
zeros	O	O	O	O	O	O
when	O	O	O	O	O	O
non-encrypted	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
following	O	O	O	O	O	O
are	O	O	O	O	O	O
possible	O	O	O	O	O	O
locations	O	O	O	O	O	O
.	O	O	O	O	O	O

1	O	O	O	O	O	O
.	O	O	O	O	O	O
At	O	O	O	O	O	O
beginning	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
because	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
will	O	O	O	O	O	O
not	O	O	O	O	O	O
necessarily	O	O	O	O	O	O
begin	O	O	O	O	O	O
at	O	O	O	O	O	O
zero	O	O	O	O	O	O
offset	O	O	O	O	O	O
.	O	O	O	O	O	O

2	O	O	O	O	O	O
.	O	O	O	O	O	O
Caves	O	O	O	O	O	O
between	O	O	O	O	O	O
two	O	O	O	O	O	O
sections	O	O	O	O	O	O
and	O	O	O	O	O	O
between	O	O	O	O	O	O
the	O	O	O	O	O	O
PE	O	O	O	O	O	O
header	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
first	O	O	O	O	O	O
section	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453510	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Image	O	O	O	O	O	O
4	O	O	O	O	O	O
:	O	O	O	O	O	O
Encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
showing	O	O	O	O	O	O
an	O	O	O	O	O	O
example	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
repeating	O	O	O	O	O	O
sequence	O	O	O	O	O	O
of	O	O	O	O	O	O
bytes	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453524	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Image	O	O	O	O	O	O
5	O	O	O	O	O	O
:	O	O	O	O	O	O
Decrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
showing	O	O	O	O	O	O
the	O	O	O	O	O	O
appearance	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
corresponding	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O

The	O	O	O	O	O	O
repeating	O	O	O	O	O	O
sequence	O	O	O	O	O	O
is	O	O	O	O	O	O
our	O	O	O	O	O	O
key	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
length	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
sequence	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
key	O	O	O	O	O	O
length	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
next	O	O	O	O	O	O
thing	O	O	O	O	O	O
we	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
do	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
find	O	O	O	O	O	O
the	O	O	O	O	O	O
beginning	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
key	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
consecutively	O	O	O	O	O	O
repeating	O	O	O	O	O	O
sequence	O	O	O	O	O	O
and	O	O	O	O	O	O
offset	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
done	O	O	O	O	O	O
by	O	O	O	O	O	O
simply	O	O	O	O	O	O
applying	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
inverse	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
encryption	O	O	O	O	O	O
on	O	O	O	O	O	O
this	O	O	O	O	O	O
sequence	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
from	O	O	O	O	O	O
its	O	O	O	O	O	O
starting	O	O	O	O	O	O
point	O	O	O	O	O	O
while	O	O	O	O	O	O
checking	O	O	O	O	O	O
against	O	O	O	O	O	O
the	O	O	O	O	O	O
MZ	O	O	O	O	O	O
header	O	O	O	O	O	O
.	O	O	O	O	O	O

Here	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
pseudo	O	O	O	O	O	O
code	O	O	O	O	O	O
:	O	O	O	O	O	O

FindPeFileAndKeyStart	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keySequence	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keySequenceLen	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
encryptedData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
encryptedDataLen	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
k	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
while	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
k	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keySequenceLen	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
while	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
encryptedDataLen	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
    	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
inverse	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
encryption	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
encryptedData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keySequence	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
k	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0x4D	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
encryptedData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keySequence	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
k	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0x5A	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
encryptedData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
3	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keySequence	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
k	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
3	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
peFileOffset	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
keyStart	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
k	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
return	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
peFileOffset	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keyStart	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

Now	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
the	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
offset	O	O	O	O	O	O
and	O	O	O	O	O	O
key	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
can	O	O	O	O	O	O
decrypt	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
with	O	O	O	O	O	O
byte-to-byte	O	O	O	O	O	O
subtraction	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
key	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
loop	O	O	O	O	O	O
.	O	O	O	O	O	O

At	O	O	O	O	O	O
this	O	O	O	O	O	O
point	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
the	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
,	O	O	O	O	O	O
but	O	O	O	O	O	O
this	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
has	O	O	O	O	O	O
a	O	O	O	O	O	O
strange	O	O	O	O	O	O
file	O	O	O	O	O	O
alignment	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
normalize	O	O	O	O	O	O
.	O	O	O	O	O	O

Thus	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
are	O	O	O	O	O	O
at	O	O	O	O	O	O
stage	O	O	O	O	O	O
3	O	O	O	O	O	O
.	O	O	O	O	O	O

But	O	O	O	O	O	O
before	O	O	O	O	O	O
proceeding	O	O	O	O	O	O
with	O	O	O	O	O	O
stage	O	O	O	O	O	O
3	O	O	O	O	O	O
,	O	O	O	O	O	O
here	O	O	O	O	O	O
are	O	O	O	O	O	O
few	O	O	O	O	O	O
more	O	O	O	O	O	O
methods	O	O	O	O	O	O
that	O	O	O	O	O	O
could	O	O	O	O	O	O
also	O	O	O	O	O	O
have	O	O	O	O	O	O
given	O	O	O	O	O	O
us	O	O	O	O	O	O
the	O	O	O	O	O	O
key	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
stage	O	O	O	O	O	O
.	O	O	O	O	O	O

1	O	O	O	O	O	O
.	O	O	O	O	O	O
Search	O	O	O	O	O	O
for	O	O	O	O	O	O
instruction	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
binary	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
5th	O	O	O	O	O	O
stage	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
accesses	O	O	O	O	O	O
the	O	O	O	O	O	O
key	O	O	O	O	O	O
.	O	O	O	O	O	O

Here	O	O	O	O	O	O
are	O	O	O	O	O	O
the	O	O	O	O	O	O
examples	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
our	O	O	O	O	O	O
analysis	O	O	O	O	O	O
.	O	O	O	O	O	O

1.8A	O	O	O	O	O	O
0C	O	O	O	O	O	O
1D	O	O	O	O	O	O
FF	O	O	O	O	O	O
31	O	O	O	O	O	O
40	O	O	O	O	O	O
00	O	O	O	O	O	O
                         	O	O	O	O	O	O
MOV	O	O	O	O	O	O
CL	O	O	O	O	O	O
,	O	O	O	O	O	O
BYTE	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
EBX	O	O	O	O	O	O
+	O	O	O	O	O	O
4031FF	O	O	O	O	O	O
]	O	O	O	O	O	O

2.2A	O	O	O	O	O	O
0C	O	O	O	O	O	O
1D	O	O	O	O	O	O
30	O	O	O	O	O	O
42	O	O	O	O	O	O
40	O	O	O	O	O	O
00	O	O	O	O	O	O
                        	O	O	O	O	O	O
SUB	O	O	O	O	O	O
CL	O	O	O	O	O	O
,	O	O	O	O	O	O
BYTE	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
EBX	O	O	O	O	O	O
+	O	O	O	O	O	O
404230	O	O	O	O	O	O
]	O	O	O	O	O	O

3.8D	O	O	O	O	O	O
84	O	O	O	O	O	O
01	O	O	O	O	O	O
0B	O	O	O	O	O	O
32	O	O	O	O	O	O
36	O	O	O	O	O	O
01	O	O	O	O	O	O
                         	O	O	O	O	O	O
LEA	O	O	O	O	O	O
EAX	O	O	O	O	O	O
,	O	O	O	O	O	O
DWORD	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
ECX	O	O	O	O	O	O
+	O	O	O	O	O	O
EAX	O	O	O	O	O	O
+	O	O	O	O	O	O
136320B	O	O	O	O	O	O
]	O	O	O	O	O	O

4.8B	O	O	O	O	O	O
1D	O	O	O	O	O	O
E4	O	O	O	O	O	O
DD	O	O	O	O	O	O
46	O	O	O	O	O	O
00	O	O	O	O	O	O
                             	O	O	O	O	O	O
MOV	O	O	O	O	O	O
EBX	O	O	O	O	O	O
,	O	O	O	O	O	O
DWORD	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
46DDE4	O	O	O	O	O	O
]	O	O	O	O	O	O

5.8D	O	O	O	O	O	O
0D	O	O	O	O	O	O
81	O	O	O	O	O	O
A1	O	O	O	O	O	O
3D	O	O	O	O	O	O
01	O	O	O	O	O	O
                             	O	O	O	O	O	O
LEA	O	O	O	O	O	O
ECX	O	O	O	O	O	O
,	O	O	O	O	O	O
DWORD	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
13DA181	O	O	O	O	O	O
]	O	O	O	O	O	O

6.8A	O	O	O	O	O	O
86	O	O	O	O	O	O
77	O	O	O	O	O	O
41	O	O	O	O	O	O
E8	O	O	O	O	O	O
00	O	O	O	O	O	O
                               	O	O	O	O	O	O
MOV	O	O	O	O	O	O
AL	O	O	O	O	O	O
,	O	O	O	O	O	O
BYTE	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
ESI	O	O	O	O	O	O
+	O	O	O	O	O	O
E84177	O	O	O	O	O	O
]	O	O	O	O	O	O

7.8A	O	O	O	O	O	O
98	O	O	O	O	O	O
77	O	O	O	O	O	O
51	O	O	O	O	O	O
C0	O	O	O	O	O	O
00	O	O	O	O	O	O
                              	O	O	O	O	O	O
MOV	O	O	O	O	O	O
BL	O	O	O	O	O	O
,	O	O	O	O	O	O
BYTE	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
EAX	O	O	O	O	O	O
+	O	O	O	O	O	O
C05177	O	O	O	O	O	O
]	O	O	O	O	O	O

8	O	O	O	O	O	O
.	O	O	O	O	O	O
A1	O	O	O	O	O	O
3C	O	O	O	O	O	O
FB	O	O	O	O	O	O
46	O	O	O	O	O	O
00	O	O	O	O	O	O
                                    	O	O	O	O	O	O
MOV	O	O	O	O	O	O
EAX	O	O	O	O	O	O
,	O	O	O	O	O	O
DWORD	O	O	O	O	O	O
PTR	O	O	O	O	O	O
DS	O	O	O	O	O	O
:	O	O	O	O	O	O
[	O	O	O	O	O	O
46FB3C	O	O	O	O	O	O
]	O	O	O	O	O	O

DWORD	O	O	O	O	O	O
points	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
 	O	O	O	O	O	O
key	O	O	O	O	O	O
array	O	O	O	O	O	O
;	O	O	O	O	O	O
of	O	O	O	O	O	O
course	O	O	O	O	O	O
it	O	O	O	O	O	O
will	O	O	O	O	O	O
give	O	O	O	O	O	O
a	O	O	O	O	O	O
false	O	O	O	O	O	O
address	O	O	O	O	O	O
.	O	O	O	O	O	O

So	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
validate	O	O	O	O	O	O
the	O	O	O	O	O	O
key	O	O	O	O	O	O
by	O	O	O	O	O	O
applying	O	O	O	O	O	O
it	O	O	O	O	O	O
on	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
for	O	O	O	O	O	O
each	O	O	O	O	O	O
such	O	O	O	O	O	O
instruction	O	O	O	O	O	O
.	O	O	O	O	O	O

2	O	O	O	O	O	O
.	O	O	O	O	O	O
In	O	O	O	O	O	O
most	O	O	O	O	O	O
 	O	O	O	O	O	O
cases	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
key	O	O	O	O	O	O
is	O	O	O	O	O	O
found	O	O	O	O	O	O
just	O	O	O	O	O	O
above	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
pdb	O	O	O	O	O	O
path	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Stage	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

At	O	O	O	O	O	O
this	O	O	O	O	O	O
stage	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
a	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
whose	O	O	O	O	O	O
file	O	O	O	O	O	O
alignment	O	O	O	O	O	O
is	O	O	O	O	O	O
messed	O	O	O	O	O	O
up	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
are	O	O	O	O	O	O
going	O	O	O	O	O	O
to	O	O	O	O	O	O
assign	O	O	O	O	O	O
a	O	O	O	O	O	O
new	O	O	O	O	O	O
file	O	O	O	O	O	O
alignment	O	O	O	O	O	O
to	O	O	O	O	O	O
this	O	O	O	O	O	O
PE	O	O	O	O	O	O
image	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
0x200	O	O	O	O	O	O
.	O	O	O	O	O	O

Changing	O	O	O	O	O	O
the	O	O	O	O	O	O
file	O	O	O	O	O	O
alignment	O	O	O	O	O	O
is	O	O	O	O	O	O
trivial	O	O	O	O	O	O
,	O	O	O	O	O	O
only	O	O	O	O	O	O
requiring	O	O	O	O	O	O
us	O	O	O	O	O	O
to	O	O	O	O	O	O
carefully	O	O	O	O	O	O
shift	O	O	O	O	O	O
sections	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
new	O	O	O	O	O	O
file	O	O	O	O	O	O
alignment	O	O	O	O	O	O
based	O	O	O	O	O	O
calculated	O	O	O	O	O	O
addresses	O	O	O	O	O	O
and	O	O	O	O	O	O
updating	O	O	O	O	O	O
section	O	O	O	O	O	O
 	O	O	O	O	O	O
addresses	O	O	O	O	O	O
and	O	O	O	O	O	O
sizes	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
Section	O	O	O	O	O	O
Header	O	O	O	O	O	O
table	O	O	O	O	O	O
.	O	O	O	O	O	O

Here	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
pseudo	O	O	O	O	O	O
code	O	O	O	O	O	O
.	O	O	O	O	O	O

dwNewFileAllignment	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0x200	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

dwCurrentRawAddress	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
GetAllignedDwrod	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
PEHeader.OptionalHeader.SizeOfHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwNewFileAllignment	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
while	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
NumberOfSections	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
NewSecionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
PointerToRawData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwCurrentRawAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
NewSecionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
SizeOfRawData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
GetAllignedDwrod	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
OldSecionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
SizeOfRawData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwNewFileAllignment	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
Memcpy	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
pbyNewFileBuffer	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwCurrentRawAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pbyOldFileData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
OldSecionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
PointerToRawData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
OldSecionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
SizeOfRawData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
dwCurrentRawAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
GetAllignedDwrod	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
OldSecionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
SizeOfRawData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwNewFileAllignment	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
dwCurrentRawAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
GetAllignedDwrod	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwCurrentRawAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwNewFileAllignment	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
i	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

This	O	O	O	O	O	O
is	O	O	O	O	O	O
it	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
plain	O	O	O	O	O	O
and	O	O	O	O	O	O
loadable	O	O	O	O	O	O
binary	O	O	O	O	O	O
of	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
.	O	O	O	O	O	O

That	O	O	O	O	O	O
moved	O	O	O	O	O	O
us	O	O	O	O	O	O
to	O	O	O	O	O	O
stage	O	O	O	O	O	O
2	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Stage	O	O	O	O	O	O
2	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

In	O	O	O	O	O	O
the	O	O	O	O	O	O
appended	O	O	O	O	O	O
data	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
custom	O	O	O	O	O	O
loader	O	O	O	O	O	O
,	O	O	O	O	O	O
there	O	O	O	O	O	O
is	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
nothing	O	O	O	O	O	O
but	O	O	O	O	O	O
an	O	O	O	O	O	O
 	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
version	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
malware	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
encryption	O	O	O	O	O	O
method	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
same	O	O	O	O	O	O
as	O	O	O	O	O	O
that	O	O	O	O	O	O
of	O	O	O	O	O	O
stage	O	O	O	O	O	O
4	O	O	O	O	O	O
.	O	O	O	O	O	O

All	O	O	O	O	O	O
we	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
do	O	O	O	O	O	O
here	O	O	O	O	O	O
is	O	O	O	O	O	O
calculate	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
offset	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
appended	O	O	O	O	O	O
data	O	O	O	O	O	O
and	O	O	O	O	O	O
apply	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
decryption	O	O	O	O	O	O
technique	O	O	O	O	O	O
mentioned	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
4th	O	O	O	O	O	O
stage	O	O	O	O	O	O
.	O	O	O	O	O	O

As	O	O	O	O	O	O
a	O	O	O	O	O	O
result	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
got	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
,	O	O	O	O	O	O
but	O	O	O	O	O	O
it	O	O	O	O	O	O
needed	O	O	O	O	O	O
some	O	O	O	O	O	O
fixes	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
code	O	O	O	O	O	O
as	O	O	O	O	O	O
some	O	O	O	O	O	O
instructions	O	O	O	O	O	O
were	O	O	O	O	O	O
missing	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Stage	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

At	O	O	O	O	O	O
this	O	O	O	O	O	O
stage	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
a	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
somewhat	O	O	O	O	O	O
incomplete	O	O	O	O	O	O
because	O	O	O	O	O	O
the	O	O	O	O	O	O
loader	O	O	O	O	O	O
binary	O	O	O	O	O	O
had	O	O	O	O	O	O
already	O	O	O	O	O	O
eaten	O	O	O	O	O	O
up	O	O	O	O	O	O
some	O	O	O	O	O	O
instructions	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
code	O	O	O	O	O	O
section	O	O	O	O	O	O
.	O	O	O	O	O	O

These	O	O	O	O	O	O
eaten	O	O	O	O	O	O
instructions	O	O	O	O	O	O
will	O	O	O	O	O	O
be	O	O	O	O	O	O
put	O	O	O	O	O	O
in	O	O	O	O	O	O
memory	O	O	O	O	O	O
and	O	O	O	O	O	O
a	O	O	O	O	O	O
JUMP	O	O	O	O	O	O
instruction	O	O	O	O	O	O
will	O	O	O	O	O	O
be	O	O	O	O	O	O
inserted	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
code	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
binary	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
points	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
corresponding	O	O	O	O	O	O
eaten	O	O	O	O	O	O
instructions	O	O	O	O	O	O
.	O	O	O	O	O	O

Then	O	O	O	O	O	O
the	O	O	O	O	O	O
control	O	O	O	O	O	O
is	O	O	O	O	O	O
passed	O	O	O	O	O	O
over	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
core	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
below	O	O	O	O	O	O
image	O	O	O	O	O	O
is	O	O	O	O	O	O
an	O	O	O	O	O	O
example	O	O	O	O	O	O
of	O	O	O	O	O	O
how	O	O	O	O	O	O
this	O	O	O	O	O	O
obfuscation	O	O	O	O	O	O
appears	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453554	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Image	O	O	O	O	O	O
6	O	O	O	O	O	O
:	O	O	O	O	O	O
Obfuscated	O	O	O	O	O	O
code	O	O	O	O	O	O
with	O	O	O	O	O	O
JUMP	O	O	O	O	O	O
instruction	O	O	O	O	O	O

The	O	O	O	O	O	O
final	O	O	O	O	O	O
objective	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
de-obfuscate	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
code	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

That	O	O	O	O	O	O
means	O	O	O	O	O	O
we	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
return	O	O	O	O	O	O
the	O	O	O	O	O	O
eaten	O	O	O	O	O	O
instructions	O	O	O	O	O	O
back	O	O	O	O	O	O
to	O	O	O	O	O	O
their	O	O	O	O	O	O
actual	O	O	O	O	O	O
location	O	O	O	O	O	O
and	O	O	O	O	O	O
remove	O	O	O	O	O	O
the	O	O	O	O	O	O
JUMPs	O	O	O	O	O	O
.	O	O	O	O	O	O

At	O	O	O	O	O	O
this	O	O	O	O	O	O
point	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
above	O	O	O	O	O	O
code	O	O	O	O	O	O
will	O	O	O	O	O	O
appear	O	O	O	O	O	O
as	O	O	O	O	O	O
follows	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
_	O	O	O	O	O	O
1549453573	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Image	O	O	O	O	O	O
7	O	O	O	O	O	O
:	O	O	O	O	O	O
De-obfuscated	O	O	O	O	O	O
code	O	O	O	O	O	O

It	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
loader	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
responsibility	O	O	O	O	O	O
to	O	O	O	O	O	O
 	O	O	O	O	O	O
smoothly	O	O	O	O	O	O
execute	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
malware	O	O	O	O	O	O
even	O	O	O	O	O	O
after	O	O	O	O	O	O
instructions	O	O	O	O	O	O
are	O	O	O	O	O	O
placed	O	O	O	O	O	O
in	O	O	O	O	O	O
different	O	O	O	O	O	O
locations	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
loader	O	O	O	O	O	O
needs	O	O	O	O	O	O
to	O	O	O	O	O	O
calculate	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
JUMP	O	O	O	O	O	O
address	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
moved	O	O	O	O	O	O
instructions	O	O	O	O	O	O
and	O	O	O	O	O	O
put	O	O	O	O	O	O
the	O	O	O	O	O	O
JUMP	O	O	O	O	O	O
instructions	O	O	O	O	O	O
in	O	O	O	O	O	O
place	O	O	O	O	O	O
of	O	O	O	O	O	O
those	O	O	O	O	O	O
instructions	O	O	O	O	O	O
.	O	O	O	O	O	O

For	O	O	O	O	O	O
this	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
moved	O	O	O	O	O	O
instructions	O	O	O	O	O	O
and	O	O	O	O	O	O
their	O	O	O	O	O	O
meta	O	O	O	O	O	O
information	O	O	O	O	O	O
are	O	O	O	O	O	O
stored	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
loader	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
binary	O	O	O	O	O	O
itself	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
our	O	O	O	O	O	O
analysis	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
found	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
table	O	O	O	O	O	O
containing	O	O	O	O	O	O
this	O	O	O	O	O	O
information	O	O	O	O	O	O
was	O	O	O	O	O	O
present	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
 	O	O	O	O	O	O
“	O	O	O	O	O	O
.	O	O	O	O	O	O
rdata	O	O	O	O	O	O
”	O	O	O	O	O	O
section	O	O	O	O	O	O
.	O	O	O	O	O	O

struct	O	O	O	O	O	O
DeobfuscationTable	O	O	O	O	O	O

{	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
unsigned	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
int	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwOrgInstrVAdddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Address	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
of	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
eaten	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
instruction	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
in	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
loader	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
’	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
s	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
binary	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
unsigned	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
int	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwPatchRVAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
    	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Offset	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
where	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Jump	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
need	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
to	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
insert	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
unsigned	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
int	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwOrgInstrLength	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
    	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
length	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
of	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
moved	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
instructions	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
in	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
bytes	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

}	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

Once	O	O	O	O	O	O
we	O	O	O	O	O	O
get	O	O	O	O	O	O
the	O	O	O	O	O	O
de-obfuscation	O	O	O	O	O	O
table	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
just	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
read	O	O	O	O	O	O
“	O	O	O	O	O	O
dwOrgInstrLength	O	O	O	O	O	O
”	O	O	O	O	O	O
bytes	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
virtual	O	O	O	O	O	O
address	O	O	O	O	O	O
“	O	O	O	O	O	O
dwOrgInstrVAdddress	O	O	O	O	O	O
”	O	O	O	O	O	O
loader	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
binary	O	O	O	O	O	O
and	O	O	O	O	O	O
write	O	O	O	O	O	O
them	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
relative	O	O	O	O	O	O
virtual	O	O	O	O	O	O
address	O	O	O	O	O	O
“	O	O	O	O	O	O
dwPatchRVAddress	O	O	O	O	O	O
”	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
core	O	O	O	O	O	O
malware	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

Here	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
pseudo	O	O	O	O	O	O
code	O	O	O	O	O	O
for	O	O	O	O	O	O
this	O	O	O	O	O	O
.	O	O	O	O	O	O

while	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
pDeObfuscationTable	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwOrgInstrVAdddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
!	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
 	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
0x00	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

{	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
patchOffset	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
GetFileOffsetFromRVA	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pCorePEHeader	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pCoreSectionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pDeObfuscationTable	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwPatchRVAddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
orgInsOffset	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
GetFileOffsetFromRVA	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pLoaderPEHeader	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pLoaderSectionHeaders	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pDeObfuscationTable	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwOrgInstrVAdddress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
pLoaderPEHeader-OptionalHeader.ImageBase	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
memcpy	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pbyCoreFileData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwPatchOffset	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pbyLoaderFileData	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
orgInstrOffset	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

                	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pDeObfuscationTable	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dwOrgInstrLength	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pDeObfuscationTable	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
;	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

}	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet

At	O	O	O	O	O	O
this	O	O	O	O	O	O
stage	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
would	O	O	O	O	O	O
have	O	O	O	O	O	O
obtained	O	O	O	O	O	O
the	O	O	O	O	O	O
plain	O	O	O	O	O	O
,	O	O	O	O	O	O
independently	O	O	O	O	O	O
executable	O	O	O	O	O	O
core	O	O	O	O	O	O
Emotet	O	O	O	O	O	O
binary	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
decompiled	O	O	O	O	O	O
by	O	O	O	O	O	O
IDA	O	O	O	O	O	O
or	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
bin-diffed	O	O	O	O	O	O
with	O	O	O	O	O	O
other	O	O	O	O	O	O
binaries	O	O	O	O	O	O
extracted	O	O	O	O	O	O
by	O	O	O	O	O	O
this	O	O	O	O	O	O
decoder	O	O	O	O	O	O
.	O	O	O	O	O	O

