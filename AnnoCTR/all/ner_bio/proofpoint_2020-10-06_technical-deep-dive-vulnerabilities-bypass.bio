<DOCSTART>	O	O	O	O	O	O

Technical	O	O	O	O	O	O
Deep	O	O	O	O	O	O
Dive	O	O	O	O	O	O
:	O	O	O	O	O	O
Vulnerabilities	O	O	O	O	O	O
Bypass	O	O	O	O	O	O
Multi-Factor	O	O	O	O	O	O
Authentication	O	O	O	O	O	O
for	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
365	O	O	O	O	O	O

October	O	O	B-DATE	O	O	B-DATE
06	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2020	O	O	I-DATE	O	O	I-DATE

A	O	O	O	O	O	O
few	O	O	O	O	O	O
weeks	O	O	O	O	O	O
ago	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
gave	O	O	O	O	O	O
a	O	O	O	O	O	O
presentation	O	O	O	O	O	O
at	O	O	O	O	O	O
[	O	O	O	O	O	O
Proofpoint	B-ORG	O	O	O	O	B-ORG
Protect	O	O	O	O	O	O
Global	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.proofpoint.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
events	O	O	O	O	O	O
/	O	O	O	O	O	O
protect	O	O	O	O	O	O
)	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
common	O	O	O	O	O	O
methods	O	O	O	O	O	O
of	O	O	O	O	O	O
bypassing	O	O	O	O	O	O
multi-factor	O	O	O	O	O	O
authentication	O	O	O	O	O	O
(	O	O	O	O	O	O
MFA	O	O	O	O	O	O
)	O	O	O	O	O	O
and	O	O	O	O	O	O
summarized	O	O	O	O	O	O
my	O	O	O	O	O	O
findings	O	O	O	O	O	O
in	O	O	O	O	O	O
[	O	O	O	O	O	O
this	O	O	O	O	O	O
recent	O	O	O	O	O	O
blog	O	O	O	O	O	O
post	O	O	O	O	O	O
]	O	O	O	O	O	O

(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.proofpoint.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
blog	O	O	O	O	O	O
/	O	O	O	O	O	O
cloud-security	O	O	O	O	O	O
/	O	O	O	O	O	O
new-vulnerabilities-bypass-multi-factor-authentication-microsoft	O	O	O	O	O	O
-	O	O	O	O	O	O
365	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

I	O	O	O	O	O	O
demonstrated	O	O	O	O	O	O
new	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
that	O	O	O	O	O	O
bypassed	O	O	O	O	O	O
MFA	O	O	O	O	O	O
and	O	O	O	O	O	O
showed	O	O	O	O	O	O
how	O	O	O	O	O	O
an	O	O	O	O	O	O
attacker	O	O	O	O	O	O
could	O	O	O	O	O	O
act	O	O	O	O	O	O
on	O	O	O	O	O	O
behalf	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
account	O	O	O	O	O	O
holder	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
includes	O	O	O	O	O	O
full	O	O	O	O	O	O
access	O	O	O	O	O	O
to	O	O	O	O	O	O
Office	O	O	O	O	O	O
365	O	O	O	O	O	O
/	O	O	O	O	O	O
Azure	O	O	O	O	O	O
development	O	O	O	O	O	O
and	O	O	O	O	O	O
production	O	O	O	O	O	O
environments	O	O	O	O	O	O
,	O	O	O	O	O	O
email	O	O	O	O	O	O
,	O	O	O	O	O	O
email	O	O	O	O	O	O
rules	O	O	O	O	O	O
,	O	O	O	O	O	O
cloud	O	O	O	O	O	O
apps	O	O	O	O	O	O
and	O	O	O	O	O	O
more	O	O	O	O	O	O
.	O	O	O	O	O	O

I	O	O	O	O	O	O
tested	O	O	O	O	O	O
several	O	O	O	O	O	O
Identity	O	O	O	O	O	O
Provider	O	O	O	O	O	O
(	O	O	O	O	O	O
IdP	O	O	O	O	O	O
)	O	O	O	O	O	O
solutions	O	O	O	O	O	O
and	O	O	O	O	O	O
demonstrated	O	O	O	O	O	O
the	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
with	O	O	O	O	O	O
Okta	B-ORG	O	O	O	O	B-ORG
and	O	O	O	O	O	O
OneLogin	O	O	O	O	O	O
,	O	O	O	O	O	O
who	O	O	O	O	O	O
had	O	O	O	O	O	O
already	O	O	O	O	O	O
resolved	O	O	O	O	O	O
these	O	O	O	O	O	O
security	O	O	O	O	O	O
issues	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
this	O	O	O	O	O	O
blog	O	O	O	O	O	O
post	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
will	O	O	O	O	O	O
elaborate	O	O	O	O	O	O
on	O	O	O	O	O	O
some	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
technical	O	O	O	O	O	O
details	O	O	O	O	O	O
on	O	O	O	O	O	O
how	O	O	O	O	O	O
attackers	O	O	O	O	O	O
bypass	O	O	O	O	O	O
MFA	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
My	O	O	O	O	O	O
Path	O	O	O	O	O	O
to	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

During	O	O	O	O	O	O
my	O	O	O	O	O	O
research	O	O	O	O	O	O
on	O	O	O	O	O	O
how	O	O	O	O	O	O
MFA	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
bypassed	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
researched	O	O	O	O	O	O
many	O	O	O	O	O	O
protocols	O	O	O	O	O	O
,	O	O	O	O	O	O
applications	O	O	O	O	O	O
and	O	O	O	O	O	O
directions	O	O	O	O	O	O
,	O	O	O	O	O	O
but	O	O	O	O	O	O
one	O	O	O	O	O	O
stood	O	O	O	O	O	O
out	O	O	O	O	O	O
.	O	O	O	O	O	O

When	O	O	O	O	O	O
testing	O	O	O	O	O	O
the	O	O	O	O	O	O
common	O	O	O	O	O	O
application	O	O	O	O	O	O
Skype	B-SECTOR	O	O	O	O	B-SECTOR
for	O	O	O	O	O	O
Business	O	O	O	O	O	O
(	O	O	O	O	O	O
SfB	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
how	O	O	O	O	O	O
it	O	O	O	O	O	O
communicates	O	O	O	O	O	O
with	O	O	O	O	O	O
its	O	O	O	O	O	O
servers	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
,	O	O	O	O	O	O
an	O	O	O	O	O	O
inconsistency	O	O	O	O	O	O
came	O	O	O	O	O	O
to	O	O	O	O	O	O
my	O	O	O	O	O	O
attention	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
some	O	O	O	O	O	O
scenarios	O	O	O	O	O	O
with	O	O	O	O	O	O
some	O	O	O	O	O	O
IdPs	O	O	O	O	O	O
,	O	O	O	O	O	O
SfB	O	O	O	O	O	O
did	O	O	O	O	O	O
not	O	O	O	O	O	O
ask	O	O	O	O	O	O
for	O	O	O	O	O	O
MFA	O	O	O	O	O	O
during	O	O	O	O	O	O
the	O	O	O	O	O	O
login	O	O	O	O	O	O
even	O	O	O	O	O	O
though	O	O	O	O	O	O
MFA	O	O	O	O	O	O
was	O	O	O	O	O	O
always	O	O	O	O	O	O
enabled	O	O	O	O	O	O
for	O	O	O	O	O	O
this	O	O	O	O	O	O
tenant	O	O	O	O	O	O
.	O	O	O	O	O	O

As	O	O	O	O	O	O
a	O	O	O	O	O	O
researcher	O	O	O	O	O	O
,	O	O	O	O	O	O
this	O	O	O	O	O	O
alarmed	O	O	O	O	O	O
me	O	O	O	O	O	O
.	O	O	O	O	O	O

I	O	O	O	O	O	O
started	O	O	O	O	O	O
digging	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
protocols	O	O	O	O	O	O
used	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
implementation	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
flow	O	O	O	O	O	O
of	O	O	O	O	O	O
data	O	O	O	O	O	O
between	O	O	O	O	O	O
different	O	O	O	O	O	O
endpoints	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
entire	O	O	O	O	O	O
process	O	O	O	O	O	O
took	O	O	O	O	O	O
many	O	O	O	O	O	O
days	O	O	O	O	O	O
as	O	O	O	O	O	O
I	O	O	O	O	O	O
was	O	O	O	O	O	O
not	O	O	O	O	O	O
familiar	O	O	O	O	O	O
with	O	O	O	O	O	O
SfB	O	O	O	O	O	O
protocols	O	O	O	O	O	O
at	O	O	O	O	O	O
all	O	O	O	O	O	O
,	O	O	O	O	O	O
nor	O	O	O	O	O	O
did	O	O	O	O	O	O
I	O	O	O	O	O	O
know	O	O	O	O	O	O
the	O	O	O	O	O	O
rabbit	O	O	O	O	O	O
hole	O	O	O	O	O	O
I	O	O	O	O	O	O
was	O	O	O	O	O	O
getting	O	O	O	O	O	O
into	O	O	O	O	O	O
.	O	O	O	O	O	O

After	O	O	O	O	O	O
a	O	O	O	O	O	O
few	O	O	O	O	O	O
attempts	O	O	O	O	O	O
that	O	O	O	O	O	O
included	O	O	O	O	O	O
code	O	O	O	O	O	O
injection	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
process	O	O	O	O	O	O
,	O	O	O	O	O	O
sniffing	O	O	O	O	O	O
and	O	O	O	O	O	O
trying	O	O	O	O	O	O
to	O	O	O	O	O	O
break	O	O	O	O	O	O
parts	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
encryption	O	O	O	O	O	O
,	O	O	O	O	O	O

I	O	O	O	O	O	O
was	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
use	O	O	O	O	O	O
the	O	O	O	O	O	O
tokens	O	O	O	O	O	O
provided	O	O	O	O	O	O
for	O	O	O	O	O	O
Skype	B-SECTOR	O	O	O	O	B-SECTOR
to	O	O	O	O	O	O
communicate	O	O	O	O	O	O
with	O	O	O	O	O	O
users	O	O	O	O	O	O
and	O	O	O	O	O	O
extract	O	O	O	O	O	O
information	O	O	O	O	O	O
about	O	O	O	O	O	O
the	O	O	O	O	O	O
tenant	O	O	O	O	O	O
that	O	O	O	O	O	O
I	O	O	O	O	O	O
should	O	O	O	O	O	O
not	O	O	O	O	O	O
have	O	O	O	O	O	O
been	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
get	O	O	O	O	O	O
without	O	O	O	O	O	O
MFA	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
prompted	O	O	O	O	O	O
me	O	O	O	O	O	O
to	O	O	O	O	O	O
research	O	O	O	O	O	O
the	O	O	O	O	O	O
origin	O	O	O	O	O	O
and	O	O	O	O	O	O
flow	O	O	O	O	O	O
of	O	O	O	O	O	O
these	O	O	O	O	O	O
tokens	O	O	O	O	O	O
.	O	O	O	O	O	O

I	O	O	O	O	O	O
needed	O	O	O	O	O	O
to	O	O	O	O	O	O
determine	O	O	O	O	O	O
how	O	O	O	O	O	O
Skype	B-SECTOR	O	O	O	O	B-SECTOR
gets	O	O	O	O	O	O
these	O	O	O	O	O	O
tokens	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
how	O	O	O	O	O	O
it	O	O	O	O	O	O
was	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
bypass	O	O	O	O	O	O
MFA	O	O	O	O	O	O
entirely	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
led	O	O	O	O	O	O
me	O	O	O	O	O	O
to	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
protocol	O	O	O	O	O	O
and	O	O	O	O	O	O
active	O	O	O	O	O	O
endpoints	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
What	O	O	O	O	O	O
Is	O	O	O	O	O	O
the	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
Protocol	O	O	O	O	O	O
?	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

According	O	O	O	O	O	O
to	O	O	O	O	O	O
Wikipedia	O	O	O	O	O	O
,	O	O	O	O	O	O
[	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
en.wikipedia.org	O	O	O	O	O	O
/	O	O	O	O	O	O
wiki	O	O	O	O	O	O
/	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
)	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
WS	O	O	O	O	O	O
-	O	O	O	O	O	O
*	O	O	O	O	O	O
specification	O	O	O	O	O	O
and	O	O	O	O	O	O
OASIS	B-ORG	O	O	O	O	B-ORG
standard	O	O	O	O	O	O
that	O	O	O	O	O	O
provides	O	O	O	O	O	O
extensions	O	O	O	O	O	O
to	O	O	O	O	O	O
WS-Security	O	O	O	O	O	O
,	O	O	O	O	O	O
specifically	O	O	O	O	O	O
dealing	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
issuing	O	O	O	O	O	O
,	O	O	O	O	O	O
renewing	O	O	O	O	O	O
and	O	O	O	O	O	O
validating	O	O	O	O	O	O
of	O	O	O	O	O	O
security	O	O	O	O	O	O
tokens	O	O	O	O	O	O
,	O	O	O	O	O	O
as	O	O	O	O	O	O
well	O	O	O	O	O	O
as	O	O	O	O	O	O
with	O	O	O	O	O	O
ways	O	O	O	O	O	O
to	O	O	O	O	O	O
establish	O	O	O	O	O	O
,	O	O	O	O	O	O
assess	O	O	O	O	O	O
the	O	O	O	O	O	O
presence	O	O	O	O	O	O
of	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
broker	O	O	O	O	O	O
trust	O	O	O	O	O	O
relationships	O	O	O	O	O	O
between	O	O	O	O	O	O
,	O	O	O	O	O	O
participants	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
secure	O	O	O	O	O	O
message	O	O	O	O	O	O
exchange	O	O	O	O	O	O
.	O	O	O	O	O	O

[	O	O	O	O	O	O
Web	O	O	O	O	O	O
Services	O	O	O	O	O	O
Security	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
en.wikipedia.org	O	O	O	O	O	O
/	O	O	O	O	O	O
wiki	O	O	O	O	O	O
/	O	O	O	O	O	O
WS-Security	O	O	O	O	O	O
)	O	O	O	O	O	O
(	O	O	O	O	O	O
WS-Security	O	O	O	O	O	O
,	O	O	O	O	O	O
WSS	O	O	O	O	O	O
)	O	O	O	O	O	O
is	O	O	O	O	O	O
an	O	O	O	O	O	O
extension	O	O	O	O	O	O
to	O	O	O	O	O	O
SOAP	O	O	O	O	O	O
to	O	O	O	O	O	O
apply	O	O	O	O	O	O
security	O	O	O	O	O	O
to	O	O	O	O	O	O
Web	O	O	O	O	O	O
services	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
member	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
Web	O	O	O	O	O	O
service	O	O	O	O	O	O
specifications	O	O	O	O	O	O
and	O	O	O	O	O	O
was	O	O	O	O	O	O
published	O	O	O	O	O	O
by	O	O	O	O	O	O
OASIS	B-ORG	O	O	O	O	B-ORG
.	O	O	O	O	O	O
The	O	O	O	O	O	O
protocol	O	O	O	O	O	O
specifies	O	O	O	O	O	O
how	O	O	O	O	O	O
integrity	O	O	O	O	O	O
and	O	O	O	O	O	O
confidentiality	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
enforced	O	O	O	O	O	O
on	O	O	O	O	O	O
messages	O	O	O	O	O	O
and	O	O	O	O	O	O
allows	O	O	O	O	O	O
the	O	O	O	O	O	O
communication	O	O	O	O	O	O
of	O	O	O	O	O	O
various	O	O	O	O	O	O
security	O	O	O	O	O	O
token	O	O	O	O	O	O
formats	O	O	O	O	O	O
,	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
Security	O	O	O	O	O	O
Assertion	O	O	O	O	O	O
Markup	O	O	O	O	O	O
Language	O	O	O	O	O	O
(	O	O	O	O	O	O
SAML	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
Kerberos	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
X	O	O	O	O	O	O
.509	O	O	O	O	O	O
.	O	O	O	O	O	O

Its	O	O	O	O	O	O
main	O	O	O	O	O	O
focus	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
use	O	O	O	O	O	O
of	O	O	O	O	O	O
XML	O	O	O	O	O	O
Signature	O	O	O	O	O	O
and	O	O	O	O	O	O
XML	O	O	O	O	O	O
Encryption	O	O	O	O	O	O
to	O	O	O	O	O	O
provide	O	O	O	O	O	O
end-to-end	O	O	O	O	O	O
security	O	O	O	O	O	O
.	O	O	O	O	O	O

Since	O	O	O	O	O	O
so	O	O	O	O	O	O
much	O	O	O	O	O	O
information	O	O	O	O	O	O
is	O	O	O	O	O	O
available	O	O	O	O	O	O
on	O	O	O	O	O	O
these	O	O	O	O	O	O
protocols	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
’	O	O	O	O	O	O
ll	O	O	O	O	O	O
just	O	O	O	O	O	O
highlight	O	O	O	O	O	O
what	O	O	O	O	O	O
we	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
know	O	O	O	O	O	O
in	O	O	O	O	O	O
order	O	O	O	O	O	O
to	O	O	O	O	O	O
understand	O	O	O	O	O	O
this	O	O	O	O	O	O
attack	O	O	O	O	O	O
:	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
is	O	O	O	O	O	O
used	O	O	O	O	O	O
with	O	O	O	O	O	O
active	O	O	O	O	O	O
endpoints	O	O	O	O	O	O
.	O	O	O	O	O	O

WS-Federation	O	O	O	O	O	O
is	O	O	O	O	O	O
used	O	O	O	O	O	O
with	O	O	O	O	O	O
passive	O	O	O	O	O	O
endpoints	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
active	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
is	O	O	O	O	O	O
usually	O	O	O	O	O	O
used	O	O	O	O	O	O
for	O	O	O	O	O	O
legacy	O	O	O	O	O	O
protocols	O	O	O	O	O	O
authentications	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
passive	O	O	O	O	O	O
one	O	O	O	O	O	O
is	O	O	O	O	O	O
usually	O	O	O	O	O	O
used	O	O	O	O	O	O
by	O	O	O	O	O	O
browsers	O	O	O	O	O	O
or	O	O	O	O	O	O
modern	O	O	O	O	O	O
clients	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
general	O	O	O	O	O	O
,	O	O	O	O	O	O
these	O	O	O	O	O	O
endpoints	O	O	O	O	O	O
reside	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
side	O	O	O	O	O	O
to	O	O	O	O	O	O
verify	O	O	O	O	O	O
logins	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Usual	O	O	O	O	O	O
Mitigations	O	O	O	O	O	O
Will	O	O	O	O	O	O
Not	O	O	O	O	O	O
Protect	O	O	O	O	O	O
You	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

“	O	O	O	O	O	O
The	O	O	O	O	O	O
best	O	O	O	O	O	O
way	O	O	O	O	O	O
to	O	O	O	O	O	O
protect	O	O	O	O	O	O
your	O	O	O	O	O	O
account	O	O	O	O	O	O
from	O	O	O	O	O	O
malicious	O	O	O	O	O	O
authentication	O	O	O	O	O	O
requests	O	O	O	O	O	O
made	O	O	O	O	O	O
by	O	O	O	O	O	O
legacy	O	O	O	O	O	O
protocols	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
block	O	O	O	O	O	O
these	O	O	O	O	O	O
attempts	O	O	O	O	O	O
altogether	O	O	O	O	O	O
.	O	O	O	O	O	O

—	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
The	O	O	O	O	O	O
usual	O	O	O	O	O	O
mitigations	O	O	O	O	O	O
do	O	O	O	O	O	O
not	O	O	O	O	O	O
help	O	O	O	O	O	O
against	O	O	O	O	O	O
this	O	O	O	O	O	O
MFA	O	O	O	O	O	O
bypass	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
known	O	O	O	O	O	O
mitigation	O	O	O	O	O	O
of	O	O	O	O	O	O
disabling	O	O	O	O	O	O
legacy	O	O	O	O	O	O
protocols	O	O	O	O	O	O
in	O	O	O	O	O	O
Azure	O	O	O	O	O	O
does	O	O	O	O	O	O
not	O	O	O	O	O	O
protect	O	O	O	O	O	O
against	O	O	O	O	O	O
this	O	O	O	O	O	O
bypass	O	O	O	O	O	O
as	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
can	O	O	O	O	O	O
pivot	O	O	O	O	O	O
to	O	O	O	O	O	O
modern	O	O	O	O	O	O
authentication	O	O	O	O	O	O
.	O	O	O	O	O	O

Pivoting	O	O	O	O	O	O
the	O	O	O	O	O	O
token	O	O	O	O	O	O
will	O	O	O	O	O	O
lead	O	O	O	O	O	O
Azure	O	O	O	O	O	O
to	O	O	O	O	O	O
report	O	O	O	O	O	O
and	O	O	O	O	O	O
believe	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
login	O	O	O	O	O	O
was	O	O	O	O	O	O
made	O	O	O	O	O	O
using	O	O	O	O	O	O
modern	O	O	O	O	O	O
authentication	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
can	O	O	O	O	O	O
also	O	O	O	O	O	O
mislead	O	O	O	O	O	O
the	O	O	O	O	O	O
administrator	O	O	O	O	O	O
to	O	O	O	O	O	O
believe	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
session	O	O	O	O	O	O
was	O	O	O	O	O	O
authorized	O	O	O	O	O	O
with	O	O	O	O	O	O
MFA	O	O	O	O	O	O
and	O	O	O	O	O	O
is	O	O	O	O	O	O
safe	O	O	O	O	O	O
.	O	O	O	O	O	O

Since	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
was	O	O	O	O	O	O
not	O	O	O	O	O	O
designed	O	O	O	O	O	O
with	O	O	O	O	O	O
MFA	O	O	O	O	O	O
in	O	O	O	O	O	O
mind	O	O	O	O	O	O
as	O	O	O	O	O	O
it	O	O	O	O	O	O
was	O	O	O	O	O	O
designed	O	O	O	O	O	O
many	O	O	O	O	O	O
years	O	O	O	O	O	O
ago	O	O	O	O	O	O
(	O	O	O	O	O	O
approved	O	O	O	O	O	O
at	O	O	O	O	O	O
March	O	O	B-DATE	O	O	B-DATE
2007	O	O	I-DATE	O	O	I-DATE
)	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
lacks	O	O	O	O	O	O
the	O	O	O	O	O	O
native	O	O	O	O	O	O
support	O	O	O	O	O	O
for	O	O	O	O	O	O
MFA	O	O	O	O	O	O
.	O	O	O	O	O	O

Hence	O	O	O	O	O	O
,	O	O	O	O	O	O
IdPs	O	O	O	O	O	O
have	O	O	O	O	O	O
to	O	O	O	O	O	O
invent	O	O	O	O	O	O
their	O	O	O	O	O	O
own	O	O	O	O	O	O
solutions	O	O	O	O	O	O
for	O	O	O	O	O	O
MFA	O	O	O	O	O	O
(	O	O	O	O	O	O
or	O	O	O	O	O	O
to	O	O	O	O	O	O
block	O	O	O	O	O	O
it	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
How	O	O	O	O	O	O
an	O	O	O	O	O	O
Attacker	O	O	O	O	O	O
Can	O	O	O	O	O	O
Leverage	O	O	O	O	O	O
New	O	O	O	O	O	O
Vulnerabilities	O	O	O	O	O	O
to	O	O	O	O	O	O
Bypass	O	O	O	O	O	O
MFA	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Basically	O	O	O	O	O	O
,	O	O	O	O	O	O
this	O	O	O	O	O	O
attack	O	O	O	O	O	O
works	O	O	O	O	O	O
by	O	O	O	O	O	O
:	O	O	O	O	O	O

1	O	O	O	O	O	O
.	O	O	O	O	O	O
Finding	O	O	O	O	O	O
the	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
address	O	O	O	O	O	O

2	O	O	O	O	O	O
.	O	O	O	O	O	O
Sending	O	O	O	O	O	O
a	O	O	O	O	O	O
SAML	O	O	O	O	O	O
request	O	O	O	O	O	O
directly	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O

3	O	O	O	O	O	O
.	O	O	O	O	O	O
Getting	O	O	O	O	O	O
a	O	O	O	O	O	O
SAML	O	O	O	O	O	O
V1	O	O	O	O	O	O
token	O	O	O	O	O	O

4	O	O	O	O	O	O
.	O	O	O	O	O	O
Converting	O	O	O	O	O	O
it	O	O	O	O	O	O
to	O	O	O	O	O	O
modern	O	O	O	O	O	O
token	O	O	O	O	O	O
via	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
services	O	O	O	O	O	O

5	O	O	O	O	O	O
.	O	O	O	O	O	O
Using	O	O	O	O	O	O
OAuth	O	O	O	O	O	O
2	O	O	O	O	O	O
token	O	O	O	O	O	O
\	O	O	O	O	O	O
cookie	O	O	O	O	O	O
for	O	O	O	O	O	O
full	O	O	O	O	O	O
control	O	O	O	O	O	O
over	O	O	O	O	O	O
the	O	O	O	O	O	O
account	O	O	O	O	O	O

For	O	O	O	O	O	O
example	O	O	O	O	O	O
,	O	O	O	O	O	O
let	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
say	O	O	O	O	O	O
that	O	O	O	O	O	O
“	O	O	O	O	O	O
Alice	O	O	O	O	O	O
”	O	O	O	O	O	O
wants	O	O	O	O	O	O
to	O	O	O	O	O	O
connect	O	O	O	O	O	O
to	O	O	O	O	O	O
MS	B-ORG	O	O	O	O	B-ORG
365	O	O	O	O	O	O
to	O	O	O	O	O	O
send	O	O	O	O	O	O
an	O	O	O	O	O	O
email	O	O	O	O	O	O
to	O	O	O	O	O	O
her	O	O	O	O	O	O
old	O	O	O	O	O	O
friend	O	O	O	O	O	O
“	O	O	O	O	O	O
Bob	O	O	O	O	O	O
.	O	O	O	O	O	O

Note	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
MS	B-ORG	O	O	O	O	B-ORG
365	O	O	O	O	O	O
tenant	O	O	O	O	O	O
uses	O	O	O	O	O	O
federation	O	O	O	O	O	O
and	O	O	O	O	O	O
SSO	O	O	O	O	O	O
services	O	O	O	O	O	O
with	O	O	O	O	O	O
MFA	O	O	O	O	O	O
enabled	O	O	O	O	O	O
provided	O	O	O	O	O	O
by	O	O	O	O	O	O
an	O	O	O	O	O	O
IdP	O	O	O	O	O	O
.	O	O	O	O	O	O

Instead	O	O	O	O	O	O
of	O	O	O	O	O	O
Alice	O	O	O	O	O	O
providing	O	O	O	O	O	O
her	O	O	O	O	O	O
credentials	O	O	O	O	O	O
directly	O	O	O	O	O	O
to	O	O	O	O	O	O
MS	B-ORG	O	O	O	O	B-ORG
365	O	O	O	O	O	O
,	O	O	O	O	O	O
she	O	O	O	O	O	O
would	O	O	O	O	O	O
browse	O	O	O	O	O	O
to	O	O	O	O	O	O
outlook.office.com	O	O	O	O	O	O
and	O	O	O	O	O	O
click	O	O	O	O	O	O
the	O	O	O	O	O	O
login	O	O	O	O	O	O
button	O	O	O	O	O	O
.	O	O	O	O	O	O

Her	O	O	O	O	O	O
login	O	O	O	O	O	O
will	O	O	O	O	O	O
then	O	O	O	O	O	O
be	O	O	O	O	O	O
forwarded	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
for	O	O	O	O	O	O
authentication	O	O	O	O	O	O
via	O	O	O	O	O	O
the	O	O	O	O	O	O
passive	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
.	O	O	O	O	O	O

After	O	O	O	O	O	O
she	O	O	O	O	O	O
provides	O	O	O	O	O	O
the	O	O	O	O	O	O
correct	O	O	O	O	O	O
credentials	O	O	O	O	O	O
,	O	O	O	O	O	O
she	O	O	O	O	O	O
will	O	O	O	O	O	O
proceed	O	O	O	O	O	O
to	O	O	O	O	O	O
perform	O	O	O	O	O	O
the	O	O	O	O	O	O
MFA	O	O	O	O	O	O
challenge	O	O	O	O	O	O
.	O	O	O	O	O	O

From	O	O	O	O	O	O
there	O	O	O	O	O	O
she	O	O	O	O	O	O
will	O	O	O	O	O	O
be	O	O	O	O	O	O
forwarded	O	O	O	O	O	O
back	O	O	O	O	O	O
to	O	O	O	O	O	O
MS	B-ORG	O	O	O	O	B-ORG
365	O	O	O	O	O	O
logged	O	O	O	O	O	O
in	O	O	O	O	O	O
with	O	O	O	O	O	O
her	O	O	O	O	O	O
user	O	O	O	O	O	O
credentials	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
a	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
flow	O	O	O	O	O	O
example	O	O	O	O	O	O
,	O	O	O	O	O	O
Oscar	O	O	O	O	O	O
wants	O	O	O	O	O	O
to	O	O	O	O	O	O
send	O	O	O	O	O	O
an	O	O	O	O	O	O
email	O	O	O	O	O	O
to	O	O	O	O	O	O
Bob	O	O	O	O	O	O
from	O	O	O	O	O	O
Alice	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
account	O	O	O	O	O	O
.	O	O	O	O	O	O

Oscar	O	O	O	O	O	O
steals	O	O	O	O	O	O
Alice	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
credentials	O	O	O	O	O	O
via	O	O	O	O	O	O
phishing	O	O	O	O	O	O
.	O	O	O	O	O	O

Instead	O	O	O	O	O	O
of	O	O	O	O	O	O
browsing	O	O	O	O	O	O
to	O	O	O	O	O	O
outlook.office.com	O	O	O	O	O	O
,	O	O	O	O	O	O
he	O	O	O	O	O	O
sends	O	O	O	O	O	O
the	O	O	O	O	O	O
request	O	O	O	O	O	O
directly	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
active	O	O	O	O	O	O
\	O	O	O	O	O	O
legacy	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
containing	O	O	O	O	O	O
only	O	O	O	O	O	O
the	O	O	O	O	O	O
username	O	O	O	O	O	O
and	O	O	O	O	O	O
password	O	O	O	O	O	O
with	O	O	O	O	O	O
crafted	O	O	O	O	O	O
headers	O	O	O	O	O	O
.	O	O	O	O	O	O

If	O	O	O	O	O	O
the	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
is	O	O	O	O	O	O
susceptible	O	O	O	O	O	O
to	O	O	O	O	O	O
this	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
will	O	O	O	O	O	O
return	O	O	O	O	O	O
a	O	O	O	O	O	O
SAML	O	O	O	O	O	O
1	O	O	O	O	O	O
token	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
valid	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
whole	O	O	O	O	O	O
of	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
federation	O	O	O	O	O	O
.	O	O	O	O	O	O

Oscar	O	O	O	O	O	O
will	O	O	O	O	O	O
pivot	O	O	O	O	O	O
this	O	O	O	O	O	O
token	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
modern	O	O	O	O	O	O
one	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
method	O	O	O	O	O	O
described	O	O	O	O	O	O
below	O	O	O	O	O	O
and	O	O	O	O	O	O
will	O	O	O	O	O	O
be	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
browse	O	O	O	O	O	O
and	O	O	O	O	O	O
send	O	O	O	O	O	O
emails	O	O	O	O	O	O
as	O	O	O	O	O	O
if	O	O	O	O	O	O
Alice	O	O	O	O	O	O
passed	O	O	O	O	O	O
the	O	O	O	O	O	O
MFA	O	O	O	O	O	O
challenge	O	O	O	O	O	O
.	O	O	O	O	O	O

While	O	O	O	O	O	O
Oscar	O	O	O	O	O	O
is	O	O	O	O	O	O
logged	O	O	O	O	O	O
in	O	O	O	O	O	O
,	O	O	O	O	O	O
he	O	O	O	O	O	O
can	O	O	O	O	O	O
also	O	O	O	O	O	O
use	O	O	O	O	O	O
Alice	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
Azure	O	O	O	O	O	O
account	O	O	O	O	O	O
to	O	O	O	O	O	O
steal	O	O	O	O	O	O
source	O	O	O	O	O	O
code	O	O	O	O	O	O
and	O	O	O	O	O	O
install	O	O	O	O	O	O
a	O	O	O	O	O	O
“	O	O	O	O	O	O
malicious	O	O	O	O	O	O
”	O	O	O	O	O	O
third-party	O	O	O	O	O	O
(	O	O	O	O	O	O
OAuth	O	O	O	O	O	O
)	O	O	O	O	O	O
app	O	O	O	O	O	O
to	O	O	O	O	O	O
remain	O	O	O	O	O	O
persistent	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
account	O	O	O	O	O	O
even	O	O	O	O	O	O
if	O	O	O	O	O	O
Alice	O	O	O	O	O	O
changes	O	O	O	O	O	O
her	O	O	O	O	O	O
password	O	O	O	O	O	O
.	O	O	O	O	O	O

No	O	O	O	O	O	O
MFA	O	O	O	O	O	O
is	O	O	O	O	O	O
required	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Details	O	O	O	O	O	O
of	O	O	O	O	O	O
Attack	O	O	O	O	O	O
Flow	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

A	O	O	O	O	O	O
typical	O	O	O	O	O	O
SAML	O	O	O	O	O	O
request	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
would	O	O	O	O	O	O
look	O	O	O	O	O	O
like	O	O	O	O	O	O
this	O	O	O	O	O	O
:	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Cloud_One	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
inline-images	O	O	O	O	O	O
/	O	O	O	O	O	O
Cloud_One.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Image	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
SAML	O	O	O	O	O	O
Request	O	O	O	O	O	O
by	O	O	O	O	O	O
an	O	O	O	O	O	O
Attacker	O	O	O	O	O	O
*	O	O	O	O	O	O

All	O	O	O	O	O	O
the	O	O	O	O	O	O
details	O	O	O	O	O	O
needed	O	O	O	O	O	O
are	O	O	O	O	O	O
username	O	O	O	O	O	O
and	O	O	O	O	O	O
password	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
rest	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
fields	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
obtained	O	O	O	O	O	O
without	O	O	O	O	O	O
any	O	O	O	O	O	O
effort	O	O	O	O	O	O
while	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
requests	O	O	O	O	O	O
access	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
whole	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
online	O	O	O	O	O	O
federation	O	O	O	O	O	O
(	O	O	O	O	O	O
described	O	O	O	O	O	O
later	O	O	O	O	O	O
under	O	O	O	O	O	O
Reconnaissance	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

Below	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
kind	O	O	O	O	O	O
of	O	O	O	O	O	O
reply	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
would	O	O	O	O	O	O
get	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
WS-TRUST	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
once	O	O	O	O	O	O
the	O	O	O	O	O	O
credentials	O	O	O	O	O	O
are	O	O	O	O	O	O
validated	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Cloud_Two	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
inline-images	O	O	O	O	O	O
/	O	O	O	O	O	O
Cloud_Two.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Image	O	O	O	O	O	O
2	O	O	O	O	O	O
:	O	O	O	O	O	O
Reply	O	O	O	O	O	O
From	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
Endpoint	O	O	O	O	O	O
*	O	O	O	O	O	O

As	O	O	O	O	O	O
you	O	O	O	O	O	O
can	O	O	O	O	O	O
see	O	O	O	O	O	O
,	O	O	O	O	O	O
email	O	O	O	O	O	O
@	O	O	O	O	O	O
domain.com	O	O	O	O	O	O
was	O	O	O	O	O	O
given	O	O	O	O	O	O
a	O	O	O	O	O	O
signed	O	O	O	O	O	O
token	O	O	O	O	O	O
and	O	O	O	O	O	O
can	O	O	O	O	O	O
now	O	O	O	O	O	O
be	O	O	O	O	O	O
pivoted	O	O	O	O	O	O
to	O	O	O	O	O	O
modern	O	O	O	O	O	O
token	O	O	O	O	O	O
.	O	O	O	O	O	O

Pivoting	O	O	O	O	O	O
SAML	O	O	O	O	O	O
1	O	O	O	O	O	O
token	O	O	O	O	O	O
to	O	O	O	O	O	O
modern	O	O	O	O	O	O
token	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
done	O	O	O	O	O	O
by	O	O	O	O	O	O
sending	O	O	O	O	O	O
POST	O	O	O	O	O	O
request	O	O	O	O	O	O
to	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
login.Microsoftonline.com	O	O	O	O	O	O
/	O	O	O	O	O	O
login.srf	O	O	O	O	O	O
>	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
return	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
would	O	O	O	O	O	O
get	O	O	O	O	O	O
a	O	O	O	O	O	O
cookie	O	O	O	O	O	O
called	O	O	O	O	O	O
ESTSAUTH	O	O	O	O	O	O
that	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
used	O	O	O	O	O	O
to	O	O	O	O	O	O
access	O	O	O	O	O	O
all	O	O	O	O	O	O
of	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
federation	O	O	O	O	O	O
via	O	O	O	O	O	O
a	O	O	O	O	O	O
simple	O	O	O	O	O	O
cookie	O	O	O	O	O	O
injection	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
browser	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Reconnaissance	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
recon	O	O	O	O	O	O
for	O	O	O	O	O	O
this	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
is	O	O	O	O	O	O
easy	O	O	O	O	O	O
and	O	O	O	O	O	O
very	O	O	O	O	O	O
automation	O	O	O	O	O	O
friendly	O	O	O	O	O	O
.	O	O	O	O	O	O

For	O	O	O	O	O	O
example	O	O	O	O	O	O
,	O	O	O	O	O	O
getting	O	O	O	O	O	O
the	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
address	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
very	O	O	O	O	O	O
simple	O	O	O	O	O	O
task	O	O	O	O	O	O
and	O	O	O	O	O	O
does	O	O	O	O	O	O
not	O	O	O	O	O	O
require	O	O	O	O	O	O
any	O	O	O	O	O	O
credentials	O	O	O	O	O	O
.	O	O	O	O	O	O

All	O	O	O	O	O	O
an	O	O	O	O	O	O
attacker	O	O	O	O	O	O
needs	O	O	O	O	O	O
to	O	O	O	O	O	O
do	O	O	O	O	O	O
is	O	O	O	O	O	O
to	O	O	O	O	O	O
browse	O	O	O	O	O	O
to	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
login.microsoftonline.com	O	O	O	O	O	O
/	O	O	O	O	O	O
getuserrealm.srf	O	O	O	O	O	O
?	O	O	O	O	O	O
login	O	O	O	O	O	O
=	O	O	O	O	O	O
demo	O	O	O	O	O	O
@	O	O	O	O	O	O
somedomainname	O	O	O	O	O	O
&	O	O	O	O	O	O
xml	O	O	O	O	O	O
=	O	O	O	O	O	O
1	O	O	O	O	O	O
>	O	O	O	O	O	O
and	O	O	O	O	O	O
replace	O	O	O	O	O	O
demo	O	O	O	O	O	O
@	O	O	O	O	O	O
somedomainname	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
requested	O	O	O	O	O	O
domain	O	O	O	O	O	O
name	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
query	O	O	O	O	O	O
will	O	O	O	O	O	O
result	O	O	O	O	O	O
in	O	O	O	O	O	O
something	O	O	O	O	O	O
similar	O	O	O	O	O	O
to	O	O	O	O	O	O
:	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Cloud_Three	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
inline-images	O	O	O	O	O	O
/	O	O	O	O	O	O
Cloud_Three.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Image	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
DNS	O	O	O	O	O	O
Query	O	O	O	O	O	O
Screenshot	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
STSAuthURL	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
active	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
that	O	O	O	O	O	O
I	O	O	O	O	O	O
was	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
attack	O	O	O	O	O	O
and	O	O	O	O	O	O
show	O	O	O	O	O	O
during	O	O	O	O	O	O
my	O	O	O	O	O	O
presentation	O	O	O	O	O	O
at	O	O	O	O	O	O
Protect	O	O	O	O	O	O
Global	O	O	O	O	O	O
Conference	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Additional	O	O	O	O	O	O
Vulnerabilities	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

IP	O	O	O	O	O	O
Spoofing	O	O	O	O	O	O
Furthermore	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
have	O	O	O	O	O	O
discovered	O	O	O	O	O	O
that	O	O	O	O	O	O
in	O	O	O	O	O	O
some	O	O	O	O	O	O
cases	O	O	O	O	O	O
,	O	O	O	O	O	O
one	O	O	O	O	O	O
can	O	O	O	O	O	O
use	O	O	O	O	O	O
 	O	O	O	O	O	O
[	O	O	O	O	O	O
X-MS-FORWARDED-CLIENT-IP	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
docs.microsoft.com	O	O	O	O	O	O
/	O	O	O	O	O	O
en-us	O	O	O	O	O	O
/	O	O	O	O	O	O
windows-server	O	O	O	O	O	O
/	O	O	O	O	O	O
identity	O	O	O	O	O	O
/	O	O	O	O	O	O
ad-fs	O	O	O	O	O	O
/	O	O	O	O	O	O
operations	O	O	O	O	O	O
/	O	O	O	O	O	O
ad-fs-claims-types	O	O	O	O	O	O
)	O	O	O	O	O	O
as	O	O	O	O	O	O
the	O	O	O	O	O	O
request	O	O	O	O	O	O
header	O	O	O	O	O	O
and	O	O	O	O	O	O
bypass	O	O	O	O	O	O
the	O	O	O	O	O	O
IP	O	O	O	O	O	O
limitations	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
.	O	O	O	O	O	O

Some	O	O	O	O	O	O
organizations	O	O	O	O	O	O
use	O	O	O	O	O	O
the	O	O	O	O	O	O
IP	O	O	O	O	O	O
address	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
user	O	O	O	O	O	O
to	O	O	O	O	O	O
determine	O	O	O	O	O	O
if	O	O	O	O	O	O
a	O	O	O	O	O	O
VPN	O	O	O	O	O	O
was	O	O	O	O	O	O
used	O	O	O	O	O	O
or	O	O	O	O	O	O
not	O	O	O	O	O	O
.	O	O	O	O	O	O

They	O	O	O	O	O	O
assume	O	O	O	O	O	O
that	O	O	O	O	O	O
their	O	O	O	O	O	O
VPN	O	O	O	O	O	O
has	O	O	O	O	O	O
static	O	O	O	O	O	O
IP	O	O	O	O	O	O
ranges	O	O	O	O	O	O
and	O	O	O	O	O	O
that	O	O	O	O	O	O
they	O	O	O	O	O	O
cannot	O	O	O	O	O	O
be	O	O	O	O	O	O
forged	O	O	O	O	O	O
.	O	O	O	O	O	O

Trusting	O	O	O	O	O	O
the	O	O	O	O	O	O
VPN	O	O	O	O	O	O
IP	O	O	O	O	O	O
address	O	O	O	O	O	O
might	O	O	O	O	O	O
lead	O	O	O	O	O	O
some	O	O	O	O	O	O
organizations	O	O	O	O	O	O
to	O	O	O	O	O	O
assume	O	O	O	O	O	O
that	O	O	O	O	O	O
MFA	O	O	O	O	O	O
was	O	O	O	O	O	O
already	O	O	O	O	O	O
performed	O	O	O	O	O	O
and	O	O	O	O	O	O
not	O	O	O	O	O	O
required	O	O	O	O	O	O
again	O	O	O	O	O	O
.	O	O	O	O	O	O

However	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
header	O	O	O	O	O	O
above	O	O	O	O	O	O
was	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
fool	O	O	O	O	O	O
some	O	O	O	O	O	O
IdPs	O	O	O	O	O	O
as	O	O	O	O	O	O
they	O	O	O	O	O	O
lacked	O	O	O	O	O	O
the	O	O	O	O	O	O
features	O	O	O	O	O	O
needed	O	O	O	O	O	O
to	O	O	O	O	O	O
ignore	O	O	O	O	O	O
it	O	O	O	O	O	O
.	O	O	O	O	O	O

During	O	O	O	O	O	O
the	O	O	O	O	O	O
Proofpoint	B-ORG	O	O	O	O	B-ORG
Protect	O	O	O	O	O	O
conference	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
presented	O	O	O	O	O	O
a	O	O	O	O	O	O
demo	O	O	O	O	O	O
of	O	O	O	O	O	O
this	O	O	O	O	O	O
attack	O	O	O	O	O	O
and	O	O	O	O	O	O
limited	O	O	O	O	O	O
the	O	O	O	O	O	O
allow-list	O	O	O	O	O	O
of	O	O	O	O	O	O
IPs	O	O	O	O	O	O
only	O	O	O	O	O	O
to	O	O	O	O	O	O
127.0.0.1	O	O	O	O	O	O
(	O	O	O	O	O	O
localhost	O	O	O	O	O	O
)	O	O	O	O	O	O
at	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
side	O	O	O	O	O	O
.	O	O	O	O	O	O

While	O	O	O	O	O	O
in	O	O	O	O	O	O
theory	O	O	O	O	O	O
,	O	O	O	O	O	O
this	O	O	O	O	O	O
setting	O	O	O	O	O	O
should	O	O	O	O	O	O
have	O	O	O	O	O	O
blocked	O	O	O	O	O	O
the	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
completely	O	O	O	O	O	O
for	O	O	O	O	O	O
users	O	O	O	O	O	O
outside	O	O	O	O	O	O
the	O	O	O	O	O	O
local	O	O	O	O	O	O
IdP	O	O	O	O	O	O
machine	O	O	O	O	O	O
,	O	O	O	O	O	O

I	O	O	O	O	O	O
was	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
bypass	O	O	O	O	O	O
this	O	O	O	O	O	O
mitigation	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
header	O	O	O	O	O	O
and	O	O	O	O	O	O
access	O	O	O	O	O	O
the	O	O	O	O	O	O
account	O	O	O	O	O	O
without	O	O	O	O	O	O
MFA	O	O	O	O	O	O
.	O	O	O	O	O	O

One	O	O	O	O	O	O
might	O	O	O	O	O	O
ask	O	O	O	O	O	O
how	O	O	O	O	O	O
an	O	O	O	O	O	O
attacker	O	O	O	O	O	O
would	O	O	O	O	O	O
know	O	O	O	O	O	O
what	O	O	O	O	O	O
the	O	O	O	O	O	O
IP	O	O	O	O	O	O
limitations	O	O	O	O	O	O
are	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
and	O	O	O	O	O	O
how	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
would	O	O	O	O	O	O
be	O	O	O	O	O	O
able	O	O	O	O	O	O
to	O	O	O	O	O	O
retrieve	O	O	O	O	O	O
them	O	O	O	O	O	O
.	O	O	O	O	O	O

While	O	O	O	O	O	O
phishing	O	O	O	O	O	O
a	O	O	O	O	O	O
user	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
credentials	O	O	O	O	O	O
,	O	O	O	O	O	O
an	O	O	O	O	O	O
attacker	O	O	O	O	O	O
can	O	O	O	O	O	O
simply	O	O	O	O	O	O
extract	O	O	O	O	O	O
the	O	O	O	O	O	O
session	O	O	O	O	O	O
IP	O	O	O	O	O	O
and	O	O	O	O	O	O
save	O	O	O	O	O	O
it	O	O	O	O	O	O
along	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
credentials	O	O	O	O	O	O
to	O	O	O	O	O	O
compromise	O	O	O	O	O	O
the	O	O	O	O	O	O
account	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
future	O	O	O	O	O	O
.	O	O	O	O	O	O

Empty	O	O	O	O	O	O
User-Agent	O	O	O	O	O	O
And	O	O	O	O	O	O
A	O	O	O	O	O	O
Missing	O	O	O	O	O	O
Option	O	O	O	O	O	O

In	O	O	O	O	O	O
my	O	O	O	O	O	O
research	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
found	O	O	O	O	O	O
that	O	O	O	O	O	O
in	O	O	O	O	O	O
some	O	O	O	O	O	O
cases	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
did	O	O	O	O	O	O
not	O	O	O	O	O	O
provide	O	O	O	O	O	O
an	O	O	O	O	O	O
option	O	O	O	O	O	O
to	O	O	O	O	O	O
disable	O	O	O	O	O	O
the	O	O	O	O	O	O
active	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
,	O	O	O	O	O	O
in	O	O	O	O	O	O
another	O	O	O	O	O	O
case	O	O	O	O	O	O
,	O	O	O	O	O	O
even	O	O	O	O	O	O
disabling	O	O	O	O	O	O
the	O	O	O	O	O	O
active	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
was	O	O	O	O	O	O
not	O	O	O	O	O	O
enough	O	O	O	O	O	O
to	O	O	O	O	O	O
protect	O	O	O	O	O	O
the	O	O	O	O	O	O
organization	O	O	O	O	O	O
against	O	O	O	O	O	O
this	O	O	O	O	O	O
attack	O	O	O	O	O	O
.	O	O	O	O	O	O

When	O	O	O	O	O	O
I	O	O	O	O	O	O
sent	O	O	O	O	O	O
a	O	O	O	O	O	O
request	O	O	O	O	O	O
with	O	O	O	O	O	O
an	O	O	O	O	O	O
empty	O	O	O	O	O	O
user-agent	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
could	O	O	O	O	O	O
bypass	O	O	O	O	O	O
the	O	O	O	O	O	O
mitigation	O	O	O	O	O	O
and	O	O	O	O	O	O
access	O	O	O	O	O	O
the	O	O	O	O	O	O
disabled	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
active	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
.	O	O	O	O	O	O

I	O	O	O	O	O	O
had	O	O	O	O	O	O
tested	O	O	O	O	O	O
this	O	O	O	O	O	O
on	O	O	O	O	O	O
a	O	O	O	O	O	O
development	O	O	O	O	O	O
environment	O	O	O	O	O	O
and	O	O	O	O	O	O
was	O	O	O	O	O	O
told	O	O	O	O	O	O
that	O	O	O	O	O	O
this	O	O	O	O	O	O
bug	O	O	O	O	O	O
does	O	O	O	O	O	O
not	O	O	O	O	O	O
occur	O	O	O	O	O	O
in	O	O	O	O	O	O
production	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Little	O	O	O	O	O	O
“	O	O	O	O	O	O
/	O	O	O	O	O	O
”	O	O	O	O	O	O
Who	O	O	O	O	O	O
Could	O	O	O	O	O	O
The	O	O	O	O	O	O
production	O	O	O	O	O	O
environment	O	O	O	O	O	O
did	O	O	O	O	O	O
not	O	O	O	O	O	O
allow	O	O	O	O	O	O
me	O	O	O	O	O	O
to	O	O	O	O	O	O
proceed	O	O	O	O	O	O
even	O	O	O	O	O	O
with	O	O	O	O	O	O
empty	O	O	O	O	O	O
user-agent	O	O	O	O	O	O
.	O	O	O	O	O	O

However	O	O	O	O	O	O
,	O	O	O	O	O	O
after	O	O	O	O	O	O
a	O	O	O	O	O	O
few	O	O	O	O	O	O
hours	O	O	O	O	O	O
of	O	O	O	O	O	O
attempts	O	O	O	O	O	O
,	O	O	O	O	O	O
I	O	O	O	O	O	O
discovered	O	O	O	O	O	O
another	O	O	O	O	O	O
bug	O	O	O	O	O	O
.	O	O	O	O	O	O

Adding	O	O	O	O	O	O
slash	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
end	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
production	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
address	O	O	O	O	O	O
did	O	O	O	O	O	O
let	O	O	O	O	O	O
me	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
legacy	O	O	O	O	O	O
environment	O	O	O	O	O	O
even	O	O	O	O	O	O
when	O	O	O	O	O	O
it	O	O	O	O	O	O
was	O	O	O	O	O	O
disabled	O	O	O	O	O	O
.	O	O	O	O	O	O

Not	O	O	O	O	O	O
Being	O	O	O	O	O	O
Logged	O	O	O	O	O	O

In	O	O	O	O	O	O
some	O	O	O	O	O	O
cases	O	O	O	O	O	O
,	O	O	O	O	O	O
direct	O	O	O	O	O	O
access	O	O	O	O	O	O
to	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
was	O	O	O	O	O	O
not	O	O	O	O	O	O
logged	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
IdP	O	O	O	O	O	O
side	O	O	O	O	O	O
.	O	O	O	O	O	O

Hence	O	O	O	O	O	O
,	O	O	O	O	O	O
security	O	O	O	O	O	O
systems	O	O	O	O	O	O
and	O	O	O	O	O	O
professionals	O	O	O	O	O	O
could	O	O	O	O	O	O
completely	O	O	O	O	O	O
miss	O	O	O	O	O	O
the	O	O	O	O	O	O
attack	O	O	O	O	O	O
.	O	O	O	O	O	O

Note	O	O	O	O	O	O
that	O	O	O	O	O	O
such	O	O	O	O	O	O
an	O	O	O	O	O	O
attack	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
automated	O	O	O	O	O	O
and	O	O	O	O	O	O
happen	O	O	O	O	O	O
in	O	O	O	O	O	O
less	O	O	O	O	O	O
than	O	O	O	O	O	O
1	O	O	O	O	O	O
second	O	O	O	O	O	O
from	O	O	O	O	O	O
start	O	O	O	O	O	O
to	O	O	O	O	O	O
account	O	O	O	O	O	O
takeover	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Attack	O	O	O	O	O	O
Flow	O	O	O	O	O	O
at	O	O	O	O	O	O
a	O	O	O	O	O	O
Glance	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

It	O	O	O	O	O	O
starts	O	O	O	O	O	O
with	O	O	O	O	O	O
python	O	O	O	O	O	O
code	O	O	O	O	O	O
,	O	O	O	O	O	O
postman	O	O	O	O	O	O
or	O	O	O	O	O	O
any	O	O	O	O	O	O
other	O	O	O	O	O	O
tool	O	O	O	O	O	O
that	O	O	O	O	O	O
can	O	O	O	O	O	O
send	O	O	O	O	O	O
a	O	O	O	O	O	O
POST	O	O	O	O	O	O
request	O	O	O	O	O	O
with	O	O	O	O	O	O
custom	O	O	O	O	O	O
body	O	O	O	O	O	O
and	O	O	O	O	O	O
headers	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
custom	O	O	O	O	O	O
payload	O	O	O	O	O	O
containing	O	O	O	O	O	O
the	O	O	O	O	O	O
username	O	O	O	O	O	O
and	O	O	O	O	O	O
password	O	O	O	O	O	O
is	O	O	O	O	O	O
sent	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
WS-Trust	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
that	O	O	O	O	O	O
was	O	O	O	O	O	O
discovered	O	O	O	O	O	O
via	O	O	O	O	O	O
the	O	O	O	O	O	O
above	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
endpoint	O	O	O	O	O	O
will	O	O	O	O	O	O
return	O	O	O	O	O	O
a	O	O	O	O	O	O
SAML	O	O	O	O	O	O
1	O	O	O	O	O	O
token	O	O	O	O	O	O
,	O	O	O	O	O	O
without	O	O	O	O	O	O
any	O	O	O	O	O	O
MFA	O	O	O	O	O	O
needed	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
attacker	O	O	O	O	O	O
can	O	O	O	O	O	O
take	O	O	O	O	O	O
this	O	O	O	O	O	O
token	O	O	O	O	O	O
,	O	O	O	O	O	O
add	O	O	O	O	O	O
some	O	O	O	O	O	O
headers	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
request	O	O	O	O	O	O
and	O	O	O	O	O	O
send	O	O	O	O	O	O
it	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
website	O	O	O	O	O	O
provided	O	O	O	O	O	O
before	O	O	O	O	O	O
.	O	O	O	O	O	O

Upon	O	O	O	O	O	O
seeing	O	O	O	O	O	O
the	O	O	O	O	O	O
valid	O	O	O	O	O	O
token	O	O	O	O	O	O
,	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
provides	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
cookie	O	O	O	O	O	O
called	O	O	O	O	O	O
ESTSAUTH	O	O	O	O	O	O
.	O	O	O	O	O	O

That	O	O	O	O	O	O
cookie	O	O	O	O	O	O
can	O	O	O	O	O	O
then	O	O	O	O	O	O
be	O	O	O	O	O	O
used	O	O	O	O	O	O
directly	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
browser	O	O	O	O	O	O
or	O	O	O	O	O	O
in	O	O	O	O	O	O
any	O	O	O	O	O	O
relevant	O	O	O	O	O	O
automation	O	O	O	O	O	O
tool	O	O	O	O	O	O
to	O	O	O	O	O	O
take	O	O	O	O	O	O
over	O	O	O	O	O	O
the	O	O	O	O	O	O
account	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
automation	O	O	O	O	O	O
tool	O	O	O	O	O	O
can	O	O	O	O	O	O
also	O	O	O	O	O	O
provide	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
with	O	O	O	O	O	O
an	O	O	O	O	O	O
OAuth	O	O	O	O	O	O
token	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
account	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Lessons	O	O	O	O	O	O
Learned	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
Vulnerabilities	O	O	O	O	O	O
are	O	O	O	O	O	O
there	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
discovered	O	O	O	O	O	O
.	O	O	O	O	O	O

Compromised	O	O	O	O	O	O
account	O	O	O	O	O	O
detection	O	O	O	O	O	O
and	O	O	O	O	O	O
remediation	O	O	O	O	O	O
can	O	O	O	O	O	O
work	O	O	O	O	O	O
where	O	O	O	O	O	O
other	O	O	O	O	O	O
security	O	O	O	O	O	O
measures	O	O	O	O	O	O
fail	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
Tracking	O	O	O	O	O	O
the	O	O	O	O	O	O
source	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
token	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
useful	O	O	O	O	O	O
for	O	O	O	O	O	O
research	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
Double-check	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
settings	O	O	O	O	O	O
work	O	O	O	O	O	O
the	O	O	O	O	O	O
way	O	O	O	O	O	O
you	O	O	O	O	O	O
expect	O	O	O	O	O	O
them	O	O	O	O	O	O
to	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
Consider	O	O	O	O	O	O
disabling	O	O	O	O	O	O
all	O	O	O	O	O	O
X-Forwarded-For	O	O	O	O	O	O
headers	O	O	O	O	O	O
if	O	O	O	O	O	O
you	O	O	O	O	O	O
can	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
Legacy	O	O	O	O	O	O
should	O	O	O	O	O	O
be	O	O	O	O	O	O
legacy	O	O	O	O	O	O
and	O	O	O	O	O	O
not	O	O	O	O	O	O
used	O	O	O	O	O	O
when	O	O	O	O	O	O
possible	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
While	O	O	O	O	O	O
MFA	O	O	O	O	O	O
is	O	O	O	O	O	O
an	O	O	O	O	O	O
important	O	O	O	O	O	O
link	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
chain	O	O	O	O	O	O
of	O	O	O	O	O	O
effective	O	O	O	O	O	O
[	O	O	O	O	O	O
cloud	O	O	O	O	O	O
security	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.proofpoint.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
glossary	O	O	O	O	O	O
/	O	O	O	O	O	O
cloud-security	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
is	O	O	O	O	O	O
by	O	O	O	O	O	O
no	O	O	O	O	O	O
means	O	O	O	O	O	O
an	O	O	O	O	O	O
end	O	O	O	O	O	O
all	O	O	O	O	O	O
be	O	O	O	O	O	O
all	O	O	O	O	O	O
solution	O	O	O	O	O	O
.	O	O	O	O	O	O

Vulnerabilities	O	O	O	O	O	O
like	O	O	O	O	O	O
this	O	O	O	O	O	O
one	O	O	O	O	O	O
(	O	O	O	O	O	O
and	O	O	O	O	O	O
other	O	O	O	O	O	O
methods	O	O	O	O	O	O
described	O	O	O	O	O	O
in	O	O	O	O	O	O
our	O	O	O	O	O	O
previous	O	O	O	O	O	O
[	O	O	O	O	O	O
blog	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.proofpoint.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
blog	O	O	O	O	O	O
/	O	O	O	O	O	O
cloud-security	O	O	O	O	O	O
/	O	O	O	O	O	O
new-vulnerabilities-bypass-multi-factor-authentication-microsoft	O	O	O	O	O	O
-	O	O	O	O	O	O
365	O	O	O	O	O	O
)	O	O	O	O	O	O
)	O	O	O	O	O	O
are	O	O	O	O	O	O
bound	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
discovered	O	O	O	O	O	O
by	O	O	O	O	O	O
bad	O	O	O	O	O	O
actors	O	O	O	O	O	O
.	O	O	O	O	O	O

Once	O	O	O	O	O	O
found	O	O	O	O	O	O
,	O	O	O	O	O	O
they	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
automated	O	O	O	O	O	O
and	O	O	O	O	O	O
weaponized	O	O	O	O	O	O
to	O	O	O	O	O	O
infiltrate	O	O	O	O	O	O
many	O	O	O	O	O	O
different	O	O	O	O	O	O
organizations	O	O	O	O	O	O
over	O	O	O	O	O	O
prolonged	O	O	O	O	O	O
periods	O	O	O	O	O	O
of	O	O	O	O	O	O
time	O	O	O	O	O	O
.	O	O	O	O	O	O

For	O	O	O	O	O	O
enhanced	O	O	O	O	O	O
security	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
recommend	O	O	O	O	O	O
layering	O	O	O	O	O	O
MFA	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
strong	O	O	O	O	O	O
suite	O	O	O	O	O	O
of	O	O	O	O	O	O
cloud	O	O	O	O	O	O
security	O	O	O	O	O	O
solutions	O	O	O	O	O	O
,	O	O	O	O	O	O
including	O	O	O	O	O	O
a	O	O	O	O	O	O
[	O	O	O	O	O	O
CASB	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.proofpoint.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
products	O	O	O	O	O	O
/	O	O	O	O	O	O
cloud-security	O	O	O	O	O	O
/	O	O	O	O	O	O
cloud-app-security-broker	O	O	O	O	O	O
)	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
strong	O	O	O	O	O	O
affinity	O	O	O	O	O	O
to	O	O	O	O	O	O
threat	O	O	O	O	O	O
detection	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Learn	O	O	O	O	O	O
More	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Learn	O	O	O	O	O	O
more	O	O	O	O	O	O
about	O	O	O	O	O	O
Proofpoint	B-ORG	O	O	O	O	B-ORG
’	O	O	O	O	O	O
s	O	O	O	O	O	O
solution	O	O	O	O	O	O
by	O	O	O	O	O	O
downloading	O	O	O	O	O	O
our	O	O	O	O	O	O
whitepaper	O	O	O	O	O	O
,	O	O	O	O	O	O
[	O	O	O	O	O	O
Getting	O	O	O	O	O	O
Started	O	O	O	O	O	O
with	O	O	O	O	O	O
CASB	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.proofpoint.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
resources	O	O	O	O	O	O
/	O	O	O	O	O	O
white-papers	O	O	O	O	O	O
/	O	O	O	O	O	O
getting-started-with-casb	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

