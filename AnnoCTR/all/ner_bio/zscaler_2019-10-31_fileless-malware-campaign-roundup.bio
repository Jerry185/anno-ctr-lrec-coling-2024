<DOCSTART>	O	O	O	O	O	O

Fileless	O	O	O	O	O	O
malware	O	O	O	O	O	O
campaign	O	O	O	O	O	O
roundup	O	O	O	O	O	O

October	O	O	B-DATE	O	O	B-DATE
31	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2019	O	O	I-DATE	O	O	I-DATE

Criminals	O	O	O	O	O	O
frequently	O	O	O	O	O	O
get	O	O	O	O	O	O
caught	O	O	O	O	O	O
because	O	O	O	O	O	O
they	O	O	O	O	O	O
leave	O	O	O	O	O	O
evidence	O	O	O	O	O	O
at	O	O	O	O	O	O
the	O	O	O	O	O	O
scene	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
crime—fingerprints	O	O	O	O	O	O
,	O	O	O	O	O	O
DNA	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
like	O	O	O	O	O	O
.	O	O	O	O	O	O

Cybercriminals	O	O	O	O	O	O
are	O	O	O	O	O	O
no	O	O	O	O	O	O
different	O	O	O	O	O	O
,	O	O	O	O	O	O
often	O	O	O	O	O	O
leaving	O	O	O	O	O	O
files	O	O	O	O	O	O
behind	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
systems	O	O	O	O	O	O
they	O	O	O	O	O	O
infect	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
an	O	O	O	O	O	O
effort	O	O	O	O	O	O
to	O	O	O	O	O	O
reduce	O	O	O	O	O	O
the	O	O	O	O	O	O
evidence	O	O	O	O	O	O
left	O	O	O	O	O	O
behind	O	O	O	O	O	O
after	O	O	O	O	O	O
an	O	O	O	O	O	O
attack	O	O	O	O	O	O
,	O	O	O	O	O	O
cybercriminals	O	O	O	O	O	O
developed	O	O	O	O	O	O
fileless	O	O	O	O	O	O
malware	O	O	O	O	O	O
,	O	O	O	O	O	O
 	O	O	O	O	O	O
a	O	O	O	O	O	O
variant	O	O	O	O	O	O
of	O	O	O	O	O	O
computer-related	O	O	O	O	O	O
malicious	O	O	O	O	O	O
software	O	O	O	O	O	O
that	O	O	O	O	O	O
exists	O	O	O	O	O	O
exclusively	O	O	O	O	O	O
as	O	O	O	O	O	O
a	O	O	O	O	O	O
computer	O	O	O	O	O	O
memory-based	O	O	O	O	O	O
artifact	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
short	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
infection	O	O	O	O	O	O
or	O	O	O	O	O	O
malware	O	O	O	O	O	O
does	O	O	O	O	O	O
not	O	O	O	O	O	O
write	O	O	O	O	O	O
any	O	O	O	O	O	O
executable	O	O	O	O	O	O
files	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
infected	O	O	O	O	O	O
system	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
hard	O	O	O	O	O	O
drive	O	O	O	O	O	O
.	O	O	O	O	O	O

By	O	O	O	O	O	O
leaving	O	O	O	O	O	O
few	O	O	O	O	O	O
traces	O	O	O	O	O	O
behind	O	O	O	O	O	O
,	O	O	O	O	O	O
malware	O	O	O	O	O	O
authors	O	O	O	O	O	O
try	O	O	O	O	O	O
to	O	O	O	O	O	O
postpone	O	O	O	O	O	O
detection	O	O	O	O	O	O
by	O	O	O	O	O	O
security	O	O	O	O	O	O
vendors	O	O	O	O	O	O
for	O	O	O	O	O	O
as	O	O	O	O	O	O
long	O	O	O	O	O	O
as	O	O	O	O	O	O
possible	O	O	O	O	O	O
.	O	O	O	O	O	O

During	O	O	O	O	O	O
the	O	O	O	O	O	O
past	O	O	O	O	O	O
few	O	O	O	O	O	O
years	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
use	O	O	O	O	O	O
of	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
adopted	O	O	O	O	O	O
by	O	O	O	O	O	O
numerous	O	O	O	O	O	O
forms	O	O	O	O	O	O
of	O	O	O	O	O	O
malware	O	O	O	O	O	O
and	O	O	O	O	O	O
advanced	O	O	O	O	O	O
persistent	O	O	O	O	O	O
threats	O	O	O	O	O	O
(	O	O	O	O	O	O
APTs	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

These	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
chains	O	O	O	O	O	O
can	O	O	O	O	O	O
employ	O	O	O	O	O	O
multiple	O	O	O	O	O	O
techniques	O	O	O	O	O	O
to	O	O	O	O	O	O
deliver	O	O	O	O	O	O
the	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
one	O	O	O	O	O	O
example	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
Kovter	O	O	O	O	O	O
Trojan	O	O	O	O	O	O
stored	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
Windows	O	O	O	O	O	O
registry	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Hancitor	O	O	O	O	O	O
Trojan	O	O	O	O	O	O
wrote	O	O	O	O	O	O
a	O	O	O	O	O	O
payload	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
hollow	O	O	O	O	O	O
process	O	O	O	O	O	O
spawned	O	O	O	O	O	O
by	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
injected	O	O	O	O	O	O
from	O	O	O	O	O	O
a	O	O	O	O	O	O
Word	O	O	O	O	O	O
document	O	O	O	O	O	O
macro	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
Word	O	O	O	O	O	O
process	O	O	O	O	O	O
.	O	O	O	O	O	O

Lately	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
been	O	O	O	O	O	O
seeing	O	O	O	O	O	O
an	O	O	O	O	O	O
increase	O	O	O	O	O	O
in	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
techniques	O	O	O	O	O	O
that	O	O	O	O	O	O
are	O	O	O	O	O	O
leveraging	O	O	O	O	O	O
legitimate	O	O	O	O	O	O
applications	O	O	O	O	O	O
available	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
victim	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
machine	O	O	O	O	O	O
.	O	O	O	O	O	O

These	O	O	O	O	O	O
techniques	O	O	O	O	O	O
do	O	O	O	O	O	O
not	O	O	O	O	O	O
rely	O	O	O	O	O	O
on	O	O	O	O	O	O
storing	O	O	O	O	O	O
executable	O	O	O	O	O	O
files	O	O	O	O	O	O
and	O	O	O	O	O	O
leave	O	O	O	O	O	O
no	O	O	O	O	O	O
direct	O	O	O	O	O	O
traces	O	O	O	O	O	O
on	O	O	O	O	O	O
disks	O	O	O	O	O	O
,	O	O	O	O	O	O
making	O	O	O	O	O	O
detection	O	O	O	O	O	O
and	O	O	O	O	O	O
removal	O	O	O	O	O	O
 	O	O	O	O	O	O
a	O	O	O	O	O	O
challenge	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
this	O	O	O	O	O	O
blog	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
will	O	O	O	O	O	O
discuss	O	O	O	O	O	O
the	O	O	O	O	O	O
recent	O	O	O	O	O	O
malware	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
that	O	O	O	O	O	O
have	O	O	O	O	O	O
used	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
mechanisms	O	O	O	O	O	O
leveraging	O	O	O	O	O	O
legitimate	O	O	O	O	O	O
applications	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
stats	O	O	O	O	O	O
_	O	O	O	O	O	O
1569845829	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
Stats	O	O	O	O	O	O
showing	O	O	O	O	O	O
hits	O	O	O	O	O	O
of	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
chains	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Case	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
njRat	O	O	O	O	O	O
Backdoor	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Although	O	O	O	O	O	O
njRat	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
around	O	O	O	O	O	O
for	O	O	O	O	O	O
a	O	O	O	O	O	O
long	O	O	O	O	O	O
time	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
recently	O	O	O	O	O	O
 	O	O	O	O	O	O
observed	O	O	O	O	O	O
that	O	O	O	O	O	O
this	O	O	O	O	O	O
backdoor	O	O	O	O	O	O
is	O	O	O	O	O	O
being	O	O	O	O	O	O
loaded	O	O	O	O	O	O
by	O	O	O	O	O	O
a	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
chain	O	O	O	O	O	O
.	O	O	O	O	O	O

A	O	O	O	O	O	O
.	O	O	O	O	O	O
docx	O	O	O	O	O	O
file	O	O	O	O	O	O
is	O	O	O	O	O	O
received	O	O	O	O	O	O
as	O	O	O	O	O	O
an	O	O	O	O	O	O
attachment	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
phishing	O	O	O	O	O	O
email	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
victim	O	O	O	O	O	O
.	O	O	O	O	O	O

Once	O	O	O	O	O	O
the	O	O	O	O	O	O
.	O	O	O	O	O	O
docx	O	O	O	O	O	O
file	O	O	O	O	O	O
is	O	O	O	O	O	O
opened	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
infection	O	O	O	O	O	O
cycle	O	O	O	O	O	O
begins	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
njrat	O	O	O	O	O	O
_	O	O	O	O	O	O
1569841952	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
2	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
njRat	O	O	O	O	O	O
payload	O	O	O	O	O	O
loaded	O	O	O	O	O	O
by	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O

The	O	O	O	O	O	O
.	O	O	O	O	O	O
docx	O	O	O	O	O	O
file	O	O	O	O	O	O
 	O	O	O	O	O	O
contains	O	O	O	O	O	O
external	O	O	O	O	O	O
references	O	O	O	O	O	O
to	O	O	O	O	O	O
remote	O	O	O	O	O	O
OLE	O	O	O	O	O	O
objects	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
referenced	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
“	O	O	O	O	O	O
document.xml.rels	O	O	O	O	O	O
,	O	O	O	O	O	O
”	O	O	O	O	O	O
 	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
Rich	O	O	O	O	O	O
 	O	O	O	O	O	O
Text	O	O	O	O	O	O
Format	O	O	O	O	O	O
(	O	O	O	O	O	O
RTF	O	O	O	O	O	O
)	O	O	O	O	O	O
 	O	O	O	O	O	O
exploit	O	O	O	O	O	O
CVE	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
-	O	O	O	O	O	O
0199	O	O	O	O	O	O
that	O	O	O	O	O	O
further	O	O	O	O	O	O
opens	O	O	O	O	O	O
the	O	O	O	O	O	O
embedded	O	O	O	O	O	O
.	O	O	O	O	O	O
doc	O	O	O	O	O	O
file	O	O	O	O	O	O
containing	O	O	O	O	O	O
a	O	O	O	O	O	O
Visual	O	O	O	O	O	O
Basic	O	O	O	O	O	O
for	O	O	O	O	O	O
Applications	O	O	O	O	O	O
(	O	O	O	O	O	O
VBA	O	O	O	O	O	O
)	O	O	O	O	O	O
macro	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
rat3	O	O	O	O	O	O
_	O	O	O	O	O	O
1569844424	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
.	O	O	O	O	O	O
docx	O	O	O	O	O	O
 	O	O	O	O	O	O
downloading	O	O	O	O	O	O
an	O	O	O	O	O	O
RTF	O	O	O	O	O	O
file	O	O	O	O	O	O

The	O	O	O	O	O	O
VBA	O	O	O	O	O	O
macro	O	O	O	O	O	O
contains	O	O	O	O	O	O
an	O	O	O	O	O	O
encoded	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
script	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
downloads	O	O	O	O	O	O
the	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
from	O	O	O	O	O	O
*	O	O	O	O	O	O
“	O	O	O	O	O	O
www	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
m9c	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
net	O	O	O	O	O	O
/	O	O	O	O	O	O
uploads	O	O	O	O	O	O
/	O	O	O	O	O	O
15676549681	O	O	O	O	O	O
.	O	O	O	O	O	O
jpg	O	O	O	O	O	O
.	O	O	O	O	O	O
”	O	O	O	O	O	O
*	O	O	O	O	O	O
 	O	O	O	O	O	O

The	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
then	O	O	O	O	O	O
decodes	O	O	O	O	O	O
and	O	O	O	O	O	O
executes	O	O	O	O	O	O
the	O	O	O	O	O	O
embedded	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
script	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
script	O	O	O	O	O	O
then	O	O	O	O	O	O
 	O	O	O	O	O	O
downloads	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
Portable	O	O	O	O	O	O
Executable	O	O	O	O	O	O
(	O	O	O	O	O	O
PE	O	O	O	O	O	O
)	O	O	O	O	O	O
file	O	O	O	O	O	O
from	O	O	O	O	O	O
*	O	O	O	O	O	O
“	O	O	O	O	O	O
www	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
m9c	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
net	O	O	O	O	O	O
/	O	O	O	O	O	O
uploads	O	O	O	O	O	O
/	O	O	O	O	O	O
15676547971	O	O	O	O	O	O
.	O	O	O	O	O	O
jpg	O	O	O	O	O	O
,	O	O	O	O	O	O
”	O	O	O	O	O	O
*	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
njRatexecutable	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
ps	O	O	O	O	O	O
_	O	O	O	O	O	O
1569844570	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
4	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
VBS	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
downloads	O	O	O	O	O	O
an	O	O	O	O	O	O
encoded	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O

This	O	O	O	O	O	O
VBScript	O	O	O	O	O	O
decrypts	O	O	O	O	O	O
the	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
.	O	O	O	O	O	O
NET	O	O	O	O	O	O
executable	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
directly	O	O	O	O	O	O
loaded	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
memory	O	O	O	O	O	O
and	O	O	O	O	O	O
runs	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
context	O	O	O	O	O	O
of	O	O	O	O	O	O
an	O	O	O	O	O	O
MSbuild.exe	O	O	O	O	O	O
.	O	O	O	O	O	O

No	O	O	O	O	O	O
traces	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
disk	O	O	O	O	O	O
write	O	O	O	O	O	O
are	O	O	O	O	O	O
observed	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
backdoor	O	O	O	O	O	O
njRat	O	O	O	O	O	O
silently	O	O	O	O	O	O
executes	O	O	O	O	O	O
 	O	O	O	O	O	O
under	O	O	O	O	O	O
the	O	O	O	O	O	O
hood	O	O	O	O	O	O
by	O	O	O	O	O	O
communicating	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
CnC	O	O	O	O	O	O
server	O	O	O	O	O	O
*	O	O	O	O	O	O
“	O	O	O	O	O	O
borapegar147	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
ddns	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
net	O	O	O	O	O	O
”	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Case	O	O	O	O	O	O
2	O	O	O	O	O	O
:	O	O	O	O	O	O
Sodinokibi	O	O	O	O	O	O
Ransomware	O	O	O	O	O	O

The	O	O	O	O	O	O
Sodinokibi	O	O	O	O	O	O
ransomware	O	O	O	O	O	O
(	O	O	O	O	O	O
also	O	O	O	O	O	O
known	O	O	O	O	O	O
as	O	O	O	O	O	O
REvil	O	O	O	O	O	O
)	O	O	O	O	O	O
is	O	O	O	O	O	O
one	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
most	O	O	O	O	O	O
well-known	O	O	O	O	O	O
ransomware	O	O	O	O	O	O
types	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
wild	O	O	O	O	O	O
today	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
rise	O	O	O	O	O	O
since	O	O	O	O	O	O
the	O	O	O	O	O	O
threat	O	O	O	O	O	O
group	O	O	O	O	O	O
behind	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
operation	O	O	O	O	O	O
GandCrab	O	O	O	O	O	O
announced	O	O	O	O	O	O
that	O	O	O	O	O	O
 	O	O	O	O	O	O
it	O	O	O	O	O	O
had	O	O	O	O	O	O
shut	O	O	O	O	O	O
down	O	O	O	O	O	O
its	O	O	O	O	O	O
operations	O	O	O	O	O	O
 	O	O	O	O	O	O
at	O	O	O	O	O	O
the	O	O	O	O	O	O
end	O	O	O	O	O	O
of	O	O	O	O	O	O
May	O	O	B-DATE	O	O	B-DATE
.	O	O	O	O	O	O

Recently	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
noticed	O	O	O	O	O	O
that	O	O	O	O	O	O
Sodinokibi	O	O	O	O	O	O
has	O	O	O	O	O	O
adopted	O	O	O	O	O	O
a	O	O	O	O	O	O
fileless	O	O	O	O	O	O
mechanism	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
Sodinokibi	O	O	O	O	O	O
_	O	O	O	O	O	O
1569844817	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
5	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
The	O	O	O	O	O	O
Sodinokibi	O	O	O	O	O	O
payload	O	O	O	O	O	O
loaded	O	O	O	O	O	O
by	O	O	O	O	O	O
a	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O

The	O	O	O	O	O	O
fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
cycle	O	O	O	O	O	O
starts	O	O	O	O	O	O
when	O	O	O	O	O	O
the	O	O	O	O	O	O
victim	O	O	O	O	O	O
clicks	O	O	O	O	O	O
the	O	O	O	O	O	O
BAT	O	O	O	O	O	O
file	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
received	O	O	O	O	O	O
as	O	O	O	O	O	O
an	O	O	O	O	O	O
attachment	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
phishing	O	O	O	O	O	O
email	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
BAT	O	O	O	O	O	O
file	O	O	O	O	O	O
contains	O	O	O	O	O	O
a	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
script	O	O	O	O	O	O
containing	O	O	O	O	O	O
Base64	O	O	O	O	O	O
encoded	O	O	O	O	O	O
expressions	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
sodin_bat	O	O	O	O	O	O
_	O	O	O	O	O	O
1569845011	O	O	O	O	O	O
.	O	O	O	O	O	O
PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
6	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
BAT	O	O	O	O	O	O
file	O	O	O	O	O	O
received	O	O	O	O	O	O
via	O	O	O	O	O	O
MalSpam	O	O	O	O	O	O

As	O	O	O	O	O	O
shown	O	O	O	O	O	O
below	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
decoded	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
script	O	O	O	O	O	O
,	O	O	O	O	O	O
this	O	O	O	O	O	O
script	O	O	O	O	O	O
downloads	O	O	O	O	O	O
another	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
script	O	O	O	O	O	O
 	O	O	O	O	O	O
containing	O	O	O	O	O	O
more	O	O	O	O	O	O
than	O	O	O	O	O	O
3,000	O	O	O	O	O	O
 	O	O	O	O	O	O
lines	O	O	O	O	O	O
of	O	O	O	O	O	O
code	O	O	O	O	O	O
and	O	O	O	O	O	O
a	O	O	O	O	O	O
Base64	O	O	O	O	O	O
-	O	O	O	O	O	O
encoded	O	O	O	O	O	O
portable	O	O	O	O	O	O
executable	O	O	O	O	O	O
file	O	O	O	O	O	O
(	O	O	O	O	O	O
PE	O	O	O	O	O	O
)	O	O	O	O	O	O
from	O	O	O	O	O	O
a	O	O	O	O	O	O
pastebin	O	O	O	O	O	O
URL	O	O	O	O	O	O
and	O	O	O	O	O	O
loads	O	O	O	O	O	O
it	O	O	O	O	O	O
while	O	O	O	O	O	O
invoking	O	O	O	O	O	O
a	O	O	O	O	O	O
function	O	O	O	O	O	O
that	O	O	O	O	O	O
initiates	O	O	O	O	O	O
the	O	O	O	O	O	O
attack	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
system's	O	O	O	O	O	O
memory	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
sodin_ps_decoded	O	O	O	O	O	O
_	O	O	O	O	O	O
1569845177	O	O	O	O	O	O
.	O	O	O	O	O	O
PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
7	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
decoded	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
expressions	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
sodinokibi	O	O	O	O	O	O
_	O	O	O	O	O	O
1	O	O	O	O	O	O
_	O	O	O	O	O	O
1569845272	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
8	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
encoded	O	O	O	O	O	O
PE	O	O	O	O	O	O
 	O	O	O	O	O	O
file	O	O	O	O	O	O
in	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
downloaded	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
pastebin	O	O	O	O	O	O

This	O	O	O	O	O	O
script	O	O	O	O	O	O
decodes	O	O	O	O	O	O
and	O	O	O	O	O	O
provides	O	O	O	O	O	O
the	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
loader	O	O	O	O	O	O
function	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
takes	O	O	O	O	O	O
care	O	O	O	O	O	O
of	O	O	O	O	O	O
injecting	O	O	O	O	O	O
this	O	O	O	O	O	O
file	O	O	O	O	O	O
directly	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
system's	O	O	O	O	O	O
memory	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
loaded	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
appears	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
 	O	O	O	O	O	O
a	O	O	O	O	O	O
DLL	O	O	O	O	O	O
,	O	O	O	O	O	O
is	O	O	O	O	O	O
 	O	O	O	O	O	O
actually	O	O	O	O	O	O
Sodinokibi	O	O	O	O	O	O
ransomware	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
see	O	O	O	O	O	O
no	O	O	O	O	O	O
traces	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
DLL	O	O	O	O	O	O
being	O	O	O	O	O	O
saved	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
disk	O	O	O	O	O	O
as	O	O	O	O	O	O
the	O	O	O	O	O	O
ransomware	O	O	O	O	O	O
 	O	O	O	O	O	O
silently	O	O	O	O	O	O
starts	O	O	O	O	O	O
encrypting	O	O	O	O	O	O
files	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Case	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
Astaroth	O	O	O	O	O	O
Backdoor	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
Astaroth	O	O	O	O	O	O
Trojan	O	O	O	O	O	O
is	O	O	O	O	O	O
known	O	O	O	O	O	O
for	O	O	O	O	O	O
stealing	O	O	O	O	O	O
credentials	O	O	O	O	O	O
,	O	O	O	O	O	O
keystrokes	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
other	O	O	O	O	O	O
system	O	O	O	O	O	O
information	O	O	O	O	O	O
.	O	O	O	O	O	O

An	O	O	O	O	O	O
analysis	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
backdoor	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
infection	O	O	O	O	O	O
cycle	O	O	O	O	O	O
is	O	O	O	O	O	O
covered	O	O	O	O	O	O
in	O	O	O	O	O	O
detail	O	O	O	O	O	O
by	O	O	O	O	O	O
[	O	O	O	O	O	O
Microsoft	B-ORG	O	O	O	O	B-ORG
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.microsoft.com	O	O	O	O	O	O
/	O	O	O	O	O	O
security	O	O	O	O	O	O
/	O	O	O	O	O	O
blog	O	O	O	O	O	O
/	O	O	O	O	O	O
2019	O	O	O	O	O	O
/	O	O	O	O	O	O
07	O	O	O	O	O	O
/	O	O	O	O	O	O
08	O	O	O	O	O	O
/	O	O	O	O	O	O
dismantling-a-fileless-campaign-microsoft-defender-atp-next-gen-protection-exposes-astaroth-attack	O	O	O	O	O	O
/	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
infection	O	O	O	O	O	O
chain	O	O	O	O	O	O
starts	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
victim	O	O	O	O	O	O
clicking	O	O	O	O	O	O
on	O	O	O	O	O	O
an	O	O	O	O	O	O
LNK	O	O	O	O	O	O
file	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
delivered	O	O	O	O	O	O
via	O	O	O	O	O	O
a	O	O	O	O	O	O
phishing	O	O	O	O	O	O
email	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
LNK	O	O	O	O	O	O
file	O	O	O	O	O	O
contains	O	O	O	O	O	O
an	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
WMIC	O	O	O	O	O	O
command	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
downloads	O	O	O	O	O	O
an	O	O	O	O	O	O
XSL	O	O	O	O	O	O
file	O	O	O	O	O	O
containing	O	O	O	O	O	O
 	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
JavaScript	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
astaroth_o	O	O	O	O	O	O
_	O	O	O	O	O	O
1569845398	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
9	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
obfuscated	O	O	O	O	O	O
WMIC	O	O	O	O	O	O
command	O	O	O	O	O	O

This	O	O	O	O	O	O
JavaScript	O	O	O	O	O	O
code	O	O	O	O	O	O
downloads	O	O	O	O	O	O
a	O	O	O	O	O	O
Base64	O	O	O	O	O	O
-	O	O	O	O	O	O
encoded	O	O	O	O	O	O
payload	O	O	O	O	O	O
by	O	O	O	O	O	O
abusing	O	O	O	O	O	O
the	O	O	O	O	O	O
[	O	O	O	O	O	O
Bitsadmin	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
docs.microsoft.com	O	O	O	O	O	O
/	O	O	O	O	O	O
en-us	O	O	O	O	O	O
/	O	O	O	O	O	O
windows-server	O	O	O	O	O	O
/	O	O	O	O	O	O
administration	O	O	O	O	O	O
/	O	O	O	O	O	O
windows-commands	O	O	O	O	O	O
/	O	O	O	O	O	O
bitsadmin	O	O	O	O	O	O
)	O	O	O	O	O	O
tool	O	O	O	O	O	O
and	O	O	O	O	O	O
decodes	O	O	O	O	O	O
 	O	O	O	O	O	O
it	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
[	O	O	O	O	O	O
Certutil	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
docs.microsoft.com	O	O	O	O	O	O
/	O	O	O	O	O	O
en-us	O	O	O	O	O	O
/	O	O	O	O	O	O
windows-server	O	O	O	O	O	O
/	O	O	O	O	O	O
administration	O	O	O	O	O	O
/	O	O	O	O	O	O
windows-commands	O	O	O	O	O	O
/	O	O	O	O	O	O
Certutil	O	O	O	O	O	O
)	O	O	O	O	O	O
tool	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
payloads	O	O	O	O	O	O
are	O	O	O	O	O	O
XOR-encrypted	O	O	O	O	O	O
PE	O	O	O	O	O	O
files	O	O	O	O	O	O
except	O	O	O	O	O	O
one	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
DLL	O	O	O	O	O	O
files	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
loaded	O	O	O	O	O	O
 	O	O	O	O	O	O
by	O	O	O	O	O	O
leveraging	O	O	O	O	O	O
the	O	O	O	O	O	O
Regsvr32	O	O	O	O	O	O
tool	O	O	O	O	O	O
.	O	O	O	O	O	O

Finally	O	O	O	O	O	O
,	O	O	O	O	O	O
this	O	O	O	O	O	O
DLL	O	O	O	O	O	O
file	O	O	O	O	O	O
decrypts	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
backdoor	O	O	O	O	O	O
Astaroth	O	O	O	O	O	O
and	O	O	O	O	O	O
maps	O	O	O	O	O	O
it	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
Windows	O	O	O	O	O	O
userinit	O	O	O	O	O	O
process	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
astaroth	O	O	O	O	O	O
_	O	O	O	O	O	O
1	O	O	O	O	O	O
_	O	O	O	O	O	O
1569845480	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Figure	O	O	O	O	O	O
 	O	O	O	O	O	O
10	O	O	O	O	O	O
:	O	O	O	O	O	O
Obfuscated	O	O	O	O	O	O
JavaScript	O	O	O	O	O	O
in	O	O	O	O	O	O
an	O	O	O	O	O	O
XSL	O	O	O	O	O	O
file	O	O	O	O	O	O

During	O	O	O	O	O	O
the	O	O	O	O	O	O
entire	O	O	O	O	O	O
attack	O	O	O	O	O	O
chain	O	O	O	O	O	O
,	O	O	O	O	O	O
only	O	O	O	O	O	O
system	O	O	O	O	O	O
utilities	O	O	O	O	O	O
are	O	O	O	O	O	O
leveraged	O	O	O	O	O	O
to	O	O	O	O	O	O
load	O	O	O	O	O	O
the	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Astaroth	O	O	O	O	O	O
payload	O	O	O	O	O	O
executes	O	O	O	O	O	O
silently	O	O	O	O	O	O
without	O	O	O	O	O	O
traces	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
filesystem	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
case	O	O	O	O	O	O
studies	O	O	O	O	O	O
described	O	O	O	O	O	O
above	O	O	O	O	O	O
are	O	O	O	O	O	O
based	O	O	O	O	O	O
on	O	O	O	O	O	O
techniques	O	O	O	O	O	O
that	O	O	O	O	O	O
take	O	O	O	O	O	O
advantage	O	O	O	O	O	O
of	O	O	O	O	O	O
legitimate	O	O	O	O	O	O
applications	O	O	O	O	O	O
,	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
 	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
and	O	O	O	O	O	O
Windows	O	O	O	O	O	O
Management	O	O	O	O	O	O
Instrumentation	O	O	O	O	O	O
(	O	O	O	O	O	O
WMI	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

However	O	O	O	O	O	O
,	O	O	O	O	O	O
there	O	O	O	O	O	O
are	O	O	O	O	O	O
other	O	O	O	O	O	O
techniques	O	O	O	O	O	O
in	O	O	O	O	O	O
which	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
stored	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
registry	O	O	O	O	O	O
and	O	O	O	O	O	O
 	O	O	O	O	O	O
delivered	O	O	O	O	O	O
by	O	O	O	O	O	O
taking	O	O	O	O	O	O
advantage	O	O	O	O	O	O
of	O	O	O	O	O	O
zero-day	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
in	O	O	O	O	O	O
applications	O	O	O	O	O	O
or	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
operating	O	O	O	O	O	O
systems	O	O	O	O	O	O
 	O	O	O	O	O	O
themselves	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
one	O	O	O	O	O	O
example	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
famous	O	O	O	O	O	O
Equifax	O	O	O	O	O	O
breach	O	O	O	O	O	O
used	O	O	O	O	O	O
a	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
in	O	O	O	O	O	O
Apache	O	O	O	O	O	O
Struts	O	O	O	O	O	O
to	O	O	O	O	O	O
deliver	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
.	O	O	O	O	O	O

As	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
PowerShell	O	O	O	O	O	O
scripts	O	O	O	O	O	O
were	O	O	O	O	O	O
stored	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
registry	O	O	O	O	O	O
,	O	O	O	O	O	O
there	O	O	O	O	O	O
was	O	O	O	O	O	O
no	O	O	O	O	O	O
direct	O	O	O	O	O	O
trace	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
being	O	O	O	O	O	O
stored	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Conclusion	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Fileless	O	O	O	O	O	O
infection	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
are	O	O	O	O	O	O
difficult	O	O	O	O	O	O
to	O	O	O	O	O	O
detect	O	O	O	O	O	O
.	O	O	O	O	O	O

That's	O	O	O	O	O	O
why	O	O	O	O	O	O
the	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
 	O	O	O	O	O	O
team	O	O	O	O	O	O
continually	O	O	O	O	O	O
monitors	O	O	O	O	O	O
malware	O	O	O	O	O	O
delivery	O	O	O	O	O	O
mechanisms	O	O	O	O	O	O
from	O	O	O	O	O	O
several	O	O	O	O	O	O
sources	O	O	O	O	O	O
to	O	O	O	O	O	O
ensure	O	O	O	O	O	O
that	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
customers	O	O	O	O	O	O
are	O	O	O	O	O	O
protected	O	O	O	O	O	O
.	O	O	O	O	O	O

