<DOCSTART>	O	O	O	O	O	O

Meltdown	O	O	O	O	O	O
and	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
:	O	O	O	O	O	O
What	O	O	O	O	O	O
you	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
know	O	O	O	O	O	O

January	O	O	B-DATE	O	O	B-DATE
05	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2018	O	O	I-DATE	O	O	I-DATE

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
&	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
zscaler-blog-meltdown-spectre-image	O	O	O	O	O	O
%	O	O	O	O	O	O
20%	O	O	O	O	O	O
281%	O	O	O	O	O	O
29	O	O	O	O	O	O
.	O	O	O	O	O	O
png	O	O	O	O	O	O
)	O	O	O	O	O	O

Two	O	O	O	O	O	O
major	O	O	O	O	O	O
security	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
in	O	O	O	O	O	O
processors	O	O	O	O	O	O
,	O	O	O	O	O	O
 	O	O	O	O	O	O
dubbed	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
and	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
,	O	O	O	O	O	O
were	O	O	O	O	O	O
disclosed	O	O	O	O	O	O
earlier	O	O	O	O	O	O
this	O	O	O	O	O	O
week	O	O	O	O	O	O
by	O	O	O	O	O	O
Google's	B-ORG	O	O	O	O	B-ORG
Project	O	O	O	O	O	O
Zero	O	O	O	O	O	O
team	O	O	O	O	O	O
.	O	O	O	O	O	O

With	O	O	O	O	O	O
the	O	O	O	O	O	O
ability	O	O	O	O	O	O
to	O	O	O	O	O	O
 	O	O	O	O	O	O
allow	O	O	O	O	O	O
attackers	O	O	O	O	O	O
to	O	O	O	O	O	O
gain	O	O	O	O	O	O
unauthorized	O	O	O	O	O	O
access	O	O	O	O	O	O
to	O	O	O	O	O	O
sensitive	O	O	O	O	O	O
information	O	O	O	O	O	O
in	O	O	O	O	O	O
memory	O	O	O	O	O	O
,	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
and	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
represent	O	O	O	O	O	O
a	O	O	O	O	O	O
new	O	O	O	O	O	O
class	O	O	O	O	O	O
of	O	O	O	O	O	O
microarchitectural	O	O	O	O	O	O
attacks	O	O	O	O	O	O
that	O	O	O	O	O	O
use	O	O	O	O	O	O
 	O	O	O	O	O	O
processor	O	O	O	O	O	O
chip	O	O	O	O	O	O
performance	O	O	O	O	O	O
optimization	O	O	O	O	O	O
features	O	O	O	O	O	O
to	O	O	O	O	O	O
exploit	O	O	O	O	O	O
built-in	O	O	O	O	O	O
security	O	O	O	O	O	O
mechanisms	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
exploits	O	O	O	O	O	O
the	O	O	O	O	O	O
out-of-order	O	O	O	O	O	O
execution	O	O	O	O	O	O
feature	O	O	O	O	O	O
of	O	O	O	O	O	O
modern	O	O	O	O	O	O
processors	O	O	O	O	O	O
,	O	O	O	O	O	O
allowing	O	O	O	O	O	O
 	O	O	O	O	O	O
user-level	O	O	O	O	O	O
programs	O	O	O	O	O	O
to	O	O	O	O	O	O
access	O	O	O	O	O	O
kernel	O	O	O	O	O	O
memory	O	O	O	O	O	O
using	O	O	O	O	O	O
processor	O	O	O	O	O	O
caches	O	O	O	O	O	O
as	O	O	O	O	O	O
covert	O	O	O	O	O	O
side	O	O	O	O	O	O
channels	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
is	O	O	O	O	O	O
specific	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
way	O	O	O	O	O	O
out-of-order	O	O	O	O	O	O
execution	O	O	O	O	O	O
is	O	O	O	O	O	O
implemented	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
processors	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
assigned	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
CVE	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
-	O	O	O	O	O	O
5754	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
exploits	O	O	O	O	O	O
the	O	O	O	O	O	O
speculative	O	O	O	O	O	O
execution	O	O	O	O	O	O
feature	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
present	O	O	O	O	O	O
in	O	O	O	O	O	O
almost	O	O	O	O	O	O
all	O	O	O	O	O	O
processors	O	O	O	O	O	O
in	O	O	O	O	O	O
existence	O	O	O	O	O	O
today	O	O	O	O	O	O
.	O	O	O	O	O	O

Two	O	O	O	O	O	O
variants	O	O	O	O	O	O
of	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
are	O	O	O	O	O	O
known	O	O	O	O	O	O
and	O	O	O	O	O	O
seem	O	O	O	O	O	O
to	O	O	O	O	O	O
depend	O	O	O	O	O	O
 	O	O	O	O	O	O
on	O	O	O	O	O	O
what	O	O	O	O	O	O
is	O	O	O	O	O	O
used	O	O	O	O	O	O
to	O	O	O	O	O	O
influence	O	O	O	O	O	O
erroneous	O	O	O	O	O	O
speculative	O	O	O	O	O	O
execution	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
first	O	O	O	O	O	O
variant	O	O	O	O	O	O
triggers	O	O	O	O	O	O
speculative	O	O	O	O	O	O
execution	O	O	O	O	O	O
by	O	O	O	O	O	O
performing	O	O	O	O	O	O
a	O	O	O	O	O	O
bounds	O	O	O	O	O	O
check	O	O	O	O	O	O
bypass	O	O	O	O	O	O
and	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
assigned	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
CVE	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
-	O	O	O	O	O	O
5753	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
second	O	O	O	O	O	O
variant	O	O	O	O	O	O
uses	O	O	O	O	O	O
branch	O	O	O	O	O	O
target	O	O	O	O	O	O
injection	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
effect	O	O	O	O	O	O
and	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
assigned	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
CVE	O	O	O	O	O	O
-	O	O	O	O	O	O
2017	O	O	O	O	O	O
-	O	O	O	O	O	O
5715	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
What	O	O	O	O	O	O
is	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
?	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Meltdown	O	O	O	O	O	O
has	O	O	O	O	O	O
the	O	O	O	O	O	O
potential	O	O	O	O	O	O
to	O	O	O	O	O	O
 	O	O	O	O	O	O
affect	O	O	O	O	O	O
 	O	O	O	O	O	O
every	O	O	O	O	O	O
Intel	B-ORG	O	O	O	O	B-ORG
processor	O	O	O	O	O	O
that	O	O	O	O	O	O
supports	O	O	O	O	O	O
out-of-order	O	O	O	O	O	O
execution	O	O	O	O	O	O
;	O	O	O	O	O	O
 	O	O	O	O	O	O
essentially	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
all	O	O	O	O	O	O
Intel	B-ORG	O	O	O	O	B-ORG
processors	O	O	O	O	O	O
since	O	O	O	O	O	O
1995	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

At	O	O	O	O	O	O
the	O	O	O	O	O	O
moment	O	O	O	O	O	O
it	O	O	O	O	O	O
is	O	O	O	O	O	O
unclear	O	O	O	O	O	O
if	O	O	O	O	O	O
AMD	B-ORG	O	O	O	O	B-ORG
and	O	O	O	O	O	O
ARM	B-ORG	O	O	O	O	B-ORG
processors	O	O	O	O	O	O
are	O	O	O	O	O	O
affected	O	O	O	O	O	O
by	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
.	O	O	O	O	O	O

Meltdown	O	O	O	O	O	O
exploits	O	O	O	O	O	O
the	O	O	O	O	O	O
shared	O	O	O	O	O	O
kernel-space	O	O	O	O	O	O
mapping	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
user-space	O	O	O	O	O	O
virtual	O	O	O	O	O	O
memory	O	O	O	O	O	O
.	O	O	O	O	O	O

Mitigating	O	O	O	O	O	O
this	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
involves	O	O	O	O	O	O
a	O	O	O	O	O	O
technique	O	O	O	O	O	O
known	O	O	O	O	O	O
as	O	O	O	O	O	O
Kernel	O	O	O	O	O	O
Page	O	O	O	O	O	O
Table	O	O	O	O	O	O
Isolation	O	O	O	O	O	O
(	O	O	O	O	O	O
KPTI	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
improves	O	O	O	O	O	O
the	O	O	O	O	O	O
isolation	O	O	O	O	O	O
between	O	O	O	O	O	O
kernel-space	O	O	O	O	O	O
and	O	O	O	O	O	O
user-space	O	O	O	O	O	O
memory	O	O	O	O	O	O
.	O	O	O	O	O	O

Spectre	O	O	O	O	O	O
,	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
other	O	O	O	O	O	O
hand	O	O	O	O	O	O
,	O	O	O	O	O	O
affects	O	O	O	O	O	O
almost	O	O	O	O	O	O
every	O	O	O	O	O	O
system	O	O	O	O	O	O
in	O	O	O	O	O	O
existence	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
desktops	O	O	O	O	O	O
,	O	O	O	O	O	O
laptops	O	O	O	O	O	O
,	O	O	O	O	O	O
cloud	O	O	O	O	O	O
servers	O	O	O	O	O	O
,	O	O	O	O	O	O
tablets	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
smartphones	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

Spectre	O	O	O	O	O	O
has	O	O	O	O	O	O
been	O	O	O	O	O	O
exploited	O	O	O	O	O	O
successfully	O	O	O	O	O	O
on	O	O	O	O	O	O
Intel	B-ORG	O	O	O	O	B-ORG
,	O	O	O	O	O	O
AMD	B-ORG	O	O	O	O	B-ORG
,	O	O	O	O	O	O
ARM	B-ORG	O	O	O	O	B-ORG
,	O	O	O	O	O	O
System	O	O	O	O	O	O
Z	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
Power	O	O	O	O	O	O
9	O	O	O	O	O	O
processors	O	O	O	O	O	O
,	O	O	O	O	O	O
among	O	O	O	O	O	O
others	O	O	O	O	O	O
.	O	O	O	O	O	O

There	O	O	O	O	O	O
is	O	O	O	O	O	O
no	O	O	O	O	O	O
single	O	O	O	O	O	O
fix	O	O	O	O	O	O
for	O	O	O	O	O	O
this	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
,	O	O	O	O	O	O
as	O	O	O	O	O	O
it	O	O	O	O	O	O
is	O	O	O	O	O	O
at	O	O	O	O	O	O
an	O	O	O	O	O	O
architectural	O	O	O	O	O	O
level	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
mitigation	O	O	O	O	O	O
requires	O	O	O	O	O	O
fixes	O	O	O	O	O	O
at	O	O	O	O	O	O
each	O	O	O	O	O	O
application	O	O	O	O	O	O
level	O	O	O	O	O	O
.	O	O	O	O	O	O

Exploitation	O	O	O	O	O	O
through	O	O	O	O	O	O
JavaScript	O	O	O	O	O	O
is	O	O	O	O	O	O
also	O	O	O	O	O	O
possible	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
impact	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
Read	O	O	O	O	O	O
arbitrary	O	O	O	O	O	O
kernel	O	O	O	O	O	O
memory	O	O	O	O	O	O
from	O	O	O	O	O	O
user	O	O	O	O	O	O
space	O	O	O	O	O	O
applications	O	O	O	O	O	O

*	O	O	O	O	O	O
Fully	O	O	O	O	O	O
virtualized	O	O	O	O	O	O
machines	O	O	O	O	O	O
are	O	O	O	O	O	O
not	O	O	O	O	O	O
affected	O	O	O	O	O	O
(	O	O	O	O	O	O
guest	O	O	O	O	O	O
user	O	O	O	O	O	O
space	O	O	O	O	O	O
application	O	O	O	O	O	O
cannot	O	O	O	O	O	O
read	O	O	O	O	O	O
host	O	O	O	O	O	O
user	O	O	O	O	O	O
/	O	O	O	O	O	O
kernel	O	O	O	O	O	O
space	O	O	O	O	O	O
memory	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Hypervisor	O	O	O	O	O	O
escape	O	O	O	O	O	O
is	O	O	O	O	O	O
possible	O	O	O	O	O	O
in	O	O	O	O	O	O
paravirtualized	O	O	O	O	O	O
environment	O	O	O	O	O	O
(	O	O	O	O	O	O
Xen	O	O	O	O	O	O
,	O	O	O	O	O	O
Docker	O	O	O	O	O	O
,	O	O	O	O	O	O
etc	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
Sensitive	O	O	O	O	O	O
information	O	O	O	O	O	O
disclosure	O	O	O	O	O	O
and	O	O	O	O	O	O
privilege	O	O	O	O	O	O
escalation	O	O	O	O	O	O
attacks	O	O	O	O	O	O
,	O	O	O	O	O	O
as	O	O	O	O	O	O
the	O	O	O	O	O	O
dumped	O	O	O	O	O	O
memory	O	O	O	O	O	O
may	O	O	O	O	O	O
contain	O	O	O	O	O	O
password	O	O	O	O	O	O
hashes	O	O	O	O	O	O
,	O	O	O	O	O	O
private	O	O	O	O	O	O
keys	O	O	O	O	O	O
,	O	O	O	O	O	O
etc	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
impact	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
Theoretically	O	O	O	O	O	O
allows	O	O	O	O	O	O
random	O	O	O	O	O	O
access	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
entire	O	O	O	O	O	O
memory-space	O	O	O	O	O	O

*	O	O	O	O	O	O
Works	O	O	O	O	O	O
across	O	O	O	O	O	O
Virtual	O	O	O	O	O	O
Machines	O	O	O	O	O	O

*	O	O	O	O	O	O
Practical	O	O	O	O	O	O
PoC	O	O	O	O	O	O
for	O	O	O	O	O	O
user-space	O	O	O	O	O	O
to	O	O	O	O	O	O
user-space	O	O	O	O	O	O
attacks	O	O	O	O	O	O
exist	O	O	O	O	O	O
at	O	O	O	O	O	O
the	O	O	O	O	O	O
moment	O	O	O	O	O	O

*	O	O	O	O	O	O
Harder	O	O	O	O	O	O
to	O	O	O	O	O	O
exploit	O	O	O	O	O	O
than	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O

*	O	O	O	O	O	O
Leaking	O	O	O	O	O	O
user-space	O	O	O	O	O	O
module	O	O	O	O	O	O
addresses	O	O	O	O	O	O
and	O	O	O	O	O	O
thus	O	O	O	O	O	O
bypassing	O	O	O	O	O	O
ASLR	O	O	O	O	O	O
for	O	O	O	O	O	O
further	O	O	O	O	O	O
attacks	O	O	O	O	O	O
is	O	O	O	O	O	O
possible	O	O	O	O	O	O
(	O	O	O	O	O	O
remote	O	O	O	O	O	O
code	O	O	O	O	O	O
execution	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
What	O	O	O	O	O	O
may	O	O	O	O	O	O
be	O	O	O	O	O	O
 	O	O	O	O	O	O
impacted	O	O	O	O	O	O
?	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

PCs	O	O	O	O	O	O
,	O	O	O	O	O	O
laptops	O	O	O	O	O	O
,	O	O	O	O	O	O
servers	O	O	O	O	O	O
,	O	O	O	O	O	O
virtualization	O	O	O	O	O	O
software	O	O	O	O	O	O
,	O	O	O	O	O	O
cloud	O	O	O	O	O	O
 	O	O	O	O	O	O
servers	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
so	O	O	O	O	O	O
on	O	O	O	O	O	O
,	O	O	O	O	O	O
are	O	O	O	O	O	O
all	O	O	O	O	O	O
impacted	O	O	O	O	O	O
if	O	O	O	O	O	O
they	O	O	O	O	O	O
are	O	O	O	O	O	O
running	O	O	O	O	O	O
the	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
processor	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
All	O	O	O	O	O	O
modern	O	O	O	O	O	O
Intel	B-ORG	O	O	O	O	B-ORG
x86	O	O	O	O	O	O
processors	O	O	O	O	O	O
are	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
.	O	O	O	O	O	O

Exploitation	O	O	O	O	O	O
is	O	O	O	O	O	O
theoretically	O	O	O	O	O	O
possible	O	O	O	O	O	O
on	O	O	O	O	O	O
AMD	B-ORG	O	O	O	O	B-ORG
and	O	O	O	O	O	O
ARM	B-ORG	O	O	O	O	B-ORG
,	O	O	O	O	O	O
but	O	O	O	O	O	O
not	O	O	O	O	O	O
yet	O	O	O	O	O	O
practically	O	O	O	O	O	O
achieved	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
:	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Intel	B-ORG	O	O	O	O	B-ORG
,	O	O	O	O	O	O
ARM	B-ORG	O	O	O	O	B-ORG
,	O	O	O	O	O	O
AMD	B-ORG	O	O	O	O	B-ORG
,	O	O	O	O	O	O
System	O	O	O	O	O	O
Z	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
Power	O	O	O	O	O	O
9	O	O	O	O	O	O
processors	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Is	O	O	O	O	O	O
the	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
cloud	O	O	O	O	O	O
infrastructure	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
?	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Zscaler	B-ORG	O	O	O	O	B-ORG
runs	O	O	O	O	O	O
large	O	O	O	O	O	O
parts	O	O	O	O	O	O
of	O	O	O	O	O	O
its	O	O	O	O	O	O
cloud	O	O	O	O	O	O
software	O	O	O	O	O	O
on	O	O	O	O	O	O
dedicated	O	O	O	O	O	O
bare	O	O	O	O	O	O
metal	O	O	O	O	O	O
and	O	O	O	O	O	O
does	O	O	O	O	O	O
not	O	O	O	O	O	O
share	O	O	O	O	O	O
processors	O	O	O	O	O	O
or	O	O	O	O	O	O
memory	O	O	O	O	O	O
with	O	O	O	O	O	O
anyone	O	O	O	O	O	O
else	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
 	O	O	O	O	O	O
safeguards	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
infrastructure	O	O	O	O	O	O
from	O	O	O	O	O	O
attacks	O	O	O	O	O	O
that	O	O	O	O	O	O
can	O	O	O	O	O	O
originate	O	O	O	O	O	O
from	O	O	O	O	O	O
 	O	O	O	O	O	O
foreign	O	O	O	O	O	O
applications	O	O	O	O	O	O
that	O	O	O	O	O	O
may	O	O	O	O	O	O
try	O	O	O	O	O	O
to	O	O	O	O	O	O
escape	O	O	O	O	O	O
the	O	O	O	O	O	O
virtual	O	O	O	O	O	O
environment	O	O	O	O	O	O
and	O	O	O	O	O	O
access	O	O	O	O	O	O
our	O	O	O	O	O	O
memory	O	O	O	O	O	O
regions	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
attack	O	O	O	O	O	O
can	O	O	O	O	O	O
only	O	O	O	O	O	O
be	O	O	O	O	O	O
executed	O	O	O	O	O	O
locally	O	O	O	O	O	O
with	O	O	O	O	O	O
an	O	O	O	O	O	O
attacker	O	O	O	O	O	O
running	O	O	O	O	O	O
malicious	O	O	O	O	O	O
code	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
hardware	O	O	O	O	O	O
.	O	O	O	O	O	O

Since	O	O	O	O	O	O
our	O	O	O	O	O	O
execution	O	O	O	O	O	O
environment	O	O	O	O	O	O
is	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
highly	O	O	O	O	O	O
guarded	O	O	O	O	O	O
and	O	O	O	O	O	O
closed	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
,	O	O	O	O	O	O
attackers	O	O	O	O	O	O
cannot	O	O	O	O	O	O
gain	O	O	O	O	O	O
access	O	O	O	O	O	O
to	O	O	O	O	O	O
launch	O	O	O	O	O	O
malicious	O	O	O	O	O	O
code	O	O	O	O	O	O
.	O	O	O	O	O	O

Nonetheless	O	O	O	O	O	O
,	O	O	O	O	O	O
our	O	O	O	O	O	O
cloud	O	O	O	O	O	O
operations	O	O	O	O	O	O
team	O	O	O	O	O	O
is	O	O	O	O	O	O
 	O	O	O	O	O	O
actively	O	O	O	O	O	O
working	O	O	O	O	O	O
on	O	O	O	O	O	O
applying	O	O	O	O	O	O
necessary	O	O	O	O	O	O
patches	O	O	O	O	O	O
after	O	O	O	O	O	O
carefully	O	O	O	O	O	O
evaluating	O	O	O	O	O	O
their	O	O	O	O	O	O
impact	O	O	O	O	O	O
on	O	O	O	O	O	O
performance	O	O	O	O	O	O
and	O	O	O	O	O	O
stability	O	O	O	O	O	O
.	O	O	O	O	O	O

Zscaler	B-ORG	O	O	O	O	B-ORG
customers	O	O	O	O	O	O
running	O	O	O	O	O	O
 	O	O	O	O	O	O
virtualized	O	O	O	O	O	O
private	O	O	O	O	O	O
components	O	O	O	O	O	O
on	O	O	O	O	O	O
their	O	O	O	O	O	O
infrastructure	O	O	O	O	O	O
should	O	O	O	O	O	O
immediately	O	O	O	O	O	O
update	O	O	O	O	O	O
their	O	O	O	O	O	O
hosts	O	O	O	O	O	O
so	O	O	O	O	O	O
as	O	O	O	O	O	O
to	O	O	O	O	O	O
prevent	O	O	O	O	O	O
VM	O	O	O	O	O	O
escape	O	O	O	O	O	O
,	O	O	O	O	O	O
in	O	O	O	O	O	O
which	O	O	O	O	O	O
 	O	O	O	O	O	O
another	O	O	O	O	O	O
guest	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
host	O	O	O	O	O	O
may	O	O	O	O	O	O
browse	O	O	O	O	O	O
memory	O	O	O	O	O	O
regions	O	O	O	O	O	O
used	O	O	O	O	O	O
by	O	O	O	O	O	O
other	O	O	O	O	O	O
virtualized	O	O	O	O	O	O
components	O	O	O	O	O	O
.	O	O	O	O	O	O

Only	O	O	O	O	O	O
software	O	O	O	O	O	O
updates	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
hosts	O	O	O	O	O	O
can	O	O	O	O	O	O
protect	O	O	O	O	O	O
the	O	O	O	O	O	O
guests	O	O	O	O	O	O
from	O	O	O	O	O	O
these	O	O	O	O	O	O
exploits	O	O	O	O	O	O
,	O	O	O	O	O	O
as	O	O	O	O	O	O
a	O	O	O	O	O	O
guest	O	O	O	O	O	O
OS	O	O	O	O	O	O
update	O	O	O	O	O	O
will	O	O	O	O	O	O
not	O	O	O	O	O	O
suffice	O	O	O	O	O	O
to	O	O	O	O	O	O
protect	O	O	O	O	O	O
against	O	O	O	O	O	O
another	O	O	O	O	O	O
compromised	O	O	O	O	O	O
guest	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
customer	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
responsibility	O	O	O	O	O	O
to	O	O	O	O	O	O
apply	O	O	O	O	O	O
updates	O	O	O	O	O	O
relevant	O	O	O	O	O	O
to	O	O	O	O	O	O
their	O	O	O	O	O	O
infrastructure	O	O	O	O	O	O
.	O	O	O	O	O	O

More	O	O	O	O	O	O
details	O	O	O	O	O	O
on	O	O	O	O	O	O
how	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
secures	O	O	O	O	O	O
the	O	O	O	O	O	O
cloud	O	O	O	O	O	O
infrastructure	O	O	O	O	O	O
from	O	O	O	O	O	O
these	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
post	O	O	O	O	O	O
[	O	O	O	O	O	O
here	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
corporate	O	O	O	O	O	O
/	O	O	O	O	O	O
meltdown-and-spectre-vulnerabilities-protecting-zscaler-cloud	O	O	O	O	O	O
)	O	O	O	O	O	O

The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
official	O	O	O	O	O	O
trust	O	O	O	O	O	O
post	O	O	O	O	O	O
on	O	O	O	O	O	O
this	O	O	O	O	O	O
issue	O	O	O	O	O	O
 	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
found	O	O	O	O	O	O
[	O	O	O	O	O	O
here	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
trust.zscaler.net	O	O	O	O	O	O
/	O	O	O	O	O	O
blog	O	O	O	O	O	O
/	O	O	O	O	O	O
meltdown-and-spectre-vulnerabilities-initial-assessment	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
security	O	O	O	O	O	O
coverage	O	O	O	O	O	O
for	O	O	O	O	O	O
exploitation	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

We	O	O	O	O	O	O
have	O	O	O	O	O	O
deployed	O	O	O	O	O	O
advanced	O	O	O	O	O	O
threat	O	O	O	O	O	O
signatures	O	O	O	O	O	O
to	O	O	O	O	O	O
detect	O	O	O	O	O	O
some	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
known	O	O	O	O	O	O
JavaScript-based	O	O	O	O	O	O
exploit	O	O	O	O	O	O
POCs	O	O	O	O	O	O
.	O	O	O	O	O	O

Advanced	O	O	O	O	O	O
threat	O	O	O	O	O	O
signatures	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
JS.Spectre.gen	O	O	O	O	O	O
(	O	O	O	O	O	O
browser	O	O	O	O	O	O
exploit	O	O	O	O	O	O
)	O	O	O	O	O	O

We	O	O	O	O	O	O
are	O	O	O	O	O	O
 	O	O	O	O	O	O
actively	O	O	O	O	O	O
working	O	O	O	O	O	O
on	O	O	O	O	O	O
deploying	O	O	O	O	O	O
an	O	O	O	O	O	O
assembly-level	O	O	O	O	O	O
detection	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
exploitation	O	O	O	O	O	O
technique	O	O	O	O	O	O
involved	O	O	O	O	O	O
in	O	O	O	O	O	O
both	O	O	O	O	O	O
the	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
and	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
attacks	O	O	O	O	O	O
.	O	O	O	O	O	O

There	O	O	O	O	O	O
are	O	O	O	O	O	O
no	O	O	O	O	O	O
active	O	O	O	O	O	O
ITW	O	O	O	O	O	O
exploit	O	O	O	O	O	O
attempts	O	O	O	O	O	O
of	O	O	O	O	O	O
Meltdown	O	O	O	O	O	O
or	O	O	O	O	O	O
Spectre	O	O	O	O	O	O
that	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
is	O	O	O	O	O	O
currently	O	O	O	O	O	O
aware	O	O	O	O	O	O
of	O	O	O	O	O	O
,	O	O	O	O	O	O
but	O	O	O	O	O	O
we	O	O	O	O	O	O
will	O	O	O	O	O	O
continue	O	O	O	O	O	O
to	O	O	O	O	O	O
actively	O	O	O	O	O	O
monitor	O	O	O	O	O	O
and	O	O	O	O	O	O
ensure	O	O	O	O	O	O
coverage	O	O	O	O	O	O
for	O	O	O	O	O	O
our	O	O	O	O	O	O
customers	O	O	O	O	O	O
.	O	O	O	O	O	O

Update	O	O	O	O	O	O
-	O	O	O	O	O	O
We	O	O	O	O	O	O
have	O	O	O	O	O	O
deployed	O	O	O	O	O	O
assembly-level	O	O	O	O	O	O
detection	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
exploitation	O	O	O	O	O	O
technique	O	O	O	O	O	O
in	O	O	O	O	O	O
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
on	O	O	O	O	O	O
January	O	O	B-DATE	O	O	B-DATE
12	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2018	O	O	I-DATE	O	O	I-DATE

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Mitigation	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
highly	O	O	O	O	O	O
recommends	O	O	O	O	O	O
applying	O	O	O	O	O	O
 	O	O	O	O	O	O
both	O	O	O	O	O	O
operating	O	O	O	O	O	O
system	O	O	O	O	O	O
and	O	O	O	O	O	O
application-level	O	O	O	O	O	O
patches	O	O	O	O	O	O
to	O	O	O	O	O	O
safeguard	O	O	O	O	O	O
systems	O	O	O	O	O	O
against	O	O	O	O	O	O
these	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
OS-level	O	O	O	O	O	O
patches	O	O	O	O	O	O
currently	O	O	O	O	O	O
available	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

FreeBSD	O	O	O	O	O	O
patches	O	O	O	O	O	O
being	O	O	O	O	O	O
worked	O	O	O	O	O	O
on	O	O	O	O	O	O
:	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.freebsd.org	O	O	O	O	O	O
/	O	O	O	O	O	O
news	O	O	O	O	O	O
/	O	O	O	O	O	O
newsflash.html	O	O	O	O	O	O
#	O	O	O	O	O	O
event20180104	O	O	O	O	O	O
:	O	O	O	O	O	O
01	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

Apple	B-ORG	O	O	O	O	B-ORG
Mitigations	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
support.apple.com	O	O	O	O	O	O
/	O	O	O	O	O	O
en-us	O	O	O	O	O	O
/	O	O	O	O	O	O
HT208394	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

Microsoft	B-ORG	O	O	O	O	B-ORG
Advisory	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
support.microsoft.com	O	O	O	O	O	O
/	O	O	O	O	O	O
en-us	O	O	O	O	O	O
/	O	O	O	O	O	O
help	O	O	O	O	O	O
/	O	O	O	O	O	O
4073119	O	O	O	O	O	O
/	O	O	O	O	O	O
protect-against-speculative-execution-side-channel-vulnerabilities-in	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Note	O	O	O	O	O	O
:	O	O	O	O	O	O
A	O	O	O	O	O	O
small	O	O	O	O	O	O
number	O	O	O	O	O	O
of	O	O	O	O	O	O
anti-virus	O	O	O	O	O	O
applications	O	O	O	O	O	O
performing	O	O	O	O	O	O
unsupported	O	O	O	O	O	O
calls	O	O	O	O	O	O
to	O	O	O	O	O	O
Windows	O	O	O	O	O	O
Kernel	O	O	O	O	O	O
memory	O	O	O	O	O	O
are	O	O	O	O	O	O
causing	O	O	O	O	O	O
Blue	O	O	O	O	O	O
Screen	O	O	O	O	O	O
of	O	O	O	O	O	O
Death	O	O	O	O	O	O
(	O	O	O	O	O	O
BSOD	O	O	O	O	O	O
)	O	O	O	O	O	O
after	O	O	O	O	O	O
the	O	O	O	O	O	O
use	O	O	O	O	O	O
of	O	O	O	O	O	O
this	O	O	O	O	O	O
patch	O	O	O	O	O	O
,	O	O	O	O	O	O
so	O	O	O	O	O	O
if	O	O	O	O	O	O
you	O	O	O	O	O	O
didn't	O	O	O	O	O	O
receive	O	O	O	O	O	O
the	O	O	O	O	O	O
latest	O	O	O	O	O	O
Windows	O	O	O	O	O	O
security	O	O	O	O	O	O
update	O	O	O	O	O	O
,	O	O	O	O	O	O
you	O	O	O	O	O	O
may	O	O	O	O	O	O
need	O	O	O	O	O	O
to	O	O	O	O	O	O
update	O	O	O	O	O	O
the	O	O	O	O	O	O
AV	O	O	O	O	O	O
application	O	O	O	O	O	O
first	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Browser	O	O	O	O	O	O
patches	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Chrome	O	O	O	O	O	O
has	O	O	O	O	O	O
suggested	O	O	O	O	O	O
mitigation	O	O	O	O	O	O
 	O	O	O	O	O	O
from	O	O	O	O	O	O
Chrome	O	O	O	O	O	O
63	O	O	O	O	O	O
(	O	O	O	O	O	O
released	O	O	O	O	O	O
Dec	O	O	B-DATE	O	O	B-DATE
15	O	O	I-DATE	O	O	I-DATE
)	O	O	O	O	O	O
by	O	O	O	O	O	O
enabling	O	O	O	O	O	O
site-isolation	O	O	O	O	O	O
feature	O	O	O	O	O	O
.	O	O	O	O	O	O

A	O	O	O	O	O	O
comprehensive	O	O	O	O	O	O
fix	O	O	O	O	O	O
will	O	O	O	O	O	O
be	O	O	O	O	O	O
available	O	O	O	O	O	O
in	O	O	O	O	O	O
Chrome	O	O	O	O	O	O
64	O	O	O	O	O	O
(	O	O	O	O	O	O
releasing	O	O	O	O	O	O
Jan	O	O	B-DATE	O	O	B-DATE
23	O	O	I-DATE	O	O	I-DATE
)	O	O	O	O	O	O

Firefox	O	O	O	O	O	O
has	O	O	O	O	O	O
short	O	O	O	O	O	O
term	O	O	O	O	O	O
mitigations	O	O	O	O	O	O
available	O	O	O	O	O	O
from	O	O	O	O	O	O
 	O	O	O	O	O	O
version	O	O	O	O	O	O
57	O	O	O	O	O	O
(	O	O	O	O	O	O
released	O	O	O	O	O	O
November	O	O	B-DATE	O	O	B-DATE
)	O	O	O	O	O	O

Microsoft	B-ORG	O	O	O	O	B-ORG
Edge	O	O	O	O	O	O
and	O	O	O	O	O	O
IE	O	O	O	O	O	O
updates	O	O	O	O	O	O
are	O	O	O	O	O	O
available	O	O	O	O	O	O
along	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
Windows	O	O	O	O	O	O
patch	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Virtualization	O	O	O	O	O	O
application-level	O	O	O	O	O	O
patches	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

VMware	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.vmware.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
security	O	O	O	O	O	O
/	O	O	O	O	O	O
advisories	O	O	O	O	O	O
/	O	O	O	O	O	O
VMSA	O	O	O	O	O	O
-	O	O	O	O	O	O
2018	O	O	O	O	O	O
-	O	O	O	O	O	O
0002	O	O	O	O	O	O
.	O	O	O	O	O	O
html	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

XEN	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
xenbits.xen.org	O	O	O	O	O	O
/	O	O	O	O	O	O
xsa	O	O	O	O	O	O
/	O	O	O	O	O	O
advisory	O	O	O	O	O	O
-	O	O	O	O	O	O
254	O	O	O	O	O	O
.	O	O	O	O	O	O
html	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

Citrix	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
support.citrix.com	O	O	O	O	O	O
/	O	O	O	O	O	O
article	O	O	O	O	O	O
/	O	O	O	O	O	O
CTX231399	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Recommendation	O	O	O	O	O	O
for	O	O	O	O	O	O
cloud	O	O	O	O	O	O
apps	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Amazon	B-ORG	O	O	O	O	B-ORG
AWS	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
aws.amazon.com	O	O	O	O	O	O
/	O	O	O	O	O	O
de	O	O	O	O	O	O
/	O	O	O	O	O	O
security	O	O	O	O	O	O
/	O	O	O	O	O	O
security-bulletins	O	O	O	O	O	O
/	O	O	O	O	O	O
AWS	O	O	O	O	O	O
-	O	O	O	O	O	O
2018	O	O	O	O	O	O
-	O	O	O	O	O	O
013	O	O	O	O	O	O
/	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

Microsoft	B-ORG	O	O	O	O	B-ORG
Azure	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
azure.microsoft.com	O	O	O	O	O	O
/	O	O	O	O	O	O
en-us	O	O	O	O	O	O
/	O	O	O	O	O	O
blog	O	O	O	O	O	O
/	O	O	O	O	O	O
securing-azure-customers-from-cpu-vulnerability	O	O	O	O	O	O
/	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

Google	B-ORG	O	O	O	O	B-ORG
Cloud	O	O	O	O	O	O
(	O	O	O	O	O	O
<	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
support.google.com	O	O	O	O	O	O
/	O	O	O	O	O	O
faqs	O	O	O	O	O	O
/	O	O	O	O	O	O
answer	O	O	O	O	O	O
/	O	O	O	O	O	O
7622138	O	O	O	O	O	O
>	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Conclusion	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

For	O	O	O	O	O	O
those	O	O	O	O	O	O
of	O	O	O	O	O	O
us	O	O	O	O	O	O
in	O	O	O	O	O	O
security	O	O	O	O	O	O
,	O	O	O	O	O	O
2017	O	O	B-DATE	O	O	B-DATE
will	O	O	O	O	O	O
be	O	O	O	O	O	O
remembered	O	O	O	O	O	O
for	O	O	O	O	O	O
three	O	O	O	O	O	O
 	O	O	O	O	O	O
major	O	O	O	O	O	O
ransomware	O	O	O	O	O	O
outbreaks	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
Equifax	O	O	O	O	O	O
data	O	O	O	O	O	O
breach	O	O	O	O	O	O
.	O	O	O	O	O	O

And	O	O	O	O	O	O
with	O	O	O	O	O	O
such	O	O	O	O	O	O
a	O	O	O	O	O	O
significant	O	O	O	O	O	O
security	O	O	O	O	O	O
issue	O	O	O	O	O	O
tagged	O	O	O	O	O	O
within	O	O	O	O	O	O
the	O	O	O	O	O	O
first	O	O	O	O	O	O
week	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
year	O	O	O	O	O	O
,	O	O	O	O	O	O
2018	O	O	B-DATE	O	O	B-DATE
 	O	O	O	O	O	O
promises	O	O	O	O	O	O
to	O	O	O	O	O	O
challenging	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
security	O	O	O	O	O	O
and	O	O	O	O	O	O
tech	O	O	O	O	O	O
industry	O	O	O	O	O	O
.	O	O	O	O	O	O

While	O	O	O	O	O	O
we	O	O	O	O	O	O
are	O	O	O	O	O	O
not	O	O	O	O	O	O
aware	O	O	O	O	O	O
of	O	O	O	O	O	O
any	O	O	O	O	O	O
exploit	O	O	O	O	O	O
attempts	O	O	O	O	O	O
for	O	O	O	O	O	O
these	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
wild	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
is	O	O	O	O	O	O
only	O	O	O	O	O	O
a	O	O	O	O	O	O
matter	O	O	O	O	O	O
of	O	O	O	O	O	O
time	O	O	O	O	O	O
before	O	O	O	O	O	O
we	O	O	O	O	O	O
start	O	O	O	O	O	O
seeing	O	O	O	O	O	O
them	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
urge	O	O	O	O	O	O
everyone	O	O	O	O	O	O
to	O	O	O	O	O	O
apply	O	O	O	O	O	O
the	O	O	O	O	O	O
available	O	O	O	O	O	O
security	O	O	O	O	O	O
patches	O	O	O	O	O	O
.	O	O	O	O	O	O

Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
will	O	O	O	O	O	O
continue	O	O	O	O	O	O
to	O	O	O	O	O	O
monitor	O	O	O	O	O	O
and	O	O	O	O	O	O
ensure	O	O	O	O	O	O
coverage	O	O	O	O	O	O
for	O	O	O	O	O	O
any	O	O	O	O	O	O
in-the-wild	O	O	O	O	O	O
exploit	O	O	O	O	O	O
attempts	O	O	O	O	O	O
targeting	O	O	O	O	O	O
these	O	O	O	O	O	O
vulnerabilities	O	O	O	O	O	O
.	O	O	O	O	O	O

