<DOCSTART>	O	O	O	O	O	O

Why	O	O	O	O	O	O
You	O	O	O	O	O	O
Should	O	O	O	O	O	O
Care	O	O	O	O	O	O
About	O	O	O	O	O	O
The	O	O	O	O	O	O
OpenSSL	O	O	O	O	O	O
Heartbleed	O	O	O	O	O	O
Vulnerability	O	O	O	O	O	O

April	O	O	B-DATE	O	O	B-DATE
08	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2014	O	O	I-DATE	O	O	I-DATE

[	O	O	O	O	O	O
!	O	O	O	O	O	O
[	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
-	O	O	O	O	O	O
vXjReoLzsNk	O	O	O	O	O	O
/	O	O	O	O	O	O
U0TTbYxaM2I	O	O	O	O	O	O
/	O	O	O	O	O	O
AAAAAAAAB9U	O	O	O	O	O	O
/	O	O	O	O	O	O
xyOMcDl6G6A	O	O	O	O	O	O
/	O	O	O	O	O	O
s1600	O	O	O	O	O	O
/	O	O	O	O	O	O
Heartbleed-Logo.jpg	O	O	O	O	O	O
)	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
-	O	O	O	O	O	O
vXjReoLzsNk	O	O	O	O	O	O
/	O	O	O	O	O	O
U0TTbYxaM2I	O	O	O	O	O	O
/	O	O	O	O	O	O
AAAAAAAAB9U	O	O	O	O	O	O
/	O	O	O	O	O	O
xyOMcDl6G6A	O	O	O	O	O	O
/	O	O	O	O	O	O
s1600	O	O	O	O	O	O
/	O	O	O	O	O	O
Heartbleed-Logo.jpg	O	O	O	O	O	O
)	O	O	O	O	O	O

Yesterday	O	O	O	O	O	O
,	O	O	O	O	O	O
researchers	O	O	O	O	O	O
from	O	O	O	O	O	O
Google	B-ORG	O	O	O	O	B-ORG
and	O	O	O	O	O	O
Codenomicon	B-ORG	O	O	O	O	B-ORG
made	O	O	O	O	O	O
quite	O	O	O	O	O	O
a	O	O	O	O	O	O
splash	O	O	O	O	O	O
when	O	O	O	O	O	O
they	O	O	O	O	O	O
revealed	O	O	O	O	O	O
details	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
in	O	O	O	O	O	O
OpenSSL's	O	O	O	O	O	O
implementation	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
heartbeat	O	O	O	O	O	O
extension	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
they	O	O	O	O	O	O
have	O	O	O	O	O	O
affectionately	O	O	O	O	O	O
dubbed	O	O	O	O	O	O
 	O	O	O	O	O	O
*	O	O	O	O	O	O
heartbleed	O	O	O	O	O	O
*	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
short	O	O	O	O	O	O
,	O	O	O	O	O	O
heartbleed	O	O	O	O	O	O
represents	O	O	O	O	O	O
a	O	O	O	O	O	O
classic	O	O	O	O	O	O
example	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
simple	O	O	O	O	O	O
programming	O	O	O	O	O	O
oversight	O	O	O	O	O	O
-	O	O	O	O	O	O
not	O	O	O	O	O	O
properly	O	O	O	O	O	O
validating	O	O	O	O	O	O
the	O	O	O	O	O	O
length	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
message	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
leads	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
serious	O	O	O	O	O	O
memory	O	O	O	O	O	O
leak	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
Why	O	O	O	O	O	O
is	O	O	O	O	O	O
this	O	O	O	O	O	O
such	O	O	O	O	O	O
a	O	O	O	O	O	O
big	O	O	O	O	O	O
deal	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Breadth	O	O	O	O	O	O
and	O	O	O	O	O	O
depth	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
-	O	O	O	O	O	O
Heartbleed	O	O	O	O	O	O
impacts	O	O	O	O	O	O
the	O	O	O	O	O	O
most	O	O	O	O	O	O
common	O	O	O	O	O	O
implementation	O	O	O	O	O	O
of	O	O	O	O	O	O
SSL	O	O	O	O	O	O
/	O	O	O	O	O	O
TLS	O	O	O	O	O	O
(	O	O	O	O	O	O
OpenSSL	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
used	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
majority	O	O	O	O	O	O
of	O	O	O	O	O	O
web	O	O	O	O	O	O
servers	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
fact	O	O	O	O	O	O
,	O	O	O	O	O	O
according	O	O	O	O	O	O
to	O	O	O	O	O	O
[	O	O	O	O	O	O
Netcraft	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
http	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
news.netcraft.com	O	O	O	O	O	O
/	O	O	O	O	O	O
archives	O	O	O	O	O	O
/	O	O	O	O	O	O
2014	O	O	O	O	O	O
/	O	O	O	O	O	O
04	O	O	O	O	O	O
/	O	O	O	O	O	O
02	O	O	O	O	O	O
/	O	O	O	O	O	O
april	O	O	O	O	O	O
-	O	O	O	O	O	O
2014	O	O	O	O	O	O
-	O	O	O	O	O	O
web-server-survey.html	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
in	O	O	B-DATE	O	O	B-DATE
April	O	O	I-DATE	O	O	I-DATE
2014	O	O	I-DATE	O	O	I-DATE
,	O	O	O	O	O	O
Apache	O	O	O	O	O	O
and	O	O	O	O	O	O
nginx	O	O	O	O	O	O
,	O	O	O	O	O	O
two	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
most	O	O	O	O	O	O
popular	O	O	O	O	O	O
web	O	O	O	O	O	O
servers	O	O	O	O	O	O
that	O	O	O	O	O	O
both	O	O	O	O	O	O
include	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
Open	O	O	O	O	O	O
SSL	O	O	O	O	O	O
implementations	O	O	O	O	O	O
,	O	O	O	O	O	O
account	O	O	O	O	O	O
for	O	O	O	O	O	O
66%	O	O	O	O	O	O
of	O	O	O	O	O	O
active	O	O	O	O	O	O
web	O	O	O	O	O	O
servers	O	O	O	O	O	O
.	O	O	O	O	O	O

As	O	O	O	O	O	O
for	O	O	O	O	O	O
depth	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
impact	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
is	O	O	O	O	O	O
significant	O	O	O	O	O	O
and	O	O	O	O	O	O
trivial	O	O	O	O	O	O
to	O	O	O	O	O	O
exploit	O	O	O	O	O	O
.	O	O	O	O	O	O

A	O	O	O	O	O	O
simple	O	O	O	O	O	O
request	O	O	O	O	O	O
will	O	O	O	O	O	O
return	O	O	O	O	O	O
up	O	O	O	O	O	O
to	O	O	O	O	O	O
64	O	O	O	O	O	O
KB	O	O	O	O	O	O
of	O	O	O	O	O	O
random	O	O	O	O	O	O
data	O	O	O	O	O	O
from	O	O	O	O	O	O
server	O	O	O	O	O	O
memory	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
data	O	O	O	O	O	O
could	O	O	O	O	O	O
include	O	O	O	O	O	O
extremely	O	O	O	O	O	O
sensitive	O	O	O	O	O	O
information	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
private	O	O	O	O	O	O
encryption	O	O	O	O	O	O
keys	O	O	O	O	O	O
and	O	O	O	O	O	O
authentication	O	O	O	O	O	O
credentials	O	O	O	O	O	O
.	O	O	O	O	O	O

To	O	O	O	O	O	O
make	O	O	O	O	O	O
matters	O	O	O	O	O	O
worse	O	O	O	O	O	O
,	O	O	O	O	O	O
there	O	O	O	O	O	O
are	O	O	O	O	O	O
no	O	O	O	O	O	O
logs	O	O	O	O	O	O
of	O	O	O	O	O	O
such	O	O	O	O	O	O
requests	O	O	O	O	O	O
,	O	O	O	O	O	O
so	O	O	O	O	O	O
a	O	O	O	O	O	O
victim	O	O	O	O	O	O
won't	O	O	O	O	O	O
even	O	O	O	O	O	O
know	O	O	O	O	O	O
that	O	O	O	O	O	O
they	O	O	O	O	O	O
were	O	O	O	O	O	O
attacked	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
exploit	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
sent	O	O	O	O	O	O
over	O	O	O	O	O	O
and	O	O	O	O	O	O
over	O	O	O	O	O	O
,	O	O	O	O	O	O
retrieving	O	O	O	O	O	O
new	O	O	O	O	O	O
data	O	O	O	O	O	O
every	O	O	O	O	O	O
time	O	O	O	O	O	O
.	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
How	O	O	O	O	O	O
does	O	O	O	O	O	O
it	O	O	O	O	O	O
work	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
heartbeat	O	O	O	O	O	O
extension	O	O	O	O	O	O
is	O	O	O	O	O	O
defined	O	O	O	O	O	O
in	O	O	O	O	O	O
[	O	O	O	O	O	O
RFC	O	O	O	O	O	O
6520	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
tools.ietf.org	O	O	O	O	O	O
/	O	O	O	O	O	O
html	O	O	O	O	O	O
/	O	O	O	O	O	O
rfc6520	O	O	O	O	O	O
)	O	O	O	O	O	O
and	O	O	O	O	O	O
was	O	O	O	O	O	O
added	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
TLS	O	O	O	O	O	O
protocol	O	O	O	O	O	O
to	O	O	O	O	O	O
provide	O	O	O	O	O	O
a	O	O	O	O	O	O
simple	O	O	O	O	O	O
means	O	O	O	O	O	O
of	O	O	O	O	O	O
keeping	O	O	O	O	O	O
a	O	O	O	O	O	O
TLS	O	O	O	O	O	O
session	O	O	O	O	O	O
alive	O	O	O	O	O	O
.	O	O	O	O	O	O

Think	O	O	O	O	O	O
of	O	O	O	O	O	O
it	O	O	O	O	O	O
as	O	O	O	O	O	O
a	O	O	O	O	O	O
small	O	O	O	O	O	O
packet	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
client	O	O	O	O	O	O
sends	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
to	O	O	O	O	O	O
let	O	O	O	O	O	O
it	O	O	O	O	O	O
know	O	O	O	O	O	O
that	O	O	O	O	O	O
it's	O	O	O	O	O	O
still	O	O	O	O	O	O
around	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
problem	O	O	O	O	O	O
occurs	O	O	O	O	O	O
,	O	O	O	O	O	O
because	O	O	O	O	O	O
that	O	O	O	O	O	O
simple	O	O	O	O	O	O
packet	O	O	O	O	O	O
includes	O	O	O	O	O	O
the	O	O	O	O	O	O
length	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
that	O	O	O	O	O	O
it's	O	O	O	O	O	O
sending	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
isn't	O	O	O	O	O	O
properly	O	O	O	O	O	O
validated	O	O	O	O	O	O
.	O	O	O	O	O	O

If	O	O	O	O	O	O
the	O	O	O	O	O	O
actual	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
smaller	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
length	O	O	O	O	O	O
value	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
will	O	O	O	O	O	O
return	O	O	O	O	O	O
random	O	O	O	O	O	O
data	O	O	O	O	O	O
from	O	O	O	O	O	O
memory	O	O	O	O	O	O
to	O	O	O	O	O	O
fill	O	O	O	O	O	O
the	O	O	O	O	O	O
void	O	O	O	O	O	O
.	O	O	O	O	O	O

There	O	O	O	O	O	O
is	O	O	O	O	O	O
already	O	O	O	O	O	O
plenty	O	O	O	O	O	O
of	O	O	O	O	O	O
PoC	O	O	O	O	O	O
exploit	O	O	O	O	O	O
code	O	O	O	O	O	O
for	O	O	O	O	O	O
this	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
readily	O	O	O	O	O	O
available	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
web	O	O	O	O	O	O
if	O	O	O	O	O	O
you	O	O	O	O	O	O
want	O	O	O	O	O	O
to	O	O	O	O	O	O
test	O	O	O	O	O	O
your	O	O	O	O	O	O
own	O	O	O	O	O	O
servers	O	O	O	O	O	O
.	O	O	O	O	O	O

Let's	O	O	O	O	O	O
break	O	O	O	O	O	O
down	O	O	O	O	O	O
a	O	O	O	O	O	O
sample	O	O	O	O	O	O
heartbeat	O	O	O	O	O	O
request	O	O	O	O	O	O
to	O	O	O	O	O	O
illustrate	O	O	O	O	O	O
the	O	O	O	O	O	O
vulnerability	O	O	O	O	O	O
(	O	O	O	O	O	O
some	O	O	O	O	O	O
hexadecimal	O	O	O	O	O	O
values	O	O	O	O	O	O
have	O	O	O	O	O	O
been	O	O	O	O	O	O
converted	O	O	O	O	O	O
to	O	O	O	O	O	O
decimal	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
description	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
[	O	O	O	O	O	O
18	O	O	O	O	O	O
03	O	O	O	O	O	O
02	O	O	O	O	O	O
00	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
tel	O	O	O	O	O	O
:	O	O	O	O	O	O
18%	O	O	O	O	O	O
2003%	O	O	O	O	O	O
2002%	O	O	O	O	O	O
2000	O	O	O	O	O	O
)	O	O	O	O	O	O
0A	O	O	O	O	O	O
01	O	O	O	O	O	O
40	O	O	O	O	O	O
00	O	O	O	O	O	O
4D	O	O	O	O	O	O
[	O	O	O	O	O	O
49	O	O	O	O	O	O
43	O	O	O	O	O	O
48	O	O	O	O	O	O
41	O	O	O	O	O	O
45	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
tel	O	O	O	O	O	O
:	O	O	O	O	O	O
49%	O	O	O	O	O	O
2043%	O	O	O	O	O	O
2048%	O	O	O	O	O	O
2041%	O	O	O	O	O	O
2045	O	O	O	O	O	O
)	O	O	O	O	O	O
4C	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
#1	O	O	O	O	O	O
|	O	O	O	O	O	O
#2	O	O	O	O	O	O
 	O	O	O	O	O	O
|	O	O	O	O	O	O
#3	O	O	O	O	O	O
 	O	O	O	O	O	O
|	O	O	O	O	O	O
#4	O	O	O	O	O	O
|	O	O	O	O	O	O
#5	O	O	O	O	O	O
 	O	O	O	O	O	O
|	O	O	O	O	O	O
       	O	O	O	O	O	O
#6	O	O	O	O	O	O
       	O	O	O	O	O	O
|	O	O	O	O	O	O

#1	O	O	O	O	O	O
-	O	O	O	O	O	O
Type	O	O	O	O	O	O
=	O	O	O	O	O	O
24	O	O	O	O	O	O

#2	O	O	O	O	O	O
-	O	O	O	O	O	O
Version	O	O	O	O	O	O
=	O	O	O	O	O	O
0x302	O	O	O	O	O	O

#3	O	O	O	O	O	O
-	O	O	O	O	O	O
Data	O	O	O	O	O	O
length	O	O	O	O	O	O
=	O	O	O	O	O	O
10	O	O	O	O	O	O
(	O	O	O	O	O	O
#4	O	O	O	O	O	O
+	O	O	O	O	O	O
#	O	O	O	O	O	O
5	O	O	O	O	O	O
+	O	O	O	O	O	O
#6	O	O	O	O	O	O
)	O	O	O	O	O	O

#4	O	O	O	O	O	O
-	O	O	O	O	O	O
 	O	O	O	O	O	O
TLS1	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
HB	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
REQUEST	O	O	O	O	O	O

#5	O	O	O	O	O	O
-	O	O	O	O	O	O
Total	O	O	O	O	O	O
payload	O	O	O	O	O	O
length	O	O	O	O	O	O
(	O	O	O	O	O	O
16,384	O	O	O	O	O	O
bytes	O	O	O	O	O	O
)	O	O	O	O	O	O

#6	O	O	O	O	O	O
-	O	O	O	O	O	O
Data	O	O	O	O	O	O
(	O	O	O	O	O	O
'	O	O	O	O	O	O
MICHAEL	O	O	O	O	O	O
'	O	O	O	O	O	O
)	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
The	O	O	O	O	O	O
problem	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
this	O	O	O	O	O	O
example	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
length	O	O	O	O	O	O
is	O	O	O	O	O	O
10	O	O	O	O	O	O
bytes	O	O	O	O	O	O
,	O	O	O	O	O	O
while	O	O	O	O	O	O
the	O	O	O	O	O	O
total	O	O	O	O	O	O
length	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
set	O	O	O	O	O	O
to	O	O	O	O	O	O
16,384	O	O	O	O	O	O
bytes	O	O	O	O	O	O
.	O	O	O	O	O	O

Due	O	O	O	O	O	O
to	O	O	O	O	O	O
improper	O	O	O	O	O	O
bounds	O	O	O	O	O	O
checking	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
ultimately	O	O	O	O	O	O
returns	O	O	O	O	O	O
both	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
sent	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
heartbeat	O	O	O	O	O	O
request	O	O	O	O	O	O
,	O	O	O	O	O	O
along	O	O	O	O	O	O
with	O	O	O	O	O	O
whatever	O	O	O	O	O	O
else	O	O	O	O	O	O
happens	O	O	O	O	O	O
to	O	O	O	O	O	O
come	O	O	O	O	O	O
after	O	O	O	O	O	O
it	O	O	O	O	O	O
in	O	O	O	O	O	O
memory	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
the	O	O	O	O	O	O
screenshot	O	O	O	O	O	O
below	O	O	O	O	O	O
,	O	O	O	O	O	O
you	O	O	O	O	O	O
can	O	O	O	O	O	O
clearly	O	O	O	O	O	O
see	O	O	O	O	O	O
the	O	O	O	O	O	O
heartbeat	O	O	O	O	O	O
payload	O	O	O	O	O	O
(	O	O	O	O	O	O
'	O	O	O	O	O	O
MICHAEL	O	O	O	O	O	O
'	O	O	O	O	O	O
)	O	O	O	O	O	O
sent	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
server	O	O	O	O	O	O
,	O	O	O	O	O	O
is	O	O	O	O	O	O
followed	O	O	O	O	O	O
by	O	O	O	O	O	O
random	O	O	O	O	O	O
browser	O	O	O	O	O	O
headers	O	O	O	O	O	O
-	O	O	O	O	O	O
likely	O	O	O	O	O	O
from	O	O	O	O	O	O
a	O	O	O	O	O	O
recently	O	O	O	O	O	O
requested	O	O	O	O	O	O
webpage	O	O	O	O	O	O
on	O	O	O	O	O	O
that	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Data	O	O	O	O	O	O
leakage	O	O	O	O	O	O
from	O	O	O	O	O	O
a	O	O	O	O	O	O
web	O	O	O	O	O	O
server	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
OpenSSL	O	O	O	O	O	O
'	O	O	O	O	O	O
heartbleed	O	O	O	O	O	O
'	O	O	O	O	O	O
attack	O	O	O	O	O	O
 	O	O	O	O	O	O
|	O	O	O	O	O	O

#	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
The	O	O	O	O	O	O
verdict	O	O	O	O	O	O

This	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
serious	O	O	O	O	O	O
threat	O	O	O	O	O	O
.	O	O	O	O	O	O

Use	O	O	O	O	O	O
freely	O	O	O	O	O	O
available	O	O	O	O	O	O
tools	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
this	O	O	O	O	O	O
handy	O	O	O	O	O	O
[	O	O	O	O	O	O
web	O	O	O	O	O	O
app	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
http	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
filippo.io	O	O	O	O	O	O
/	O	O	O	O	O	O
Heartbleed	O	O	O	O	O	O
/	O	O	O	O	O	O
)	O	O	O	O	O	O
to	O	O	O	O	O	O
quickly	O	O	O	O	O	O
check	O	O	O	O	O	O
your	O	O	O	O	O	O
servers	O	O	O	O	O	O
to	O	O	O	O	O	O
determine	O	O	O	O	O	O
if	O	O	O	O	O	O
you're	O	O	O	O	O	O
vulnerable	O	O	O	O	O	O
.	O	O	O	O	O	O

If	O	O	O	O	O	O
you	O	O	O	O	O	O
are	O	O	O	O	O	O
,	O	O	O	O	O	O
either	O	O	O	O	O	O
upgrade	O	O	O	O	O	O
OpenSSL	O	O	O	O	O	O
to	O	O	O	O	O	O
1.0.1g	O	O	O	O	O	O
or	O	O	O	O	O	O
recompile	O	O	O	O	O	O
your	O	O	O	O	O	O
existing	O	O	O	O	O	O
OpenSSL	O	O	O	O	O	O
version	O	O	O	O	O	O
with	O	O	O	O	O	O
 	O	O	O	O	O	O
-	O	O	O	O	O	O
DOPENSSL	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
NO	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
HEARTBEATS	O	O	O	O	O	O
compile	O	O	O	O	O	O
time	O	O	O	O	O	O
option	O	O	O	O	O	O
.	O	O	O	O	O	O

-	O	O	O	O	O	O
michael	O	O	O	O	O	O

 	O	O	O	O	O	O

