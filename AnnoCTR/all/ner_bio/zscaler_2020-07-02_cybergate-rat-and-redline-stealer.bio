<DOCSTART>	O	O	O	O	O	O

CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
and	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
Stealer	O	O	O	O	O	O
Delivered	O	O	O	O	O	O
in	O	O	O	O	O	O
Ongoing	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
Malware	O	O	O	O	O	O
Campaigns	O	O	O	O	O	O

July	O	O	B-DATE	O	O	B-DATE
02	O	O	I-DATE	O	O	I-DATE
,	O	O	I-DATE	O	O	I-DATE
2020	O	O	I-DATE	O	O	I-DATE

In	O	O	O	O	O	O
our	O	O	O	O	O	O
most	O	O	O	O	O	O
recent	O	O	O	O	O	O
 	O	O	O	O	O	O
[	O	O	O	O	O	O
blog	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
research	O	O	O	O	O	O
/	O	O	O	O	O	O
taurus-new-stealer-town	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
had	O	O	O	O	O	O
detailed	O	O	O	O	O	O
a	O	O	O	O	O	O
malware	O	O	O	O	O	O
campaign	O	O	O	O	O	O
that	O	O	O	O	O	O
uses	O	O	O	O	O	O
a	O	O	O	O	O	O
malicious	O	O	O	O	O	O
document	O	O	O	O	O	O
(	O	O	O	O	O	O
DOC	O	O	O	O	O	O
)	O	O	O	O	O	O
file	O	O	O	O	O	O
to	O	O	O	O	O	O
deliver	O	O	O	O	O	O
an	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
which	O	O	O	O	O	O
,	O	O	O	O	O	O
in	O	O	O	O	O	O
turn	O	O	O	O	O	O
,	O	O	O	O	O	O
delivers	O	O	O	O	O	O
the	O	O	O	O	O	O
Taurus	O	O	O	O	O	O
stealer	O	O	O	O	O	O
to	O	O	O	O	O	O
steal	O	O	O	O	O	O
credentials	O	O	O	O	O	O
,	O	O	O	O	O	O
cookies	O	O	O	O	O	O
,	O	O	O	O	O	O
history	O	O	O	O	O	O
,	O	O	O	O	O	O
system	O	O	O	O	O	O
info	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
more	O	O	O	O	O	O
.	O	O	O	O	O	O

Along	O	O	O	O	O	O
similar	O	O	O	O	O	O
lines	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
recently	O	O	O	O	O	O
came	O	O	O	O	O	O
across	O	O	O	O	O	O
a	O	O	O	O	O	O
new	O	O	O	O	O	O
malware	O	O	O	O	O	O
campaign	O	O	O	O	O	O
that	O	O	O	O	O	O
uses	O	O	O	O	O	O
a	O	O	O	O	O	O
similar	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
to	O	O	O	O	O	O
deliver	O	O	O	O	O	O
a	O	O	O	O	O	O
new	O	O	O	O	O	O
variant	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
and	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
blog	O	O	O	O	O	O
will	O	O	O	O	O	O
walk	O	O	O	O	O	O
you	O	O	O	O	O	O
through	O	O	O	O	O	O
a	O	O	O	O	O	O
detailed	O	O	O	O	O	O
analysis	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
payload	O	O	O	O	O	O
delivery	O	O	O	O	O	O
mechanism	O	O	O	O	O	O
,	O	O	O	O	O	O
capabilities	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
Command	O	O	O	O	O	O
and	O	O	O	O	O	O
Control	O	O	O	O	O	O
(	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
)	O	O	O	O	O	O
 	O	O	O	O	O	O
communication	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
also	O	O	O	O	O	O
observed	O	O	O	O	O	O
the	O	O	O	O	O	O
usage	O	O	O	O	O	O
of	O	O	O	O	O	O
custom	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
protocols	O	O	O	O	O	O
to	O	O	O	O	O	O
exfiltrate	O	O	O	O	O	O
sensitive	O	O	O	O	O	O
information	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
will	O	O	O	O	O	O
shed	O	O	O	O	O	O
light	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
custom	O	O	O	O	O	O
protocol	O	O	O	O	O	O
used	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
.	O	O	O	O	O	O

Below	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
detection	O	O	O	O	O	O
timeline	O	O	O	O	O	O
for	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
 	O	O	O	O	O	O
malware	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
past	O	O	O	O	O	O
month	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
observed	O	O	O	O	O	O
several	O	O	O	O	O	O
hits	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
malware	O	O	O	O	O	O
involving	O	O	O	O	O	O
various	O	O	O	O	O	O
malware	O	O	O	O	O	O
families	O	O	O	O	O	O
,	O	O	O	O	O	O
including	O	O	O	O	O	O
AZOrult	O	O	O	O	O	O
,	O	O	O	O	O	O
Xtreme	O	O	O	O	O	O
RAT	O	O	O	O	O	O
,	O	O	O	O	O	O
Taurus	O	O	O	O	O	O
stealer	O	O	O	O	O	O
,	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
Stealer	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
team	O	O	O	O	O	O
is	O	O	O	O	O	O
closely	O	O	O	O	O	O
monitoring	O	O	O	O	O	O
the	O	O	O	O	O	O
developments	O	O	O	O	O	O
on	O	O	O	O	O	O
these	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
to	O	O	O	O	O	O
ensure	O	O	O	O	O	O
coverage	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Hits	O	O	O	O	O	O
of	O	O	O	O	O	O
Autoit	O	O	O	O	O	O
based	O	O	O	O	O	O
malware	O	O	O	O	O	O
in	O	O	O	O	O	O
last	O	O	O	O	O	O
month	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
stats.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
1	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
Hits	O	O	O	O	O	O
of	O	O	O	O	O	O
AutoIt-based	O	O	O	O	O	O
malware	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
past	O	O	B-DATE	O	O	B-DATE
month	O	O	I-DATE	O	O	I-DATE
.	O	O	O	O	O	O
*	O	O	O	O	O	O

Zscaler	B-ORG	O	O	O	O	B-ORG
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
 	O	O	O	O	O	O
captured	O	O	O	O	O	O
the	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
and	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
successfully	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
observed	O	O	O	O	O	O
that	O	O	O	O	O	O
both	O	O	O	O	O	O
of	O	O	O	O	O	O
them	O	O	O	O	O	O
are	O	O	O	O	O	O
packed	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
packer	O	O	O	O	O	O
and	O	O	O	O	O	O
use	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
payload	O	O	O	O	O	O
delivery	O	O	O	O	O	O
mechanism	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
 	O	O	O	O	O	O
tactics	O	O	O	O	O	O
,	O	O	O	O	O	O
techniques	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
procedures	O	O	O	O	O	O
 	O	O	O	O	O	O
(	O	O	O	O	O	O
TTPs	O	O	O	O	O	O
)	O	O	O	O	O	O
observed	O	O	O	O	O	O
in	O	O	O	O	O	O
these	O	O	O	O	O	O
two	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
are	O	O	O	O	O	O
similar	O	O	O	O	O	O
in	O	O	O	O	O	O
nature	O	O	O	O	O	O
,	O	O	O	O	O	O
so	O	O	O	O	O	O
we	O	O	O	O	O	O
suspect	O	O	O	O	O	O
that	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
actors	O	O	O	O	O	O
are	O	O	O	O	O	O
behind	O	O	O	O	O	O
these	O	O	O	O	O	O
attacks	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Payload	O	O	O	O	O	O
delivery	O	O	O	O	O	O
mechanism	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

As	O	O	O	O	O	O
observed	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
previous	O	O	O	O	O	O
blog	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
source	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
stealer	O	O	O	O	O	O
was	O	O	O	O	O	O
spam	O	O	O	O	O	O
mail	O	O	O	O	O	O
containing	O	O	O	O	O	O
a	O	O	O	O	O	O
link	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
 	O	O	O	O	O	O
or	O	O	O	O	O	O
an	O	O	O	O	O	O
attached	O	O	O	O	O	O
DOC	O	O	O	O	O	O
file	O	O	O	O	O	O
that	O	O	O	O	O	O
downloads	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
.	O	O	O	O	O	O

While	O	O	O	O	O	O
tracking	O	O	O	O	O	O
this	O	O	O	O	O	O
campaign	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
found	O	O	O	O	O	O
that	O	O	O	O	O	O
this	O	O	O	O	O	O
malware	O	O	O	O	O	O
is	O	O	O	O	O	O
served	O	O	O	O	O	O
by	O	O	O	O	O	O
phishing	O	O	O	O	O	O
sites	O	O	O	O	O	O
.	O	O	O	O	O	O

At	O	O	O	O	O	O
the	O	O	O	O	O	O
time	O	O	O	O	O	O
of	O	O	O	O	O	O
our	O	O	O	O	O	O
analysis	O	O	O	O	O	O
,	O	O	O	O	O	O
we	O	O	O	O	O	O
found	O	O	O	O	O	O
a	O	O	O	O	O	O
live	O	O	O	O	O	O
phishing	O	O	O	O	O	O
site	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
cryptocurrency	O	O	O	O	O	O
blockchain	O	O	O	O	O	O
exchange	O	O	O	O	O	O
called	O	O	O	O	O	O
Resistance	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
serving	O	O	O	O	O	O
the	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Crypto	O	O	O	O	O	O
blockchain	O	O	O	O	O	O
exchange	O	O	O	O	O	O
phishing	O	O	O	O	O	O
site	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
website_resis.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

Figure	O	O	O	O	O	O
2	O	O	O	O	O	O
:	O	O	O	O	O	O
A	O	O	O	O	O	O
crypto	O	O	O	O	O	O
blockchain	O	O	O	O	O	O
exchange	O	O	O	O	O	O
phishing	O	O	O	O	O	O
site	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Wrapper	O	O	O	O	O	O
analysis	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
files	O	O	O	O	O	O
downloaded	O	O	O	O	O	O
from	O	O	O	O	O	O
these	O	O	O	O	O	O
phishing	O	O	O	O	O	O
sites	O	O	O	O	O	O
are	O	O	O	O	O	O
self-extracting	O	O	O	O	O	O
archives	O	O	O	O	O	O
(	O	O	O	O	O	O
SFX	O	O	O	O	O	O
)	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
contain	O	O	O	O	O	O
 	O	O	O	O	O	O
a	O	O	O	O	O	O
cabinet	O	O	O	O	O	O
file	O	O	O	O	O	O
and	O	O	O	O	O	O
a	O	O	O	O	O	O
script	O	O	O	O	O	O
to	O	O	O	O	O	O
execute	O	O	O	O	O	O
embedded	O	O	O	O	O	O
files	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
cabinet	O	O	O	O	O	O
file	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
found	O	O	O	O	O	O
under	O	O	O	O	O	O
the	O	O	O	O	O	O
RCData	O	O	O	O	O	O
resource	O	O	O	O	O	O
directory	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
name	O	O	O	O	O	O
‘	O	O	O	O	O	O
CABINET	O	O	O	O	O	O
’	O	O	O	O	O	O
and	O	O	O	O	O	O
command	O	O	O	O	O	O
for	O	O	O	O	O	O
execution	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
resource	O	O	O	O	O	O
directory	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
name	O	O	O	O	O	O
‘	O	O	O	O	O	O
RUNPROGRAM	O	O	O	O	O	O
’	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Resource	O	O	O	O	O	O
directory	O	O	O	O	O	O
of	O	O	O	O	O	O
wrapper	O	O	O	O	O	O
file	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
sfx_cff.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
3	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
resource	O	O	O	O	O	O
directory	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
wrapper	O	O	O	O	O	O
file	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
cabinet	O	O	O	O	O	O
file	O	O	O	O	O	O
contains	O	O	O	O	O	O
three	O	O	O	O	O	O
files	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
 	O	O	O	O	O	O
‘	O	O	O	O	O	O
com	O	O	O	O	O	O
’	O	O	O	O	O	O
extension	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
file	O	O	O	O	O	O
names	O	O	O	O	O	O
are	O	O	O	O	O	O
random	O	O	O	O	O	O
and	O	O	O	O	O	O
different	O	O	O	O	O	O
in	O	O	O	O	O	O
other	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
scripts	O	O	O	O	O	O
.	O	O	O	O	O	O

Those	O	O	O	O	O	O
files	O	O	O	O	O	O
are	O	O	O	O	O	O
:	O	O	O	O	O	O

ffXi.com	O	O	O	O	O	O
-	O	O	O	O	O	O
This	O	O	O	O	O	O
is	O	O	O	O	O	O
a	O	O	O	O	O	O
legit	O	O	O	O	O	O
Autoit3	O	O	O	O	O	O
.	O	O	O	O	O	O
exe	O	O	O	O	O	O
having	O	O	O	O	O	O
an	O	O	O	O	O	O
invalid	O	O	O	O	O	O
header	O	O	O	O	O	O
used	O	O	O	O	O	O
to	O	O	O	O	O	O
run	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
scripts	O	O	O	O	O	O

adCt.com	O	O	O	O	O	O
-	O	O	O	O	O	O
A	O	O	O	O	O	O
Windows	O	O	O	O	O	O
Base64	O	O	O	O	O	O
encoded	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
by	O	O	O	O	O	O
certutil	O	O	O	O	O	O

bzYfp.com	O	O	O	O	O	O
-	O	O	O	O	O	O
The	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O

The	O	O	O	O	O	O
command-line	O	O	O	O	O	O
script	O	O	O	O	O	O
present	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
‘	O	O	O	O	O	O
RUNPROGRAM	O	O	O	O	O	O
’	O	O	O	O	O	O
resource	O	O	O	O	O	O
directory	O	O	O	O	O	O
to	O	O	O	O	O	O
execute	O	O	O	O	O	O
embedded	O	O	O	O	O	O
files	O	O	O	O	O	O
is	O	O	O	O	O	O
shown	O	O	O	O	O	O
below	O	O	O	O	O	O
:	O	O	O	O	O	O

*	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
cmd	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
c	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
<	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
nul	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
set	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
p	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
M	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
lsass.com	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
type	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ffXi.com	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
>	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
lsass.com	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
del	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ffXi.com	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
certutil	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
decode	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
adCt.com	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
R	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
lsass.com	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
R	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
&	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ping	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
127.0.0.1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
n	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
20	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
*	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

First	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
corrects	O	O	O	O	O	O
the	O	O	O	O	O	O
header	O	O	O	O	O	O
of	O	O	O	O	O	O
‘	O	O	O	O	O	O
ffXi.com	O	O	O	O	O	O
’	O	O	O	O	O	O
(	O	O	O	O	O	O
Autoit3	O	O	O	O	O	O
.	O	O	O	O	O	O
exe	O	O	O	O	O	O
)	O	O	O	O	O	O
by	O	O	O	O	O	O
appending	O	O	O	O	O	O
“	O	O	O	O	O	O
M	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
stores	O	O	O	O	O	O
it	O	O	O	O	O	O
in	O	O	O	O	O	O
‘	O	O	O	O	O	O
lsass.com	O	O	O	O	O	O
’	O	O	O	O	O	O
,	O	O	O	O	O	O
then	O	O	O	O	O	O
it	O	O	O	O	O	O
deletes	O	O	O	O	O	O
‘	O	O	O	O	O	O
ffXi.com	O	O	O	O	O	O
’	O	O	O	O	O	O
.	O	O	O	O	O	O

After	O	O	O	O	O	O
that	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
decodes	O	O	O	O	O	O
the	O	O	O	O	O	O
Base64	O	O	O	O	O	O
encoded	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
using	O	O	O	O	O	O
‘	O	O	O	O	O	O
certutil	O	O	O	O	O	O
’	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
parameter	O	O	O	O	O	O
“	O	O	O	O	O	O
-	O	O	O	O	O	O
decode	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
saves	O	O	O	O	O	O
it	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
file	O	O	O	O	O	O
“	O	O	O	O	O	O
R	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
then	O	O	O	O	O	O
runs	O	O	O	O	O	O
this	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
with	O	O	O	O	O	O
Autoit3	O	O	O	O	O	O
.	O	O	O	O	O	O
exe	O	O	O	O	O	O
(	O	O	O	O	O	O
lsass.com	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
the	O	O	O	O	O	O
end	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
uses	O	O	O	O	O	O
the	O	O	O	O	O	O
ping	O	O	O	O	O	O
command	O	O	O	O	O	O
as	O	O	O	O	O	O
a	O	O	O	O	O	O
sleep	O	O	O	O	O	O
timer	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
uses	O	O	O	O	O	O
custom	O	O	O	O	O	O
obfuscation	O	O	O	O	O	O
 	O	O	O	O	O	O
and	O	O	O	O	O	O
all	O	O	O	O	O	O
the	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
strings	O	O	O	O	O	O
are	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
,	O	O	O	O	O	O
as	O	O	O	O	O	O
 	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
seen	O	O	O	O	O	O
previously	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
campaign	O	O	O	O	O	O
.	O	O	O	O	O	O

Upon	O	O	O	O	O	O
execution	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
drops	O	O	O	O	O	O
and	O	O	O	O	O	O
hides	O	O	O	O	O	O
the	O	O	O	O	O	O
following	O	O	O	O	O	O
four	O	O	O	O	O	O
files	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
directory	O	O	O	O	O	O
“	O	O	O	O	O	O
%	O	O	O	O	O	O
APPDATA	O	O	O	O	O	O
%	O	O	O	O	O	O
\	O	O	O	O	O	O
\	O	O	O	O	O	O
cghost	O	O	O	O	O	O
”	O	O	O	O	O	O
for	O	O	O	O	O	O
achieving	O	O	O	O	O	O
persistency	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
found	O	O	O	O	O	O
this	O	O	O	O	O	O
persistency	O	O	O	O	O	O
technique	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
only	O	O	O	O	O	O
if	O	O	O	O	O	O
the	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
RAT	O	O	O	O	O	O
.	O	O	O	O	O	O

cghost.com	O	O	O	O	O	O
-	O	O	O	O	O	O
Copy	O	O	O	O	O	O
of	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
interpreter	O	O	O	O	O	O

aGuDP	O	O	O	O	O	O
-	O	O	O	O	O	O
Copy	O	O	O	O	O	O
of	O	O	O	O	O	O
Autoit	O	O	O	O	O	O
script	O	O	O	O	O	O

bzYfp.com	O	O	O	O	O	O
-	O	O	O	O	O	O
Copy	O	O	O	O	O	O
of	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O

dLzSj.vbs	O	O	O	O	O	O
-	O	O	O	O	O	O
VBS	O	O	O	O	O	O
script	O	O	O	O	O	O
to	O	O	O	O	O	O
execute	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
interpreter	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
script	O	O	O	O	O	O

The	O	O	O	O	O	O
VBS	O	O	O	O	O	O
file	O	O	O	O	O	O
contains	O	O	O	O	O	O
:	O	O	O	O	O	O

*	O	O	O	O	O	O
CGXdBksrYqQnDIwn	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
GetObject	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
winmgmts	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
root	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cimv2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Win32	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Process	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Create	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
%	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
appdata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
%	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cghost	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cghost.com	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
%	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
appdata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
%	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cghost	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
aGuDP	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
%	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
appdata	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
%	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cghost	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Null	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
OJxMEkRRELvrj	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
*	O	O	O	O	O	O

For	O	O	O	O	O	O
persistence	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
creates	O	O	O	O	O	O
an	O	O	O	O	O	O
internet	O	O	O	O	O	O
shortcut	O	O	O	O	O	O
file	O	O	O	O	O	O
‘	O	O	O	O	O	O
cghost.url	O	O	O	O	O	O
’	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
startup	O	O	O	O	O	O
directory	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
following	O	O	O	O	O	O
contents	O	O	O	O	O	O
:	O	O	O	O	O	O

*	O	O	O	O	O	O
[	O	O	O	O	O	O
InternetShortcut	O	O	O	O	O	O
]	O	O	O	O	O	O

URL	O	O	O	O	O	O
=	O	O	O	O	O	O
"	O	O	O	O	O	O
%	O	O	O	O	O	O
APPDATA	O	O	O	O	O	O
%	O	O	O	O	O	O
\	O	O	O	O	O	O
cghost	O	O	O	O	O	O
\	O	O	O	O	O	O
dLzSj.vbs	O	O	O	O	O	O
"	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
has	O	O	O	O	O	O
multiple	O	O	O	O	O	O
sandbox	O	O	O	O	O	O
evasion	O	O	O	O	O	O
tricks	O	O	O	O	O	O
to	O	O	O	O	O	O
avoid	O	O	O	O	O	O
detection	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
also	O	O	O	O	O	O
checks	O	O	O	O	O	O
to	O	O	O	O	O	O
see	O	O	O	O	O	O
if	O	O	O	O	O	O
a	O	O	O	O	O	O
file	O	O	O	O	O	O
and	O	O	O	O	O	O
 	O	O	O	O	O	O
computer	O	O	O	O	O	O
name	O	O	O	O	O	O
exists	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
and	O	O	O	O	O	O
checks	O	O	O	O	O	O
for	O	O	O	O	O	O
a	O	O	O	O	O	O
particular	O	O	O	O	O	O
domain	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Multiple	O	O	O	O	O	O
checks	O	O	O	O	O	O
before	O	O	O	O	O	O
execution	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
tricks_autoit.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
4	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
malware	O	O	O	O	O	O
performs	O	O	O	O	O	O
multiple	O	O	O	O	O	O
checks	O	O	O	O	O	O
before	O	O	O	O	O	O
execution	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

This	O	O	O	O	O	O
malware	O	O	O	O	O	O
wrapper	O	O	O	O	O	O
avoids	O	O	O	O	O	O
its	O	O	O	O	O	O
execution	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
Windows	O	O	O	O	O	O
defender	O	O	O	O	O	O
antivirus	O	O	O	O	O	O
simulator	O	O	O	O	O	O
by	O	O	O	O	O	O
checking	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
presence	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
“	O	O	O	O	O	O
C	O	O	O	O	O	O
:	O	O	O	O	O	O
\	O	O	O	O	O	O
aaa	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
TouchMeNot.txt	O	O	O	O	O	O
”	O	O	O	O	O	O
file	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
malware	O	O	O	O	O	O
terminates	O	O	O	O	O	O
execution	O	O	O	O	O	O
if	O	O	O	O	O	O
it	O	O	O	O	O	O
finds	O	O	O	O	O	O
the	O	O	O	O	O	O
following	O	O	O	O	O	O
computer	O	O	O	O	O	O
names	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
are	O	O	O	O	O	O
used	O	O	O	O	O	O
by	O	O	O	O	O	O
AV	O	O	O	O	O	O
emulators	O	O	O	O	O	O
:	O	O	O	O	O	O
  	O	O	O	O	O	O

“	O	O	O	O	O	O
NfZtFbPfH	O	O	O	O	O	O
”	O	O	O	O	O	O
-	O	O	O	O	O	O
Kaspersky	B-ORG	O	O	O	O	B-ORG

“	O	O	O	O	O	O
tz	O	O	O	O	O	O
”	O	O	O	O	O	O
-	O	O	O	O	O	O
Bitdefender	B-ORG	O	O	O	O	B-ORG

“	O	O	O	O	O	O
ELICZ	O	O	O	O	O	O
”	O	O	O	O	O	O
-	O	O	O	O	O	O
AVG	O	O	O	O	O	O

“	O	O	O	O	O	O
MAIN	O	O	O	O	O	O
"	O	O	O	O	O	O
-	O	O	O	O	O	O
VBA	O	O	O	O	O	O

“	O	O	O	O	O	O
DESKTOP-QO5QU33	O	O	O	O	O	O
”	O	O	O	O	O	O
-	O	O	O	O	O	O
Assuming	O	O	O	O	O	O
this	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
attacker	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
machine	O	O	O	O	O	O
name	O	O	O	O	O	O

It	O	O	O	O	O	O
checks	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
sleep	O	O	O	O	O	O
API	O	O	O	O	O	O
patch	O	O	O	O	O	O
with	O	O	O	O	O	O
'	O	O	O	O	O	O
GetTickCount	O	O	O	O	O	O
'	O	O	O	O	O	O
to	O	O	O	O	O	O
detect	O	O	O	O	O	O
the	O	O	O	O	O	O
sandbox	O	O	O	O	O	O
emulation	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
also	O	O	O	O	O	O
checks	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
domain	O	O	O	O	O	O
‘	O	O	O	O	O	O
OJtmGmql.OJtmGmql	O	O	O	O	O	O
’	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
will	O	O	O	O	O	O
exit	O	O	O	O	O	O
if	O	O	O	O	O	O
the	O	O	O	O	O	O
domain	O	O	O	O	O	O
is	O	O	O	O	O	O
alive	O	O	O	O	O	O
.	O	O	O	O	O	O

These	O	O	O	O	O	O
are	O	O	O	O	O	O
random	O	O	O	O	O	O
strings	O	O	O	O	O	O
and	O	O	O	O	O	O
found	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
different	O	O	O	O	O	O
in	O	O	O	O	O	O
every	O	O	O	O	O	O
other	O	O	O	O	O	O
wrapper	O	O	O	O	O	O
.	O	O	O	O	O	O

If	O	O	O	O	O	O
it	O	O	O	O	O	O
passes	O	O	O	O	O	O
all	O	O	O	O	O	O
the	O	O	O	O	O	O
above	O	O	O	O	O	O
checks	O	O	O	O	O	O
then	O	O	O	O	O	O
it	O	O	O	O	O	O
injects	O	O	O	O	O	O
the	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
'	O	O	O	O	O	O
RC4	O	O	O	O	O	O
'	O	O	O	O	O	O
algorithm	O	O	O	O	O	O
based	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
architecture	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
specified	O	O	O	O	O	O
running	O	O	O	O	O	O
process	O	O	O	O	O	O
or	O	O	O	O	O	O
the	O	O	O	O	O	O
current	O	O	O	O	O	O
process	O	O	O	O	O	O
memory	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
RC4	O	O	O	O	O	O
algorithm	O	O	O	O	O	O
Shellcode	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
rc4	O	O	O	O	O	O
_	O	O	O	O	O	O
shell.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
5	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
RC4	O	O	O	O	O	O
algorithm	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
RC4	O	O	O	O	O	O
key	O	O	O	O	O	O
is	O	O	O	O	O	O
XOR-encrypted	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
which	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
function	O	O	O	O	O	O
calling	O	O	O	O	O	O
along	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
data	O	O	O	O	O	O
and	O	O	O	O	O	O
process	O	O	O	O	O	O
path	O	O	O	O	O	O
for	O	O	O	O	O	O
injection	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Encrypted	O	O	O	O	O	O
RC4	O	O	O	O	O	O
key	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_rc4	O	O	O	O	O	O
_	O	O	O	O	O	O
key.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
6	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
The	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
RC4	O	O	O	O	O	O
key	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

This	O	O	O	O	O	O
RC4	O	O	O	O	O	O
key	O	O	O	O	O	O
is	O	O	O	O	O	O
found	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
different	O	O	O	O	O	O
in	O	O	O	O	O	O
every	O	O	O	O	O	O
case	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
reads	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O
(	O	O	O	O	O	O
bzYfp.com	O	O	O	O	O	O
)	O	O	O	O	O	O
and	O	O	O	O	O	O
decrypts	O	O	O	O	O	O
it	O	O	O	O	O	O
using	O	O	O	O	O	O
the	O	O	O	O	O	O
RC4	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
key	O	O	O	O	O	O
“	O	O	O	O	O	O
537180	O	O	O	O	O	O
”	O	O	O	O	O	O
(	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
case	O	O	O	O	O	O
)	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
RC4	O	O	O	O	O	O
algorithm	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
first	O	O	O	O	O	O
shell	O	O	O	O	O	O
code	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
rc4	O	O	O	O	O	O
_	O	O	O	O	O	O
source.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
7	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
RC4	O	O	O	O	O	O
algorithm	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
first	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

After	O	O	O	O	O	O
that	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
injects	O	O	O	O	O	O
another	O	O	O	O	O	O
shellcode	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
memory	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
creates	O	O	O	O	O	O
a	O	O	O	O	O	O
mutex	O	O	O	O	O	O
first	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
name	O	O	O	O	O	O
of	O	O	O	O	O	O
‘	O	O	O	O	O	O
JFTZRATSJPATTZLFCUTTH	O	O	O	O	O	O
’	O	O	O	O	O	O
,	O	O	O	O	O	O
 	O	O	O	O	O	O
then	O	O	O	O	O	O
it	O	O	O	O	O	O
takes	O	O	O	O	O	O
the	O	O	O	O	O	O
decrypted	O	O	O	O	O	O
PE	O	O	O	O	O	O
file	O	O	O	O	O	O
,	O	O	O	O	O	O
injects	O	O	O	O	O	O
it	O	O	O	O	O	O
into	O	O	O	O	O	O
the	O	O	O	O	O	O
process	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
executes	O	O	O	O	O	O
it	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
decrypted	O	O	O	O	O	O
and	O	O	O	O	O	O
executed	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
memory	O	O	O	O	O	O
only	O	O	O	O	O	O
so	O	O	O	O	O	O
it	O	O	O	O	O	O
will	O	O	O	O	O	O
not	O	O	O	O	O	O
get	O	O	O	O	O	O
captured	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
antivirus	O	O	O	O	O	O
if	O	O	O	O	O	O
it	O	O	O	O	O	O
 	O	O	O	O	O	O
has	O	O	O	O	O	O
 	O	O	O	O	O	O
static	O	O	O	O	O	O
detection	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
have	O	O	O	O	O	O
written	O	O	O	O	O	O
a	O	O	O	O	O	O
python	O	O	O	O	O	O
script	O	O	O	O	O	O
to	O	O	O	O	O	O
decrypt	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
 	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
Appendix	O	O	O	O	O	O
I	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
payloads	O	O	O	O	O	O
dropped	O	O	O	O	O	O
by	O	O	O	O	O	O
this	O	O	O	O	O	O
wrapper	O	O	O	O	O	O
are	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
or	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
from	O	O	O	O	O	O
this	O	O	O	O	O	O
campaign	O	O	O	O	O	O
looks	O	O	O	O	O	O
like	O	O	O	O	O	O
a	O	O	O	O	O	O
new	O	O	O	O	O	O
variant	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
not	O	O	O	O	O	O
seen	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
past	O	O	O	O	O	O
.	O	O	O	O	O	O

CyberGate	O	O	O	O	O	O
allows	O	O	O	O	O	O
an	O	O	O	O	O	O
attacker	O	O	O	O	O	O
to	O	O	O	O	O	O
browse	O	O	O	O	O	O
and	O	O	O	O	O	O
manipulate	O	O	O	O	O	O
files	O	O	O	O	O	O
,	O	O	O	O	O	O
devices	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
settings	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
victim's	O	O	O	O	O	O
machine	O	O	O	O	O	O
as	O	O	O	O	O	O
well	O	O	O	O	O	O
as	O	O	O	O	O	O
download	O	O	O	O	O	O
and	O	O	O	O	O	O
execute	O	O	O	O	O	O
additional	O	O	O	O	O	O
malware	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
also	O	O	O	O	O	O
has	O	O	O	O	O	O
a	O	O	O	O	O	O
wide	O	O	O	O	O	O
range	O	O	O	O	O	O
of	O	O	O	O	O	O
information	O	O	O	O	O	O
stealing	O	O	O	O	O	O
 	O	O	O	O	O	O
abilities	O	O	O	O	O	O
,	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
keyloggers	O	O	O	O	O	O
,	O	O	O	O	O	O
screen	O	O	O	O	O	O
capture	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
remote	O	O	O	O	O	O
enabling	O	O	O	O	O	O
of	O	O	O	O	O	O
webcams	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
capabilities	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
that	O	O	O	O	O	O
we	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
variant	O	O	O	O	O	O
include	O	O	O	O	O	O
:	O	O	O	O	O	O

*	O	O	O	O	O	O
Collecting	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
system	O	O	O	O	O	O
info	O	O	O	O	O	O

*	O	O	O	O	O	O
Creating	O	O	O	O	O	O
 	O	O	O	O	O	O
a	O	O	O	O	O	O
specified	O	O	O	O	O	O
directory	O	O	O	O	O	O

*	O	O	O	O	O	O
Downloading	O	O	O	O	O	O
 	O	O	O	O	O	O
and	O	O	O	O	O	O
executes	O	O	O	O	O	O
additional	O	O	O	O	O	O
files	O	O	O	O	O	O

*	O	O	O	O	O	O
Getting	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
content	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
specified	O	O	O	O	O	O
file	O	O	O	O	O	O

*	O	O	O	O	O	O
Stealing	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
browser	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
credentials	O	O	O	O	O	O

*	O	O	O	O	O	O
Capturing	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
screen	O	O	O	O	O	O

*	O	O	O	O	O	O
Running	O	O	O	O	O	O
a	O	O	O	O	O	O
 	O	O	O	O	O	O
keylogger	O	O	O	O	O	O

The	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
address	O	O	O	O	O	O
and	O	O	O	O	O	O
port	O	O	O	O	O	O
information	O	O	O	O	O	O
 	O	O	O	O	O	O
are	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
and	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

Encryption	O	O	O	O	O	O
is	O	O	O	O	O	O
simple	O	O	O	O	O	O
XOR	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
key	O	O	O	O	O	O
“	O	O	O	O	O	O
2qYNYM2Z74XL	O	O	O	O	O	O
”	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
XOR	O	O	O	O	O	O
decryption	O	O	O	O	O	O
of	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
IP	O	O	O	O	O	O
address	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_xor_dec.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
8	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
XOR	O	O	O	O	O	O
decryption	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
IP	O	O	O	O	O	O
address	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
unique	O	O	O	O	O	O
bot	O	O	O	O	O	O
ID	O	O	O	O	O	O
is	O	O	O	O	O	O
created	O	O	O	O	O	O
by	O	O	O	O	O	O
adding	O	O	O	O	O	O
the	O	O	O	O	O	O
username	O	O	O	O	O	O
,	O	O	O	O	O	O
computer	O	O	O	O	O	O
name	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
serial	O	O	O	O	O	O
number	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
victim	O	O	O	O	O	O
machine	O	O	O	O	O	O
and	O	O	O	O	O	O
calculating	O	O	O	O	O	O
the	O	O	O	O	O	O
MD5	O	O	O	O	O	O
hash	O	O	O	O	O	O
.	O	O	O	O	O	O

Bot	O	O	O	O	O	O
ID	O	O	O	O	O	O
=	O	O	O	O	O	O
MD5	O	O	O	O	O	O
(	O	O	O	O	O	O
UserName	O	O	O	O	O	O
+	O	O	O	O	O	O
ComputerName	O	O	O	O	O	O
+	O	O	O	O	O	O
SerialNumber	O	O	O	O	O	O
)	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Bot	O	O	O	O	O	O
ID	O	O	O	O	O	O
creation	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_botid.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
9	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
Bot	O	O	O	O	O	O
ID	O	O	O	O	O	O
creation	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Network	O	O	O	O	O	O
traffic	O	O	O	O	O	O
analysis	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

This	O	O	O	O	O	O
variant	O	O	O	O	O	O
of	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
has	O	O	O	O	O	O
a	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
and	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
IP	O	O	O	O	O	O
address	O	O	O	O	O	O
and	O	O	O	O	O	O
it	O	O	O	O	O	O
uses	O	O	O	O	O	O
a	O	O	O	O	O	O
3970	O	O	O	O	O	O
port	O	O	O	O	O	O
to	O	O	O	O	O	O
communicate	O	O	O	O	O	O
on	O	O	O	O	O	O
the	O	O	O	O	O	O
TCP	O	O	O	O	O	O
protocol	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
complete	O	O	O	O	O	O
traffic	O	O	O	O	O	O
is	O	O	O	O	O	O
compressed	O	O	O	O	O	O
with	O	O	O	O	O	O
zlib	O	O	O	O	O	O
compression	O	O	O	O	O	O
and	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
with	O	O	O	O	O	O
RC4	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
key	O	O	O	O	O	O
present	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
Network	O	O	O	O	O	O
traffic	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_network.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
10	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
network	O	O	O	O	O	O
traffic	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Packet	O	O	O	O	O	O
Structure	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_packet_structure.png	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
11	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
Packet	O	O	O	O	O	O
structure	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

Client	O	O	O	O	O	O
and	O	O	O	O	O	O
server	O	O	O	O	O	O
packets	O	O	O	O	O	O
are	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
or	O	O	O	O	O	O
decrypted	O	O	O	O	O	O
by	O	O	O	O	O	O
RC4	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
same	O	O	O	O	O	O
hardcoded	O	O	O	O	O	O
key	O	O	O	O	O	O
“	O	O	O	O	O	O
draZwyK8wNHF	O	O	O	O	O	O
”	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
is	O	O	O	O	O	O
present	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
binary	O	O	O	O	O	O
.	O	O	O	O	O	O

After	O	O	O	O	O	O
the	O	O	O	O	O	O
decryption	O	O	O	O	O	O
of	O	O	O	O	O	O
server	O	O	O	O	O	O
packets	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
starts	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
marker	O	O	O	O	O	O
of	O	O	O	O	O	O
14	O	O	O	O	O	O
bytes	O	O	O	O	O	O
“	O	O	O	O	O	O
@	O	O	O	O	O	O
@	O	O	O	O	O	O
[	O	O	O	O	O	O
[	O	O	O	O	O	O
email	O	O	O	O	O	O
 	O	O	O	O	O	O
protected	O	O	O	O	O	O
]	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
l	O	O	O	O	O	O
/	O	O	O	O	O	O
email-protection	O	O	O	O	O	O
)	O	O	O	O	O	O
@	O	O	O	O	O	O
”	O	O	O	O	O	O
and	O	O	O	O	O	O
followed	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
zlib	O	O	O	O	O	O
compressed	O	O	O	O	O	O
data	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
have	O	O	O	O	O	O
seen	O	O	O	O	O	O
this	O	O	O	O	O	O
marker	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
previous	O	O	O	O	O	O
version	O	O	O	O	O	O
of	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Decrypted	O	O	O	O	O	O
Packet	O	O	O	O	O	O
Data	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
rc4	O	O	O	O	O	O
_	O	O	O	O	O	O
decrypted_compresssed.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

Figure	O	O	O	O	O	O
12	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
The	O	O	O	O	O	O
decrypted	O	O	O	O	O	O
packet	O	O	O	O	O	O
data	O	O	O	O	O	O
.	O	O	O	O	O	O

After	O	O	O	O	O	O
decompression	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
starts	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
command	O	O	O	O	O	O
followed	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
parameters	O	O	O	O	O	O
and	O	O	O	O	O	O
separated	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
marker	O	O	O	O	O	O
“	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
$	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
”	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
Structure	O	O	O	O	O	O
:	O	O	O	O	O	O
<	O	O	O	O	O	O
Command	O	O	O	O	O	O
>	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
$	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
<	O	O	O	O	O	O
Parameters	O	O	O	O	O	O
>	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
$	O	O	O	O	O	O
#	O	O	O	O	O	O
#	O	O	O	O	O	O
*	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Decrypted	O	O	O	O	O	O
communication	O	O	O	O	O	O
between	O	O	O	O	O	O
client	O	O	O	O	O	O
and	O	O	O	O	O	O
C2	O	O	O	O	O	O
server	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_decrypted_comm.png	O	O	O	O	O	O
)	O	O	O	O	O	O

Figure	O	O	O	O	O	O
13	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
decrypted	O	O	O	O	O	O
communication	O	O	O	O	O	O
between	O	O	O	O	O	O
the	O	O	O	O	O	O
client	O	O	O	O	O	O
and	O	O	O	O	O	O
the	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O

In	O	O	O	O	O	O
the	O	O	O	O	O	O
first	O	O	O	O	O	O
request	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
command	O	O	O	O	O	O
will	O	O	O	O	O	O
send	O	O	O	O	O	O
the	O	O	O	O	O	O
calculated	O	O	O	O	O	O
unique	O	O	O	O	O	O
bot	O	O	O	O	O	O
ID	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
second	O	O	O	O	O	O
command	O	O	O	O	O	O
will	O	O	O	O	O	O
search	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
stored	O	O	O	O	O	O
credentials	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
Chrome	O	O	O	O	O	O
and	O	O	O	O	O	O
Firefox	O	O	O	O	O	O
browser	O	O	O	O	O	O
profiles	O	O	O	O	O	O
.	O	O	O	O	O	O

If	O	O	O	O	O	O
it	O	O	O	O	O	O
matches	O	O	O	O	O	O
the	O	O	O	O	O	O
parameters	O	O	O	O	O	O
,	O	O	O	O	O	O
then	O	O	O	O	O	O
it	O	O	O	O	O	O
sends	O	O	O	O	O	O
the	O	O	O	O	O	O
credentials	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
along	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
machine	O	O	O	O	O	O
info	O	O	O	O	O	O
,	O	O	O	O	O	O
including	O	O	O	O	O	O
 	O	O	O	O	O	O
socket	O	O	O	O	O	O
name	O	O	O	O	O	O
,	O	O	O	O	O	O
user	O	O	O	O	O	O
name	O	O	O	O	O	O
,	O	O	O	O	O	O
computer	O	O	O	O	O	O
name	O	O	O	O	O	O
,	O	O	O	O	O	O
product	O	O	O	O	O	O
name	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
bot	O	O	O	O	O	O
ID	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Sending	O	O	O	O	O	O
credentials	O	O	O	O	O	O
and	O	O	O	O	O	O
machine	O	O	O	O	O	O
info	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_machineinfo.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

Figure	O	O	O	O	O	O
14	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
credentials	O	O	O	O	O	O
and	O	O	O	O	O	O
machine	O	O	O	O	O	O
info	O	O	O	O	O	O
that	O	O	O	O	O	O
is	O	O	O	O	O	O
sent	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
command	O	O	O	O	O	O
“	O	O	O	O	O	O
Ky8pr22KrbW3	O	O	O	O	O	O
”	O	O	O	O	O	O
or	O	O	O	O	O	O
“	O	O	O	O	O	O
neAWM9TC4tsk	O	O	O	O	O	O
”	O	O	O	O	O	O
creates	O	O	O	O	O	O
the	O	O	O	O	O	O
specified	O	O	O	O	O	O
directory	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
%	O	O	O	O	O	O
appdata	O	O	O	O	O	O
%	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
then	O	O	O	O	O	O
downloads	O	O	O	O	O	O
and	O	O	O	O	O	O
stores	O	O	O	O	O	O
the	O	O	O	O	O	O
specified	O	O	O	O	O	O
file	O	O	O	O	O	O
inside	O	O	O	O	O	O
and	O	O	O	O	O	O
executes	O	O	O	O	O	O
it	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Downloads	O	O	O	O	O	O
and	O	O	O	O	O	O
executes	O	O	O	O	O	O
additional	O	O	O	O	O	O
malware	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_executefile.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

Figure	O	O	O	O	O	O
15	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
command	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
 	O	O	O	O	O	O
and	O	O	O	O	O	O
execute	O	O	O	O	O	O
 	O	O	O	O	O	O
additional	O	O	O	O	O	O
malware	O	O	O	O	O	O
.	O	O	O	O	O	O

We	O	O	O	O	O	O
have	O	O	O	O	O	O
found	O	O	O	O	O	O
the	O	O	O	O	O	O
following	O	O	O	O	O	O
commands	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
variant	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
.	O	O	O	O	O	O

|	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Commands	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
|	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
Descriptions	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
-	O	O	O	O	O	O
-	O	O	O	O	O	O
-	O	O	O	O	O	O
|	O	O	O	O	O	O
-	O	O	O	O	O	O
-	O	O	O	O	O	O
-	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
4hybWKLmEShM	O	O	O	O	O	O
|	O	O	O	O	O	O
Send	O	O	O	O	O	O
the	O	O	O	O	O	O
unique	O	O	O	O	O	O
bot	O	O	O	O	O	O
ID	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
ECDnG66CYsZc	O	O	O	O	O	O
|	O	O	O	O	O	O
Steal	O	O	O	O	O	O
the	O	O	O	O	O	O
browser	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
credentials	O	O	O	O	O	O
and	O	O	O	O	O	O
machine	O	O	O	O	O	O
info	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
dYh3GKy2DK	O	O	O	O	O	O
|	O	O	O	O	O	O
Store	O	O	O	O	O	O
data	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
registry	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
Ky8pr22KrbW3	O	O	O	O	O	O
|	O	O	O	O	O	O
Download	O	O	O	O	O	O
and	O	O	O	O	O	O
execute	O	O	O	O	O	O
additional	O	O	O	O	O	O
malware	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
neAWM9TC4tsk	O	O	O	O	O	O
|	O	O	O	O	O	O
Download	O	O	O	O	O	O
and	O	O	O	O	O	O
execute	O	O	O	O	O	O
additional	O	O	O	O	O	O
malware	O	O	O	O	O	O
and	O	O	O	O	O	O
exit	O	O	O	O	O	O
itself	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
EffNaMNRW43T	O	O	O	O	O	O
|	O	O	O	O	O	O
Capture	O	O	O	O	O	O
the	O	O	O	O	O	O
screen	O	O	O	O	O	O
|	O	O	O	O	O	O

|	O	O	O	O	O	O
5Qvape9Wv6eA	O	O	O	O	O	O
|	O	O	O	O	O	O
Start	O	O	O	O	O	O
the	O	O	O	O	O	O
keylogger	O	O	O	O	O	O
|	O	O	O	O	O	O

We	O	O	O	O	O	O
have	O	O	O	O	O	O
written	O	O	O	O	O	O
a	O	O	O	O	O	O
python	O	O	O	O	O	O
script	O	O	O	O	O	O
to	O	O	O	O	O	O
decrypt	O	O	O	O	O	O
the	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
and	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
traffic	O	O	O	O	O	O
.	O	O	O	O	O	O

It	O	O	O	O	O	O
can	O	O	O	O	O	O
be	O	O	O	O	O	O
found	O	O	O	O	O	O
in	O	O	O	O	O	O
Appendix	O	O	O	O	O	O
II	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
final	O	O	O	O	O	O
payload	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
.	O	O	O	O	O	O
NET	O	O	O	O	O	O
binary	O	O	O	O	O	O
file	O	O	O	O	O	O
of	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
stealer	O	O	O	O	O	O
is	O	O	O	O	O	O
available	O	O	O	O	O	O
for	O	O	O	O	O	O
sale	O	O	O	O	O	O
on	O	O	O	O	O	O
Russian	B-LOC	O	O	O	O	B-LOC
forums	O	O	O	O	O	O
and	O	O	O	O	O	O
was	O	O	O	O	O	O
seen	O	O	O	O	O	O
before	O	O	O	O	O	O
in	O	O	O	O	O	O
a	O	O	O	O	O	O
COVID-themed	O	O	O	O	O	O
email	O	O	O	O	O	O
campaign	O	O	O	O	O	O
.	O	O	O	O	O	O

Proofpoint	O	O	O	O	O	O
published	O	O	O	O	O	O
a	O	O	O	O	O	O
[	O	O	O	O	O	O
blog	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
www.proofpoint.com	O	O	O	O	O	O
/	O	O	O	O	O	O
us	O	O	O	O	O	O
/	O	O	O	O	O	O
threat-insight	O	O	O	O	O	O
/	O	O	O	O	O	O
post	O	O	O	O	O	O
/	O	O	O	O	O	O
new-redline-stealer-distributed-using-coronavirus-themed-email-campaign	O	O	O	O	O	O
)	O	O	O	O	O	O
about	O	O	O	O	O	O
that	O	O	O	O	O	O
campaign	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
capabilities	O	O	O	O	O	O
of	O	O	O	O	O	O
this	O	O	O	O	O	O
stealer	O	O	O	O	O	O
include	O	O	O	O	O	O
:	O	O	O	O	O	O

*	O	O	O	O	O	O
Collecting	O	O	O	O	O	O
 	O	O	O	O	O	O
information	O	O	O	O	O	O
about	O	O	O	O	O	O
the	O	O	O	O	O	O
victim	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
system	O	O	O	O	O	O

*	O	O	O	O	O	O
Collecting	O	O	O	O	O	O
 	O	O	O	O	O	O
credentials	O	O	O	O	O	O
,	O	O	O	O	O	O
cookies	O	O	O	O	O	O
,	O	O	O	O	O	O
credit	O	O	O	O	O	O
cards	O	O	O	O	O	O
from	O	O	O	O	O	O
Chromium	O	O	O	O	O	O
-	O	O	O	O	O	O
and	O	O	O	O	O	O
Gecko-based	O	O	O	O	O	O
browsers	O	O	O	O	O	O

*	O	O	O	O	O	O
Collecting	O	O	O	O	O	O
 	O	O	O	O	O	O
data	O	O	O	O	O	O
from	O	O	O	O	O	O
FTP	O	O	O	O	O	O
clients	O	O	O	O	O	O
(	O	O	O	O	O	O
FileZilla	O	O	O	O	O	O
,	O	O	O	O	O	O
WinSCP	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Collecting	O	O	O	O	O	O
 	O	O	O	O	O	O
data	O	O	O	O	O	O
from	O	O	O	O	O	O
IM	O	O	O	O	O	O
clients	O	O	O	O	O	O
(	O	O	O	O	O	O
Pidgin	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Collecting	O	O	O	O	O	O
 	O	O	O	O	O	O
cryptocurrency	O	O	O	O	O	O
wallets	O	O	O	O	O	O

*	O	O	O	O	O	O
Downloading	O	O	O	O	O	O
 	O	O	O	O	O	O
and	O	O	O	O	O	O
executing	O	O	O	O	O	O
 	O	O	O	O	O	O
the	O	O	O	O	O	O
specified	O	O	O	O	O	O
file	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
classes	O	O	O	O	O	O
and	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
domain	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
redline_dnspy.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
16	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
classes	O	O	O	O	O	O
and	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
domain	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
uses	O	O	O	O	O	O
SOAP	O	O	O	O	O	O
over	O	O	O	O	O	O
HTTP	O	O	O	O	O	O
protocol	O	O	O	O	O	O
for	O	O	O	O	O	O
its	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
communication	O	O	O	O	O	O
.	O	O	O	O	O	O

After	O	O	O	O	O	O
getting	O	O	O	O	O	O
connected	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
server	O	O	O	O	O	O
,	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
fetches	O	O	O	O	O	O
the	O	O	O	O	O	O
client	O	O	O	O	O	O
configuration	O	O	O	O	O	O
settings	O	O	O	O	O	O
from	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Fetching	O	O	O	O	O	O
client	O	O	O	O	O	O
configuration	O	O	O	O	O	O
settings	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
redline_getsettings.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
17	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
Fetching	O	O	O	O	O	O
the	O	O	O	O	O	O
client	O	O	O	O	O	O
configuration	O	O	O	O	O	O
settings	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

This	O	O	O	O	O	O
client	O	O	O	O	O	O
configuration	O	O	O	O	O	O
settings	O	O	O	O	O	O
include	O	O	O	O	O	O
GrabBrowsers	O	O	O	O	O	O
,	O	O	O	O	O	O
GrabFTP	O	O	O	O	O	O
,	O	O	O	O	O	O
GrabFiles	O	O	O	O	O	O
,	O	O	O	O	O	O
GrabImClients	O	O	O	O	O	O
,	O	O	O	O	O	O
GrabPaths	O	O	O	O	O	O
,	O	O	O	O	O	O
GrabUserAgent	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
GrabWallets	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
client	O	O	O	O	O	O
configuration	O	O	O	O	O	O
settings	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
redline_clientset.PNG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
18	O	O	O	O	O	O
:	O	O	O	O	O	O
The	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
client	O	O	O	O	O	O
configuration	O	O	O	O	O	O
settings	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

After	O	O	O	O	O	O
collecting	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
as	O	O	O	O	O	O
per	O	O	O	O	O	O
the	O	O	O	O	O	O
configuration	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
sends	O	O	O	O	O	O
all	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
back	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Sending	O	O	O	O	O	O
stolen	O	O	O	O	O	O
data	O	O	O	O	O	O
to	O	O	O	O	O	O
server	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
redline_sendclientinfo.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
19	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
Sending	O	O	O	O	O	O
the	O	O	O	O	O	O
stolen	O	O	O	O	O	O
data	O	O	O	O	O	O
to	O	O	O	O	O	O
server	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

After	O	O	O	O	O	O
that	O	O	O	O	O	O
,	O	O	O	O	O	O
it	O	O	O	O	O	O
sends	O	O	O	O	O	O
the	O	O	O	O	O	O
request	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
to	O	O	O	O	O	O
get	O	O	O	O	O	O
the	O	O	O	O	O	O
task	O	O	O	O	O	O
to	O	O	O	O	O	O
download	O	O	O	O	O	O
a	O	O	O	O	O	O
file	O	O	O	O	O	O
,	O	O	O	O	O	O
execute	O	O	O	O	O	O
a	O	O	O	O	O	O
file	O	O	O	O	O	O
,	O	O	O	O	O	O
access	O	O	O	O	O	O
a	O	O	O	O	O	O
link	O	O	O	O	O	O
,	O	O	O	O	O	O
or	O	O	O	O	O	O
inject	O	O	O	O	O	O
a	O	O	O	O	O	O
file	O	O	O	O	O	O
to	O	O	O	O	O	O
a	O	O	O	O	O	O
process	O	O	O	O	O	O
along	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
victim	O	O	O	O	O	O
’	O	O	O	O	O	O
s	O	O	O	O	O	O
machine	O	O	O	O	O	O
info	O	O	O	O	O	O
,	O	O	O	O	O	O
such	O	O	O	O	O	O
as	O	O	O	O	O	O
 	O	O	O	O	O	O
IP	O	O	O	O	O	O
,	O	O	O	O	O	O
location	O	O	O	O	O	O
,	O	O	O	O	O	O
OS	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
more	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
Sending	O	O	O	O	O	O
request	O	O	O	O	O	O
to	O	O	O	O	O	O
server	O	O	O	O	O	O
for	O	O	O	O	O	O
getting	O	O	O	O	O	O
a	O	O	O	O	O	O
task	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
redline_gettasks.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
20	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
Sending	O	O	O	O	O	O
the	O	O	O	O	O	O
request	O	O	O	O	O	O
to	O	O	O	O	O	O
the	O	O	O	O	O	O
server	O	O	O	O	O	O
to	O	O	O	O	O	O
get	O	O	O	O	O	O
a	O	O	O	O	O	O
task	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Coverage	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

The	O	O	O	O	O	O
observed	O	O	O	O	O	O
indicators	O	O	O	O	O	O
in	O	O	O	O	O	O
this	O	O	O	O	O	O
attack	O	O	O	O	O	O
were	O	O	O	O	O	O
successfully	O	O	O	O	O	O
blocked	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
.	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
The	O	O	O	O	O	O
Zscaler	O	O	O	O	O	O
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
report	O	O	O	O	O	O
for	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
cybergate_sandbox.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
21	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
report	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

!	O	O	O	O	O	O
[	O	O	O	O	O	O
The	O	O	O	O	O	O
Zscaler	O	O	O	O	O	O
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
report	O	O	O	O	O	O
for	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
Stealer	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
/	O	O	O	O	O	O
cdn-cgi	O	O	O	O	O	O
/	O	O	O	O	O	O
image	O	O	O	O	O	O
/	O	O	O	O	O	O
format	O	O	O	O	O	O
=	O	O	O	O	O	O
auto	O	O	O	O	O	O
/	O	O	O	O	O	O
sites	O	O	O	O	O	O
/	O	O	O	O	O	O
default	O	O	O	O	O	O
/	O	O	O	O	O	O
files	O	O	O	O	O	O
/	O	O	O	O	O	O
images	O	O	O	O	O	O
/	O	O	O	O	O	O
blogs	O	O	O	O	O	O
/	O	O	O	O	O	O
sadique	O	O	O	O	O	O
/	O	O	O	O	O	O
autoit_malware	O	O	O	O	O	O
/	O	O	O	O	O	O
redline_sandbox.JPG	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
Figure	O	O	O	O	O	O
22	O	O	O	O	O	O
:	O	O	O	O	O	O
 	O	O	O	O	O	O
The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
Cloud	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
report	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
stealer	O	O	O	O	O	O
.	O	O	O	O	O	O
*	O	O	O	O	O	O

In	O	O	O	O	O	O
addition	O	O	O	O	O	O
to	O	O	O	O	O	O
sandbox	O	O	O	O	O	O
detections	O	O	O	O	O	O
,	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
’	O	O	O	O	O	O
s	O	O	O	O	O	O
multilayered	O	O	O	O	O	O
cloud	O	O	O	O	O	O
security	O	O	O	O	O	O
platform	O	O	O	O	O	O
detects	O	O	O	O	O	O
indicators	O	O	O	O	O	O
at	O	O	O	O	O	O
various	O	O	O	O	O	O
levels	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
following	O	O	O	O	O	O
is	O	O	O	O	O	O
the	O	O	O	O	O	O
advanced	O	O	O	O	O	O
threat	O	O	O	O	O	O
protection	O	O	O	O	O	O
signatures	O	O	O	O	O	O
released	O	O	O	O	O	O
for	O	O	O	O	O	O
detecting	O	O	O	O	O	O
the	O	O	O	O	O	O
malware	O	O	O	O	O	O
:	O	O	O	O	O	O

[	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.CyberGate	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
threatlibrary.zscaler.com	O	O	O	O	O	O
/	O	O	O	O	O	O
?	O	O	O	O	O	O
keyword	O	O	O	O	O	O
=	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.CyberGate	O	O	O	O	O	O
)	O	O	O	O	O	O

[	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.RedLine	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
threatlibrary.zscaler.com	O	O	O	O	O	O
/	O	O	O	O	O	O
?	O	O	O	O	O	O
keyword	O	O	O	O	O	O
=	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.Redline	O	O	O	O	O	O
)	O	O	O	O	O	O

[	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.AutoIT	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
threatlibrary.zscaler.com	O	O	O	O	O	O
/	O	O	O	O	O	O
?	O	O	O	O	O	O
keyword	O	O	O	O	O	O
=	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
PWS.AutoIT	O	O	O	O	O	O
)	O	O	O	O	O	O

And	O	O	O	O	O	O
the	O	O	O	O	O	O
following	O	O	O	O	O	O
are	O	O	O	O	O	O
the	O	O	O	O	O	O
Cloud	O	O	O	O	O	O
IPS	O	O	O	O	O	O
(	O	O	O	O	O	O
non-web	O	O	O	O	O	O
)	O	O	O	O	O	O
signatures	O	O	O	O	O	O
that	O	O	O	O	O	O
enable	O	O	O	O	O	O
detection	O	O	O	O	O	O
of	O	O	O	O	O	O
the	O	O	O	O	O	O
CyberGate	O	O	O	O	O	O
RAT	O	O	O	O	O	O
:	O	O	O	O	O	O

[	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.CyberGate	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
threatlibrary.zscaler.com	O	O	O	O	O	O
/	O	O	O	O	O	O
?	O	O	O	O	O	O
keyword	O	O	O	O	O	O
=	O	O	O	O	O	O
Win32	O	O	O	O	O	O
.	O	O	O	O	O	O
Backdoor.CyberGate	O	O	O	O	O	O
)	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Conclusion	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

We	O	O	O	O	O	O
are	O	O	O	O	O	O
observing	O	O	O	O	O	O
an	O	O	O	O	O	O
 	O	O	O	O	O	O
increase	O	O	O	O	O	O
in	O	O	O	O	O	O
the	O	O	O	O	O	O
usage	O	O	O	O	O	O
of	O	O	O	O	O	O
AutoIt	O	O	O	O	O	O
script	O	O	O	O	O	O
as	O	O	O	O	O	O
a	O	O	O	O	O	O
wrapper	O	O	O	O	O	O
to	O	O	O	O	O	O
deliver	O	O	O	O	O	O
malware	O	O	O	O	O	O
by	O	O	O	O	O	O
threat	O	O	O	O	O	O
actors	O	O	O	O	O	O
.	O	O	O	O	O	O

This	O	O	O	O	O	O
 	O	O	O	O	O	O
trend	O	O	O	O	O	O
appears	O	O	O	O	O	O
to	O	O	O	O	O	O
be	O	O	O	O	O	O
getting	O	O	O	O	O	O
stronger	O	O	O	O	O	O
with	O	O	O	O	O	O
a	O	O	O	O	O	O
lot	O	O	O	O	O	O
of	O	O	O	O	O	O
obfuscation	O	O	O	O	O	O
,	O	O	O	O	O	O
anti-analysis	O	O	O	O	O	O
and	O	O	O	O	O	O
 	O	O	O	O	O	O
anti-sandbox	O	O	O	O	O	O
tricks	O	O	O	O	O	O
,	O	O	O	O	O	O
and	O	O	O	O	O	O
fileless	O	O	O	O	O	O
techniques	O	O	O	O	O	O
being	O	O	O	O	O	O
adopted	O	O	O	O	O	O
by	O	O	O	O	O	O
the	O	O	O	O	O	O
AutoIt-based	O	O	O	O	O	O
malware	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
final	O	O	O	O	O	O
payloads	O	O	O	O	O	O
we	O	O	O	O	O	O
have	O	O	O	O	O	O
seen	O	O	O	O	O	O
in	O	O	O	O	O	O
these	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
are	O	O	O	O	O	O
RATs	O	O	O	O	O	O
and	O	O	O	O	O	O
Infostealers	O	O	O	O	O	O
,	O	O	O	O	O	O
which	O	O	O	O	O	O
are	O	O	O	O	O	O
capable	O	O	O	O	O	O
of	O	O	O	O	O	O
stealing	O	O	O	O	O	O
sensitive	O	O	O	O	O	O
information	O	O	O	O	O	O
and	O	O	O	O	O	O
installing	O	O	O	O	O	O
additional	O	O	O	O	O	O
malware	O	O	O	O	O	O
.	O	O	O	O	O	O

Also	O	O	O	O	O	O
,	O	O	O	O	O	O
the	O	O	O	O	O	O
usage	O	O	O	O	O	O
of	O	O	O	O	O	O
a	O	O	O	O	O	O
custom	O	O	O	O	O	O
protocol	O	O	O	O	O	O
for	O	O	O	O	O	O
the	O	O	O	O	O	O
exfiltration	O	O	O	O	O	O
of	O	O	O	O	O	O
sensitive	O	O	O	O	O	O
information	O	O	O	O	O	O
poses	O	O	O	O	O	O
a	O	O	O	O	O	O
great	O	O	O	O	O	O
challenge	O	O	O	O	O	O
for	O	O	O	O	O	O
network	O	O	O	O	O	O
security	O	O	O	O	O	O
solutions	O	O	O	O	O	O
to	O	O	O	O	O	O
block	O	O	O	O	O	O
the	O	O	O	O	O	O
data	O	O	O	O	O	O
exfiltration	O	O	O	O	O	O
attempt	O	O	O	O	O	O
.	O	O	O	O	O	O

The	O	O	O	O	O	O
Zscaler	B-ORG	O	O	O	O	B-ORG
ThreatLabZ	O	O	O	O	O	O
team	O	O	O	O	O	O
will	O	O	O	O	O	O
continue	O	O	O	O	O	O
to	O	O	O	O	O	O
monitor	O	O	O	O	O	O
AutoIT-based	O	O	O	O	O	O
malware	O	O	O	O	O	O
campaigns	O	O	O	O	O	O
to	O	O	O	O	O	O
share	O	O	O	O	O	O
the	O	O	O	O	O	O
information	O	O	O	O	O	O
with	O	O	O	O	O	O
the	O	O	O	O	O	O
community	O	O	O	O	O	O
and	O	O	O	O	O	O
to	O	O	O	O	O	O
keep	O	O	O	O	O	O
our	O	O	O	O	O	O
customers	O	O	O	O	O	O
safe	O	O	O	O	O	O
.	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
[	O	O	O	O	O	O
MITRE	O	O	O	O	O	O
ATT	O	O	O	O	O	O
&	O	O	O	O	O	O
CK	O	O	O	O	O	O
]	O	O	O	O	O	O
(	O	O	O	O	O	O
https	O	O	O	O	O	O
:	O	O	O	O	O	O
/	O	O	O	O	O	O
/	O	O	O	O	O	O
attack.mitre.org	O	O	O	O	O	O
/	O	O	O	O	O	O
)	O	O	O	O	O	O
™	O	O	O	O	O	O
tactic	O	O	O	O	O	O
and	O	O	O	O	O	O
technique	O	O	O	O	O	O
mapping	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Tactic	O	O	O	O	O	O
                	O	O	O	O	O	O
Technique	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

T1059	O	O	O	O	O	O
                	O	O	O	O	O	O
Execution	O	O	O	O	O	O
through	O	O	O	O	O	O
Command-Line	O	O	O	O	O	O
interface	O	O	O	O	O	O

T1060	O	O	O	O	O	O
                	O	O	O	O	O	O
Persistence	O	O	O	O	O	O
in	O	O	O	O	O	O
startup	O	O	O	O	O	O
directory	O	O	O	O	O	O

T1055	O	O	O	O	O	O
                	O	O	O	O	O	O
Process	O	O	O	O	O	O
injection	O	O	O	O	O	O

T1140	O	O	O	O	O	O
                	O	O	O	O	O	O
Obfuscated	O	O	O	O	O	O
files	O	O	O	O	O	O

T1503	O	O	O	O	O	O
                	O	O	O	O	O	O
Steal	O	O	O	O	O	O
credentials	O	O	O	O	O	O
from	O	O	O	O	O	O
web	O	O	O	O	O	O
browsers	O	O	O	O	O	O

T1056	O	O	O	O	O	O
                	O	O	O	O	O	O
Keylogging	O	O	O	O	O	O

T1539	O	O	O	O	O	O
                	O	O	O	O	O	O
Steal	O	O	O	O	O	O
web	O	O	O	O	O	O
session	O	O	O	O	O	O
cookies	O	O	O	O	O	O

T1083	O	O	O	O	O	O
                	O	O	O	O	O	O
File	O	O	O	O	O	O
and	O	O	O	O	O	O
Directory	O	O	O	O	O	O
Discovery	O	O	O	O	O	O

T1057	O	O	O	O	O	O
                	O	O	O	O	O	O
Process	O	O	O	O	O	O
Discovery	O	O	O	O	O	O

T1012	O	O	O	O	O	O
                	O	O	O	O	O	O
Query	O	O	O	O	O	O
Registry	O	O	O	O	O	O

T1082	O	O	O	O	O	O
                	O	O	O	O	O	O
System	O	O	O	O	O	O
Information	O	O	O	O	O	O
Discovery	O	O	O	O	O	O

T1497	O	O	O	O	O	O
                	O	O	O	O	O	O
Sandbox	O	O	O	O	O	O
Evasion	O	O	O	O	O	O

T1005	O	O	O	O	O	O
                	O	O	O	O	O	O
Collect	O	O	O	O	O	O
Data	O	O	O	O	O	O
from	O	O	O	O	O	O
Local	O	O	O	O	O	O
System	O	O	O	O	O	O

T1113	O	O	O	O	O	O
                	O	O	O	O	O	O
Captures	O	O	O	O	O	O
Screen	O	O	O	O	O	O

T1094	O	O	O	O	O	O
                	O	O	O	O	O	O
Custom	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
Protocol	O	O	O	O	O	O

T1132	O	O	O	O	O	O
                	O	O	O	O	O	O
Base64	O	O	O	O	O	O
Data	O	O	O	O	O	O
Encoding	O	O	O	O	O	O

T1065	O	O	O	O	O	O
                	O	O	O	O	O	O
Uncommonly	O	O	O	O	O	O
Used	O	O	O	O	O	O
Port	O	O	O	O	O	O

T1002	O	O	O	O	O	O
                	O	O	O	O	O	O
Data	O	O	O	O	O	O
Compressed	O	O	O	O	O	O

T1020	O	O	O	O	O	O
                	O	O	O	O	O	O
Data	O	O	O	O	O	O
Exfiltration	O	O	O	O	O	O

T1022	O	O	O	O	O	O
                	O	O	O	O	O	O
Data	O	O	O	O	O	O
Encrypted	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
IOCs	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Cybergate	O	O	O	O	O	O
RAT	O	O	O	O	O	O

37.252.5	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
213	O	O	O	O	O	O
/	O	O	O	O	O	O
55	O	O	O	O	O	O
.	O	O	O	O	O	O
exe	O	O	O	O	O	O
(	O	O	O	O	O	O
Download	O	O	O	O	O	O
URL	O	O	O	O	O	O
)	O	O	O	O	O	O

37.252.5	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
213	O	O	O	O	O	O
[	O	O	O	O	O	O
:	O	O	O	O	O	O
]	O	O	O	O	O	O
3970	O	O	O	O	O	O
(	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
)	O	O	O	O	O	O

433dd4dce13e86688a3af13686c84d1c	O	O	O	O	O	O
Packed	O	O	O	O	O	O
file	O	O	O	O	O	O

608D98351812A3C2C73B94A6F5BEF048	O	O	O	O	O	O
Encoded	O	O	O	O	O	O
autoit	O	O	O	O	O	O
file	O	O	O	O	O	O

340F2664D7956A753D8EA2FA5C0044FF	O	O	O	O	O	O
Encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O

53A116D2B8AB11B92B293B4AD18CC523	O	O	O	O	O	O
Decoded	O	O	O	O	O	O
autoit	O	O	O	O	O	O
script	O	O	O	O	O	O

391317CC132C65561811316324171F8C	O	O	O	O	O	O
Shellcode	O	O	O	O	O	O
1	O	O	O	O	O	O

63CFBCE717C7761B6802E3C1B1F8ACCF	O	O	O	O	O	O
Shellcode	O	O	O	O	O	O
2	O	O	O	O	O	O

88A81C67556D4470F23F703D64606E16	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
RAT	O	O	O	O	O	O

RedLine	O	O	O	O	O	O
Stealer	O	O	O	O	O	O

resisproject	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
me	O	O	O	O	O	O
(	O	O	O	O	O	O
Phishing	O	O	O	O	O	O
site	O	O	O	O	O	O
)	O	O	O	O	O	O

bbuseruploads	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
s3	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
amazonaws	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
com	O	O	O	O	O	O
/	O	O	O	O	O	O
583b9547	O	O	O	O	O	O
-	O	O	O	O	O	O
e88c	O	O	O	O	O	O
-	O	O	O	O	O	O
4247	O	O	O	O	O	O
-	O	O	O	O	O	O
a01e	O	O	O	O	O	O
-	O	O	O	O	O	O
655ff985a7ae	O	O	O	O	O	O
/	O	O	O	O	O	O
downloads	O	O	O	O	O	O
/	O	O	O	O	O	O
5a2556c5	O	O	O	O	O	O
-	O	O	O	O	O	O
ec0f	O	O	O	O	O	O
-	O	O	O	O	O	O
4699	O	O	O	O	O	O
-	O	O	O	O	O	O
b67c	O	O	O	O	O	O
-	O	O	O	O	O	O
40b9f2a43fc7	O	O	O	O	O	O
/	O	O	O	O	O	O
Resistance	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
Wallet-windows	O	O	O	O	O	O
-	O	O	O	O	O	O
2.2.9	O	O	O	O	O	O
.	O	O	O	O	O	O
zip	O	O	O	O	O	O
(	O	O	O	O	O	O
Download	O	O	O	O	O	O
URL	O	O	O	O	O	O
)	O	O	O	O	O	O

resisproject	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
cc	O	O	O	O	O	O
(	O	O	O	O	O	O
Phishing	O	O	O	O	O	O
site	O	O	O	O	O	O
)	O	O	O	O	O	O

bitbucket	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
org	O	O	O	O	O	O
/	O	O	O	O	O	O
kapow37047	O	O	O	O	O	O
/	O	O	O	O	O	O
win64	O	O	O	O	O	O
/	O	O	O	O	O	O
downloads	O	O	O	O	O	O
/	O	O	O	O	O	O
ResistanceWallet	O	O	O	O	O	O
\	O	O	O	O	O	O
_	O	O	O	O	O	O
2.2.8	O	O	O	O	O	O
.	O	O	O	O	O	O
exe	O	O	O	O	O	O
(	O	O	O	O	O	O
Download	O	O	O	O	O	O
URL	O	O	O	O	O	O
)	O	O	O	O	O	O

yellowbag	O	O	O	O	O	O
[	O	O	O	O	O	O
.	O	O	O	O	O	O
]	O	O	O	O	O	O
top	O	O	O	O	O	O
(	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
C	O	O	O	O	O	O
&	O	O	O	O	O	O
C	O	O	O	O	O	O
)	O	O	O	O	O	O

70EFF6AE73C0E276D385929D9E253D02	O	O	O	O	O	O
Packed	O	O	O	O	O	O
file	O	O	O	O	O	O

C96BF5CECA92A5362F342A7EE19FDC88	O	O	O	O	O	O
Encoded	O	O	O	O	O	O
autoit	O	O	O	O	O	O
file	O	O	O	O	O	O

F1AA91851E0F66AAC3F65E4C237E8B51	O	O	O	O	O	O
Encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O

106FCC5A6B51E4B2213694C7B5FF3C08	O	O	O	O	O	O
Decoded	O	O	O	O	O	O
autoit	O	O	O	O	O	O
script	O	O	O	O	O	O

729BB625379513FC677606888941248B	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
Stealer	O	O	O	O	O	O

4B0F5B53264C56125BD5C889E063BBCA	O	O	O	O	O	O
Packed	O	O	O	O	O	O
file	O	O	O	O	O	O

67E67250B0DB02F824804EC17A757B1E	O	O	O	O	O	O
Encoded	O	O	O	O	O	O
autoit	O	O	O	O	O	O
file	O	O	O	O	O	O

67BB52ECFE627A96076AFAFD2DDE32C7	O	O	O	O	O	O
Encrypted	O	O	O	O	O	O
payload	O	O	O	O	O	O

293918878C0CE8CFFBD344B16EAC656E	O	O	O	O	O	O
Decoded	O	O	O	O	O	O
autoit	O	O	O	O	O	O
script	O	O	O	O	O	O

9E286AB918E5FACF45B2AE0195CEF54B	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
Stealer	O	O	O	O	O	O

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Appendix	O	O	O	O	O	O
I	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Python	O	O	O	O	O	O
Script	O	O	O	O	O	O
to	O	O	O	O	O	O
decrypt	O	O	O	O	O	O
encrypted	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
payload	O	O	O	O	O	O
and	O	O	O	O	O	O
RedLine	O	O	O	O	O	O
payload	O	O	O	O	O	O
:	O	O	O	O	O	O

import	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
sys	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

from	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
Crypto.Cipher	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
import	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ARC4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

#	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
RC4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keys	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

keys	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
537180	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
7010	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
‘	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
2379	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
’	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

enc	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
file	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
sys.argv	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

dec	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
file	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
sys.argv	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

for	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
key	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
in	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
keys	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
cipher	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ARC4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
new	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
key	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
data	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
open	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
enc	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
file	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
rb	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
read	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
out	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cipher.decrypt	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
data	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
out	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
MZ	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
with	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
open	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dec	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
file	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
,	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
wb	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
as	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
wf	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
wf.write	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
out	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
print	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
Decrypted	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
PE	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
file	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
-	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
+	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
dec	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
file	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
break	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

*	O	O	O	O	O	O
*	O	O	O	O	O	O
Appendix	O	O	O	O	O	O
II	O	O	O	O	O	O
*	O	O	O	O	O	O
*	O	O	O	O	O	O

Python	O	O	O	O	O	O
Script	O	O	O	O	O	O
to	O	O	O	O	O	O
decrypt	O	O	O	O	O	O
&	O	O	O	O	O	O
decompress	O	O	O	O	O	O
Cybergate	O	O	O	O	O	O
traffic	O	O	O	O	O	O
:	O	O	O	O	O	O

import	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
zlib	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

from	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
Crypto.Cipher	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
import	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ARC4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

def	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
dec	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
result	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
marker	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
#	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
#	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
$	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
#	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
#	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
#	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
str	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
bytearray.fromhex	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
len	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
return	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
result	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
try	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet.startswith	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
x0d	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
x0a	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet.split	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
marker	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
1	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet.startswith	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
x0d	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
x0a	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
2	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
except	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
pass	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
try	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
key	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
b'draZwyK8wNHF	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
'	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
cipher	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
ARC4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
.	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
new	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
key	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
rc4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
out	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cipher.decrypt	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
packet	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
if	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
rc4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
out.startswith	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
@	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
@	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
email	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
 	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
protected	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
cdn-cgi	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
l	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
/	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
email-protection	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
@	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
"	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
rc4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
out	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
rc4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
out	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
[	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
14	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
]	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
result	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
=	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
zlib.decompress	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
(	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
rc4	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
\	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
_	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
out	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
)	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

            	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
return	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
result	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

    	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
except	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
:	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

        	O	B-CLICommand/CodeSnippet	O	O	O	B-CLICommand/CodeSnippet
return	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet
result	O	I-CLICommand/CodeSnippet	O	O	O	I-CLICommand/CodeSnippet

