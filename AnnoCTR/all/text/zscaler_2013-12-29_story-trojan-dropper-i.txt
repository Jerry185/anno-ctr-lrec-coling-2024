The Story Of A Trojan Dropper I
December 29, 2013
**Introduction:** 
Recently, Zscaler ThreatlabZ  received a suspicious file from one of our customers, which was named “OrderDetails.zip”.
After extracting the executable file from the archive I have performed a virustotal scan  to get some information about the file.
At that time, very few antivirus vendors had definitions in place, which flagged the file as malicious.
As such, I decided to take look at the file in greater detail.
After completing the analysis,I've decided to blog about the threat.
Given the amount of information derived during the analysis, I've decided to divide the blog into multiple parts.
Modern day malware generally implements some kind of packing or obfuscation on the binary, in order to evade antivirus detection.
Hence, it’s a good idea to determine which packer may have been used while analyzing the file.
In order to do this, I implemented a popular tool called PEiD to check for the existence of a known packer.
As we can see above, PEiD was not able to pick up anything from this file, but that doesn't mean that the file is not packed.
Let’s have a closer look at the file.
While going through the file sections, one of the sections (.data) contained an unusually large amount of data, which at first glance gave the impression that it is obfuscated.
This is an important clue and something we have to keep in mind while debugging the file.
While looking at the resource section, we can see that the file icon resembles that of a PDF file, which adds to our suspicion.
Also, the file is not digitally signed.
Lets go further and execute the file.
When doing so, I was greeted with a crash report where Windows was telling me that “Adobe.exe” had crashed during execution.
We knew from the beginning that this was not a proper PDF file and would not therefore work with Adobe Reader.
Let’s now look to determine where Adobe.exe exists in the file system.
A Windows file search reveals Adobe.exe inside the temp folder, which when executed, produces exactly the same result as was shown above  
At the same time, a Wireshark capture was not able to output anything that was of interest.
At this point we have adequate evidence to proceed with additional debugging, which i will explain in detail in the 2nd part of this blog post.
[The story of a Trojan dropper II](/blogs/research/story-trojan-dropper-ii)  