Nuclear Exploit Kit - Complete Infection Cycle
September 18, 2014
Zscaler ThreatLabZ has been seeing a steady increase in the Nuclear Exploit Kit (EK) traffic over the past few weeks.
The detection of malicious activity performed by this EK remains low, due to usage of dynamic content and heavy obfuscation.
In this blog, we will walk you through a complete Nuclear EK infection cycle with a live example.
We will also share details of the identified payload, which had very low Anti-Virus (AV) detection rates.
The infection cycle begins with an unsuspecting user visiting a legitimate site that was compromised by the attackers.
The compromised site in the example covered in this blog is *www[.]cornwallmusiceducationhub[.]org* that further redirects the victim to the Exploit Kit hosting server [80.85.86.133].
Nuclear EK is notorious for exploiting most popular browser plugins.
The following screenshot shows the malicious iframe injected on the compromised website.
|  |
| Malicious iframe in compromised domain |
The malicious iframe leads the users to a loading site, which in this case performs a second level redirection as shown below, eventually leading the victim to the Nuclear EK's landing page.
|  |
| Redirecting to the Nuclear EK landing page |
**Redirection Chain observed in our example:**
*Compromised site :* www[.]cornwallmusiceducationhub[.]org/tag/heartlands-pool/
*Second level redirection site:* fluersutel[.]tecnopes[.]com[.]ar/miksopulp16[.]html
*EK Landing site:* actudismatik[.]e-xms[.]com[.]ar/2150b060shv/1/9ffbf35e4190fbba62f70c8477fa3964[.]html
|  |
| Redirection Chain |
The Exploit kit landing page is heavily obfuscated to evade detection by AV and Intrusion Prevention Systems as seen below:
|  |
| Landing Page |
Now we will step through the complete dobfuscation of the landing page that was captured in above example.
We leveraged the open source [JavaScript beautifier](http://jsbeautifier.org/) to structure the landing page JavaScript code.
Upon structuring the code, we determined that there were 51 unused variable declarations to confuse the researchers.
Going further, we observed that the following three functions *VV8Y6W,wL3, and Fp4Ovo* were responsible for the dynamic de-obfuscation of the EK landing page code.
We have noted the action performed by each function in the following screenshot.
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-WZSMy0Ou3xw/VBnBOSs9_MI/AAAAAAAAAJc/VE_yP1_Fu7U/s1600/3%2Bfun.png)](/sites/default/files/images/blogs/-WZSMy0Ou3xw/VBnBOSs9_MI/AAAAAAAAAJc/VE_yP1_Fu7U/s1600/3%2Bfun.png)
The following routine leverages the aforementioned functions to generate a key PluginDetect (V 0.8.8) script which we will discuss later.
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-_RUh58S0hrY/VBnAiY2WbXI/AAAAAAAAAJU/bP5JVCb42mo/s1600/plugin%2Bdetect.png)](/sites/default/files/images/blogs/-_RUh58S0hrY/VBnAiY2WbXI/AAAAAAAAAJU/bP5JVCb42mo/s1600/plugin%2Bdetect.png)
Upon successful execution of the above code, the variable *KKa* will store the PluginDetect script.
The following code will execute the script.
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-Ob0kF_6Ky64/VBnCrc_QviI/AAAAAAAAAJk/IiQAa3AAfuc/s1600/execute.png)](/sites/default/files/images/blogs/-Ob0kF_6Ky64/VBnCrc_QviI/AAAAAAAAAJk/IiQAa3AAfuc/s1600/execute.png)
**PluginDetect**
This script is derived from the well-known JavaScript library [PluginDetect](http://www.pinlady.net/PluginDetect/).
This library is used by the exploit kit authors to do a detailed reconnaissance of victim's browser plugins.
We will walk you through various actions performed by this script before executing the exploit payload.
First the *detectPlatform* function will check for the operating system running on the victim machine:
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-xh2aYsPEga0/VBnFu4R4CgI/AAAAAAAAAJ0/E3K3Myn9eYA/s1600/detect_platform.png)](/sites/default/files/images/blogs/-xh2aYsPEga0/VBnFu4R4CgI/AAAAAAAAAJ0/E3K3Myn9eYA/s1600/detect_platform.png)
Subsequently, the script will also check the version of well-known browser plugins, which includes Java, Adobe Reader, Adobe Flash, and Silverlight.
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-UtBMaAjfYe8/VBnEgdGjeKI/AAAAAAAAAJs/LS94lTP0LWo/s1600/plugin%2Bdetect_.png)](/sites/default/files/images/blogs/-UtBMaAjfYe8/VBnEgdGjeKI/AAAAAAAAAJs/LS94lTP0LWo/s1600/plugin%2Bdetect_.png)
It then leverages the [XML DOM information leakage vulnerability](http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-7331) to enumerate through the system driver files residing in the C:\Windows\System32\drivers\ directory.
If it finds any AV driver files, the script will terminate the infection cycle.
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-L03pjek7Wfg/VBnHbRfMsRI/AAAAAAAAAJ8/LqiotOSwC94/s1600/Av%2Bdetection.png)](/sites/default/files/images/blogs/-L03pjek7Wfg/VBnHbRfMsRI/AAAAAAAAAJ8/LqiotOSwC94/s1600/Av%2Bdetection.png)
Next, the script will check for the vulnerable versions of the loaded plugins and accordingly run the identified application exploit function.
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-DnbDn6nTr1c/VBnIx1ZB39I/AAAAAAAAAKE/osQXM1fTmuA/s1600/version%2Bcheck.png)](/sites/default/files/images/blogs/-DnbDn6nTr1c/VBnIx1ZB39I/AAAAAAAAAKE/osQXM1fTmuA/s1600/version%2Bcheck.png)
The following screenshot shows the application specific exploit functions:
[![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-n87J3xuxhBI/VBnI459FeAI/AAAAAAAAAKM/T04NaU9SVwY/s1600/Run.png)](/sites/default/files/images/blogs/-n87J3xuxhBI/VBnI459FeAI/AAAAAAAAAKM/T04NaU9SVwY/s1600/Run.png)
Below are the exploit payloads that were getting served if the related application plugin version was found to be vulnerable by the Nuclear EK instance that we analyzed.
AV detection for the payloads delivered by this variant remained poor at the time of blog publication.
**Silverlight Exploit:**
CVE:[2013-0074](http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-0074)
actudismatik[.]e-xms[.]com[.]ar/2959962158/2/1410771180[.]xap
MD5: 94ef35e1ecf0a486ab790957ad794a85
Size: 9139
VT: [2/55](https://www.virustotal.com/#/file/e59355ff082538d30d9f94fbe6e8b64e4da714939caa3353b9e1679805c5997c/analysis/1410777429/)
**Flash Exploit:**
CVE:[2014-0515](http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0515)
http://actudismatik[.]e-xms[.]com[.]ar/2959962158/2/1410771180[.]swf
MD5: da5d57c700ebec211a6a57166700e796
Size: 5832
VT: [1/55](https://www.virustotal.com/#/file/0c3304c65b3d9c42586ba104407c4bd0c9601eff54071fdc7c022b19a7fb69f4/analysis/1410777534/)
**PDF Exploit:**
http://actudismatik[.]e-xms[.]com[.]ar/2959962158/2/1410771180[.]pdf
MD5: 3676bf357f0678a609df6831b7a870a0
Size: 9769
VT: [1/54](https://www.virustotal.com/#/file/c52caeb9a07b4d01538b0d534f4937ba67b2b0a731aca39344b3251f2c3d3536/analysis/1410777242/)
If the exploit attempt is successful, then the EK code will silently download and install the following malware payload on the victim machine.
**Malware:**
http://actudismatik[.]e-xms[.]com[.]ar/f/2/1410771180/2959962158/7
MD5:acd0fe0c2ce27b8b9fa8741e23e39b81
Size:319488
VT:[4/55](https://www.virustotal.com/#/file/6c60c72da5e52bfc0b6be2ceed99d7d936131bf7258d99736d9bff98911b8cb3/analysis/1410780888/)
Dhruval