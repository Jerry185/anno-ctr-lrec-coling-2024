{"mention": "WIRTE", "context_left": "", "context_right": "Group attacking the Middle East", "_context_left": "", "_context_right": " Group attacking the Middle East", "sentence_left": "", "sentence_right": "April 02, 2019", "label": "[WIRTE](https://attack.mitre.org/groups/G0090) is a threat group that has been active since at least August 2018. The group focuses on targeting Middle East defense and diplomats.(Citation: Lab52 WIRTE Apr 2019)", "label_id": 1263, "label_title": "WIRTE", "label_link": "https://attack.mitre.org/groups/G0090", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "WIRTE", "context_left": "The Intelligence Development Group of [S2 Grupo](https://s2grupo.es/en/home/) has carried out an investigation on an actor from whom LAB52 has not been able to find references or similarities in open sources and who has been identified as **", "context_right": "**.", "_context_left": "The Intelligence Development Group of [S2 Grupo](https://s2grupo.es/en/home/) has carried out an investigation on an actor from whom LAB52 has not been able to find references or similarities in open sources and who has been identified as **", "_context_right": "**.", "sentence_left": "April 02, 2019", "sentence_right": "The DFIR (Digital Forensics and Incident Response) team of S2 Grupo first identified this actor in August 2018 and since then the follow-up has been carried out during the last few months.", "label": "[WIRTE](https://attack.mitre.org/groups/G0090) is a threat group that has been active since at least August 2018. The group focuses on targeting Middle East defense and diplomats.(Citation: Lab52 WIRTE Apr 2019)", "label_id": 1263, "label_title": "WIRTE", "label_link": "https://attack.mitre.org/groups/G0090", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "communications go unencrypted by HTTP", "context_left": "It is considered unsophisticated by the fact that the scripts are unobtrusive,", "context_right": ", they use Powershell (increasingly monitored), and so on.", "_context_left": "It is considered unsophisticated by the fact that the scripts are unobtrusive, ", "_context_right": ", they use Powershell (increasingly monitored), and so on.", "sentence_left": "This group attacks the Middle East and does not use very sophisticated mechanisms, at least in the campaign started in August 2018 which was monitored.", "sentence_right": "Despite this apparently unsophisticated modus operandi compared to other actors, they manage to infect their victims and carry out their objectives.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "they use Powershell", "context_left": "It is considered unsophisticated by the fact that the scripts are unobtrusive, communications go unencrypted by HTTP,", "context_right": "(increasingly monitored), and so on.", "_context_left": "It is considered unsophisticated by the fact that the scripts are unobtrusive, communications go unencrypted by HTTP, ", "_context_right": " (increasingly monitored), and so on.", "sentence_left": "This group attacks the Middle East and does not use very sophisticated mechanisms, at least in the campaign started in August 2018 which was monitored.", "sentence_right": "Despite this apparently unsophisticated modus operandi compared to other actors, they manage to infect their victims and carry out their objectives.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "once these scripts are executed", "context_left": "We must be aware that", "context_right": ", it is when the behavior analysis of many solutions will detect them, but this fact has not been studied by LAB52.", "_context_left": "We must be aware that ", "_context_right": ", it is when the behavior analysis of many solutions will detect them, but this fact has not been studied by LAB52.", "sentence_left": "In addition, as will be seen during the report, the detection rate of some of the scripts in December 2018 by the main antivirus manufacturers is low, an aspect that must be highlighted.", "sentence_right": "This actor in all the artifacts analyzed shows his victims a decoy document in Arabic with different themes.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "artifacts analyzed shows his victims a decoy document in Arabic with different themes.", "context_left": "This actor in all the", "context_right": "", "_context_left": "This actor in all the ", "_context_right": "", "sentence_left": "We must be aware that once these scripts are executed, it is when the behavior analysis of many solutions will detect them, but this fact has not been studied by LAB52.", "sentence_right": "During the report these documents will be analyzed and who could be the objectives depending on the topic dealt with in the document.", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "a malware made in Visual Basic Script (VBS) as a tool to control the victim.", "context_left": "The attackers used", "context_right": "", "_context_left": "The attackers used ", "_context_right": "", "sentence_left": "As indicated above, during the month of August 2018 S2 Grupo CERT we managed an incident aimed at the diplomacy of different Middle Eastern countries.", "sentence_right": "Starting from the study of this VBS from S2 Grupo CERT, the monitoring of this group was started, finding in other sources other artifacts from the same group but with different decoy documents and with different strategies of execution, persistence, and so on.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "because of the decoy documents used, since sometimes they are identical.", "context_left": "It is associated that these artifacts are related because they reflect similarities from a technical and temporal point of view and", "context_right": "", "_context_left": "It is associated that these artifacts are related because they reflect similarities from a technical and temporal point of view and ", "_context_right": "", "sentence_left": "S2 Grupo does not have enough information to make any type of attribution or authorship.", "sentence_right": "One aspect observed during the investigation is that the attackers after running the VBS used it as an Empire post-exploitation framework (<https://github.com/EmpireProject/Empire>).", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "attackers after running the VBS", "context_left": "One aspect observed during the investigation is that the", "context_right": "used it as an Empire post-exploitation framework (<https://github.com/EmpireProject/Empire>).", "_context_left": "One aspect observed during the investigation is that the ", "_context_right": " used it as an Empire post-exploitation framework (<https://github.com/EmpireProject/Empire>).", "sentence_left": "It is associated that these artifacts are related because they reflect similarities from a technical and temporal point of view and because of the decoy documents used, since sometimes they are identical.", "sentence_right": "A total of five scripts plus the one involved in the incident could be collected.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "total of five scripts plus the one involved in the incident could be collected", "context_left": "A", "context_right": ".", "_context_left": "A ", "_context_right": ".", "sentence_left": "One aspect observed during the investigation is that the attackers after running the VBS used it as an Empire post-exploitation framework (<https://github.com/EmpireProject/Empire>).", "sentence_right": "Below we detail the main characteristics of each.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "communication occurs over HTTP to the **micorsoft[.]store** domain to TCP/2082 port.", "context_left": "Network", "context_right": "", "_context_left": "Network ", "_context_right": "", "sentence_left": "In the image you can see that it was uploaded through the web, from PS (Palestine) and also that it was uploaded for the first time on **5 Aug. 2018**.", "sentence_right": "This domain since it exists has resolved to the following ip addresses:", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Port 2082 is one of the ports allowed by Cloudflare", "context_left": "", "context_right": "for HTTP traffic.", "_context_left": "", "_context_right": " for HTTP traffic.", "sentence_left": "Currently resolves to a Cloudflare address.", "sentence_right": "It should be noted that the first IP address 185.86.79.243 is geolocated in Ukraine.", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "for HTTP traffic", "context_left": "Port 2082 is one of the ports allowed by Cloudflare", "context_right": ".", "_context_left": "Port 2082 is one of the ports allowed by Cloudflare ", "_context_right": ".", "sentence_left": "Currently resolves to a Cloudflare address.", "sentence_right": "It should be noted that the first IP address 185.86.79.243 is geolocated in Ukraine.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "powershell code", "context_left": "This function aims to download the", "context_right": "from the command and control server and execute it:", "_context_left": "This function aims to download the ", "_context_right": " from the command and control server and execute it:", "sentence_left": "In this script this communication information is all in the **RunPld() function**.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod01.png)", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "command and control", "context_left": "This function aims to download the powershell code from the", "context_right": "server and execute it:", "_context_left": "This function aims to download the powershell code from the ", "_context_right": " server and execute it:", "sentence_left": "In this script this communication information is all in the **RunPld() function**.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod01.png)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "download the powershell code from the command and control server and execute it", "context_left": "This function aims to", "context_right": ":", "_context_left": "This function aims to ", "_context_right": ":", "sentence_left": "In this script this communication information is all in the **RunPld() function**.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod01.png)", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "decodes the decoy document", "context_left": "This function", "context_right": ", write it to disk and show it to the victim.", "_context_left": "This function ", "_context_right": ", write it to disk and show it to the victim.", "sentence_left": "Another common function in these scripts is the writeDOC function.", "sentence_right": "This document is encoded in base64 and embedded in the script itself in a variable.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "document is encoded in base64", "context_left": "This", "context_right": "and embedded in the script itself in a variable.", "_context_left": "This ", "_context_right": " and embedded in the script itself in a variable.", "sentence_left": "This function decodes the decoy document, write it to disk and show it to the victim.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod02.png)", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "first execution", "context_left": "**The script itself does not establish persistence** in its", "context_right": ", so either the attackers deploy it later when they execute powershell or fix it by transporting this script.", "_context_left": "**The script itself does not establish persistence** in its ", "_context_right": ", so either the attackers deploy it later when they execute powershell or fix it by transporting this script.", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod03.png)", "sentence_right": "The script once copied to APPDATA will have the following name: **Update.vbs**.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "attackers deploy it later when they execute powershell", "context_left": "**The script itself does not establish persistence** in its first execution, so either the", "context_right": "or fix it by transporting this script.", "_context_left": "**The script itself does not establish persistence** in its first execution, so either the ", "_context_right": " or fix it by transporting this script.", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod03.png)", "sentence_right": "The script once copied to APPDATA will have the following name: **Update.vbs**.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Update.vbs", "context_left": "The script once copied to APPDATA will have the following name: **", "context_right": "**.", "_context_left": "The script once copied to APPDATA will have the following name: **", "_context_right": "**.", "sentence_left": "**The script itself does not establish persistence** in its first execution, so either the attackers deploy it later when they execute powershell or fix it by transporting this script.", "sentence_right": "On the other hand, if the script is running from APPDATA it does not show the document and only executes the RunPld() function which is the backdoor in powershell and that has been detailed previously.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "executes the RunPld() function which is the backdoor in powershell", "context_left": "On the other hand, if the script is running from APPDATA it does not show the document and only", "context_right": "and that has been detailed previously.", "_context_left": "On the other hand, if the script is running from APPDATA it does not show the document and only ", "_context_right": " and that has been detailed previously.", "sentence_left": "The script once copied to APPDATA will have the following name: **Update.vbs**.", "sentence_right": "If it is not being executed from APPDATA it shows the DOC file “decoy”, it copies and executes the backdoor (script in powershell).", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "script in powershell", "context_left": "If it is not being executed from APPDATA it shows the DOC file “decoy”, it copies and executes the backdoor (", "context_right": ").", "_context_left": "If it is not being executed from APPDATA it shows the DOC file “decoy”, it copies and executes the backdoor (", "_context_right": ").", "sentence_left": "On the other hand, if the script is running from APPDATA it does not show the document and only executes the RunPld() function which is the backdoor in powershell and that has been detailed previously.", "sentence_right": "When the victim executes the VBS file, a Word document will be opened with the following content (you can see on the left in Arabic and next to it the translation made by Google Translate):", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "copies and executes the backdoor", "context_left": "If it is not being executed from APPDATA it shows the DOC file “decoy”, it", "context_right": "(script in powershell).", "_context_left": "If it is not being executed from APPDATA it shows the DOC file “decoy”, it ", "_context_right": " (script in powershell).", "sentence_left": "On the other hand, if the script is running from APPDATA it does not show the document and only executes the RunPld() function which is the backdoor in powershell and that has been detailed previously.", "sentence_right": "When the victim executes the VBS file, a Word document will be opened with the following content (you can see on the left in Arabic and next to it the translation made by Google Translate):", "label": "The adversary is trying to maintain their foothold. Persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code.", "label_id": 579, "label_title": "Persistence", "label_link": "https://attack.mitre.org/tactics/TA0003", "entity_class": "CI", "entity_type": "TACTIC", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "the victim executes the VBS file", "context_left": "When", "context_right": ", a Word document will be opened with the following content (you can see on the left in Arabic and next to it the translation made by Google Translate):", "_context_left": "When ", "_context_right": ", a Word document will be opened with the following content (you can see on the left in Arabic and next to it the translation made by Google Translate):", "sentence_left": "If it is not being executed from APPDATA it shows the DOC file “decoy”, it copies and executes the backdoor (script in powershell).", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_en_img01.png)", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "network communication in this case is also produced by HTTP to the domain **micorsoft[.]store** to the port tcp/2082", "context_left": "The", "context_right": ".", "_context_left": "The ", "_context_right": ".", "sentence_left": "In the image you can see that it was uploaded through the web, from PS (Palestine) and also that it has been uploaded for the first time on **08/25/2018**.", "sentence_right": "In this case the script has exactly the same code as the hash “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”.", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "network communication in this case is also produced by HTTP to the domain", "context_left": "The", "context_right": "**micorsoft[.]store** to the port tcp/2082.", "_context_left": "The ", "_context_right": " **micorsoft[.]store** to the port tcp/2082.", "sentence_left": "In the image you can see that it was uploaded through the web, from PS (Palestine) and also that it has been uploaded for the first time on **08/25/2018**.", "sentence_right": "In this case the script has exactly the same code as the hash “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "decoy document", "context_left": "The only thing that varies is the", "context_right": "that we can see below:", "_context_left": "The only thing that varies is the ", "_context_right": " that we can see below:", "sentence_left": "In this case the script has exactly the same code as the hash “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img06.png)", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "network communication in this case is also produced by HTTP to the **micorsoft[.]store** domain to the TCP/2082 port", "context_left": "The", "context_right": ".", "_context_left": "The ", "_context_right": ".", "sentence_left": "In the image you can confirm that it has been uploaded by the community, from SE (Sweden) and also that it has been uploaded for the first time on **6 Nov. 2018**.", "sentence_right": "In this case the script has exactly the same code as the previous two; the decoy document is identical to “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”, varying only from where it was uploaded and the dates regarding the first one.", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "decoy document", "context_left": "In this case the script has exactly the same code as the previous two; the", "context_right": "is identical to “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”, varying only from where it was uploaded and the dates regarding the first one.", "_context_left": "In this case the script has exactly the same code as the previous two; the ", "_context_right": " is identical to “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”, varying only from where it was uploaded and the dates regarding the first one.", "sentence_left": "The network communication in this case is also produced by HTTP to the **micorsoft[.]store** domain to the TCP/2082 port.", "sentence_right": "#### Script 4: 3d4a9466e9428ccb1cde05336f5366b29c7e5ae454ddaa4aa28c75c504c13d96", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "network communication in this case is produced by HTTP to the domain **office365-update[.]co** to TCP/2082 port", "context_left": "The", "context_right": ".", "_context_left": "The ", "_context_right": ".", "sentence_left": "The upload date matches the hash date “b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa”.", "sentence_right": "This hash changes the domain and then the structure of the script is different from the others, although it maintains functions and similarities with the rest.", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "fileContent variable that is part of a powershell script.", "context_left": "The function it does is to save, in a file named sys.txt and in a path set from the script, the content of the", "context_right": "", "_context_left": "The function it does is to save, in a file named sys.txt and in a path set from the script, the content of the ", "_context_right": "", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod05.png)", "sentence_right": "It should be noted that the write-to-file function used is **wirte**File(), which as can be seen has produced a typographical error that has been seen in several of the scripts that implement this functionality.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The function creates an SCT (scriptlet) file on disk to execute through the JScript language", "context_left": "", "context_right": "a powershell whose code is in the TXT file written by the writeTXT() function.", "_context_left": "", "_context_right": " a powershell whose code is in the TXT file written by the writeTXT() function.", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod06.png)", "sentence_right": "Regsvr32.exe is used to trigger the execution:", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "powershell whose code is in the TXT file written by the writeTXT() function.", "context_left": "The function creates an SCT (scriptlet) file on disk to execute through the JScript language a", "context_right": "", "_context_left": "The function creates an SCT (scriptlet) file on disk to execute through the JScript language a ", "_context_right": "", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod06.png)", "sentence_right": "Regsvr32.exe is used to trigger the execution:", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Regsvr32.exe is used to trigger the execution:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The function creates an SCT (scriptlet) file on disk to execute through the JScript language a powershell whose code is in the TXT file written by the writeTXT() function.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod07.png)", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "decoy document", "context_left": "In this case the", "context_right": "shown to the victim is the same as that presented in “b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa”.", "_context_left": "In this case the ", "_context_right": " shown to the victim is the same as that presented in “b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa”.", "sentence_left": "The writeDOC() function performs the same logic as in the hash “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a” and which has already been explained.", "sentence_right": "#### Script 5: 4f5d633604b8a3cceb7d582bab640d47e8a5898458c5c2f0e28adcdf01aabf33", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "runs a VBScript", "context_left": "By viewing the tweet thread we can see how they indicate that in this case", "context_right": "#Houdini RAT and that the command and control server is hxxp: //149.28.14[.]103:535/ is-ready.", "_context_left": "By viewing the tweet thread we can see how they indicate that in this case ", "_context_right": " #Houdini RAT and that the command and control server is hxxp: //149.28.14[.]103:535/ is-ready.", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img13.png)", "sentence_right": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with port 535 and with HTTP requests from RAT Houdini.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Houdini RAT", "context_left": "By viewing the tweet thread we can see how they indicate that in this case runs a VBScript #", "context_right": "and that the command and control server is hxxp: //149.28.14[.]103:535/ is-ready.", "_context_left": "By viewing the tweet thread we can see how they indicate that in this case runs a VBScript #", "_context_right": " and that the command and control server is hxxp: //149.28.14[.]103:535/ is-ready.", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img13.png)", "sentence_right": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with port 535 and with HTTP requests from RAT Houdini.", "label": "Houdini RAT", "label_id": 1266, "label_title": "Houdini RAT", "label_link": "http://www.bosch.com#node1g4aefeb0x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "that the command and control server is", "context_left": "By viewing the tweet thread we can see how they indicate that in this case runs a VBScript #Houdini RAT and", "context_right": "hxxp: //149.28.14[.]103:535/ is-ready.", "_context_left": "By viewing the tweet thread we can see how they indicate that in this case runs a VBScript #Houdini RAT and ", "_context_right": " hxxp: //149.28.14[.]103:535/ is-ready.", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img13.png)", "sentence_right": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with port 535 and with HTTP requests from RAT Houdini.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "HTTP requests from RAT Houdini", "context_left": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with port 535 and with", "context_right": ".", "_context_left": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with port 535 and with ", "_context_right": ".", "sentence_left": "By viewing the tweet thread we can see how they indicate that in this case runs a VBScript #Houdini RAT and that the command and control server is hxxp: //149.28.14[.]103:535/ is-ready.", "sentence_right": "The domain was resolving to IP addresses until **August 30, 2018**.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "port 535 and with HTTP requests", "context_left": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with", "context_right": "from RAT Houdini.", "_context_left": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with ", "_context_right": " from RAT Houdini.", "sentence_left": "By viewing the tweet thread we can see how they indicate that in this case runs a VBScript #Houdini RAT and that the command and control server is hxxp: //149.28.14[.]103:535/ is-ready.", "sentence_right": "The domain was resolving to IP addresses until **August 30, 2018**.", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Houdini", "context_left": "The fact that in this case the actor uses a", "context_right": "varies from the rest of VBS found, which based their execution on a powershell script that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "_context_left": "The fact that in this case the actor uses a ", "_context_right": " varies from the rest of VBS found, which based their execution on a powershell script that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "sentence_left": "The domain was resolving to IP addresses until **August 30, 2018**.", "sentence_right": "* • There are matching function names: writeTXT, writeDOC, wirteFile (this is a very important indicator since it is the same typographical error).", "label": "Houdini RAT", "label_id": 1266, "label_title": "Houdini RAT", "label_link": "http://www.bosch.com#node1g4aefeb0x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "rest of VBS", "context_left": "The fact that in this case the actor uses a Houdini varies from the", "context_right": "found, which based their execution on a powershell script that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "_context_left": "The fact that in this case the actor uses a Houdini varies from the ", "_context_right": " found, which based their execution on a powershell script that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "sentence_left": "The domain was resolving to IP addresses until **August 30, 2018**.", "sentence_right": "* • There are matching function names: writeTXT, writeDOC, wirteFile (this is a very important indicator since it is the same typographical error).", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "based their execution on a powershell script", "context_left": "The fact that in this case the actor uses a Houdini varies from the rest of VBS found, which", "context_right": "that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "_context_left": "The fact that in this case the actor uses a Houdini varies from the rest of VBS found, which ", "_context_right": " that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "sentence_left": "The domain was resolving to IP addresses until **August 30, 2018**.", "sentence_right": "* • There are matching function names: writeTXT, writeDOC, wirteFile (this is a very important indicator since it is the same typographical error).", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "received commands from a remote server and executed them", "context_left": "The fact that in this case the actor uses a Houdini varies from the rest of VBS found, which based their execution on a powershell script that", "context_right": ", but even so there are several aspects that lead us to think that it is the same actor:", "_context_left": "The fact that in this case the actor uses a Houdini varies from the rest of VBS found, which based their execution on a powershell script that ", "_context_right": ", but even so there are several aspects that lead us to think that it is the same actor:", "sentence_left": "The domain was resolving to IP addresses until **August 30, 2018**.", "sentence_right": "* • There are matching function names: writeTXT, writeDOC, wirteFile (this is a very important indicator since it is the same typographical error).", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "decoy document", "context_left": "* • Then writeDOC has the same logic and, besides, the", "context_right": "is also in Arabic.", "_context_left": "* • Then writeDOC has the same logic and, besides, the ", "_context_right": " is also in Arabic.", "sentence_left": "* • There are matching function names: writeTXT, writeDOC, wirteFile (this is a very important indicator since it is the same typographical error).", "sentence_right": "In this case the decoy document is different from the previous ones, so everything presupposes that the objective is different:", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "decoy document", "context_left": "In this case the", "context_right": "is different from the previous ones, so everything presupposes that the objective is different:", "_context_left": "In this case the ", "_context_right": " is different from the previous ones, so everything presupposes that the objective is different:", "sentence_left": "* • Then writeDOC has the same logic and, besides, the decoy document is also in Arabic.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img14.png)", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "#### Script 1: 617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Below we detail the main characteristics of each.", "sentence_right": "This first file can be seen in Virus Total and has a low detection (4/58).", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "We are going to see what logic each of the functions has.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod04.png)", "sentence_right": "The first function that we find is **writeTXT()**:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Consequently, this text is attractive and of interest to both Shi’ite and Sunni Muslims.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**The “Hajj” is significantly relevant to Muslims around the world**.", "sentence_right": "**The date of issuance of the document is relevant** as it was held in August, approximately two weeks before the great pilgrimage, just when thousands of people of Muslim faith would begin the pilgrimage to Jeddah in Saudi Arabia.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The function **writeSCT()**:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "It should be noted that the write-to-file function used is **wirte**File(), which as can be seen has produced a typographical error that has been seen in several of the scripts that implement this functionality.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod06.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This file in Virus Total has a low detection, 8/56, and the last analysis took place on 12/12/2018.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "#### Script 4: 3d4a9466e9428ccb1cde05336f5366b29c7e5ae454ddaa4aa28c75c504c13d96", "sentence_right": "We can see that this document has a higher detection to the rest, although it is certain that some were not re-analyzed on December 12th.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "In this case you can see a reference to this script in a tweet (<https://twitter.com/ItsReallyNick/status/1036687952544448512>) by Nick Carr (@ItsReallyNick), where he details all the technical aspects of the script:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The date of upload is after the artifacts uploaded from Palestine, but close in time.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img13.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "#### Script 3: b906f3c19c19e1b20b2d00bfb82b5453d5386d63b4db901ecade0f33dd38326a", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Consequently, it might be feasible for the document’s target audience to be diplomats, politicians and professionals from the defense sector.", "sentence_right": "This file in Virus Total has a low detection, 3/56, and the last analysis took place on 1 Dec. 2018.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The domain was resolving to IP addresses until **August 30, 2018**.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "When looking for which domains have resolved to this IP address it is observed that the only one categorized as malware is related to spdns.de and searching for this domain name we come to the analysis <https://gist.github.com/JohnLaTwC/ccdcbeb85649ef9feaae045482d694b9>(from @ JohnLaTwC) that shows how this domain is configured with port 535 and with HTTP requests from RAT Houdini.", "sentence_right": "The fact that in this case the actor uses a Houdini varies from the rest of VBS found, which based their execution on a powershell script that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "We can see that this document has a higher detection to the rest, although it is certain that some were not re-analyzed on December 12th.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This file in Virus Total has a low detection, 8/56, and the last analysis took place on 12/12/2018.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img09.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Another common function in these scripts is the writeDOC function.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod01.png)", "sentence_right": "This function decodes the decoy document, write it to disk and show it to the victim.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "* 104.24.108.64", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The ip addresses to which the domain has resolved are:", "sentence_right": "* 104.24.109.64", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The writeDOC() function performs the same logic as in the hash “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a” and which has already been explained.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod07.png)", "sentence_right": "In this case the decoy document shown to the victim is the same as that presented in “b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa”.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "### Indicators of compromise", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The current government within the Gaza Strip is Hamas, a party that has a military arm considered by different countries as a terrorist group.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img15.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This domain since it exists has resolved to the following ip addresses:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Network communication occurs over HTTP to the **micorsoft[.]store** domain to TCP/2082 port.", "sentence_right": "* 104.31.78.17", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The VBS script copies itself to APPDATA through the **copyVBS()** function:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod02.png)", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod03.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "In this script this communication information is all in the **RunPld() function**.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Apparently the attackers changed their IP address and hid behind Cloudflare at some point.", "sentence_right": "This function aims to download the powershell code from the command and control server and execute it:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The last analysis took place on 12/12/2018.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This first file can be seen in Virus Total and has a low detection (4/58).", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img01.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "In this case the script has exactly the same code as the hash “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The network communication in this case is also produced by HTTP to the domain **micorsoft[.]store** to the port tcp/2082.", "sentence_right": "The only thing that varies is the decoy document that we can see below:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "* 104.31.79.17", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 104.31.78.17", "sentence_right": "* 185.86.79.243", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "* • There are matching function names: writeTXT, writeDOC, wirteFile (this is a very important indicator since it is the same typographical error).", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The fact that in this case the actor uses a Houdini varies from the rest of VBS found, which based their execution on a powershell script that received commands from a remote server and executed them, but even so there are several aspects that lead us to think that it is the same actor:", "sentence_right": "* • Then writeDOC has the same logic and, besides, the decoy document is also in Arabic.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The upload date matches the hash date “b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "In the image you can see that it was uploaded through the web, from PS (Palestine) and also that it was uploaded for the first time on **08/25/2018**.", "sentence_right": "The network communication in this case is produced by HTTP to the domain **office365-update[.]co** to TCP/2082 port.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "In addition, as will be seen during the report, the detection rate of some of the scripts in December 2018 by the main antivirus manufacturers is low, an aspect that must be highlighted.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Despite this apparently unsophisticated modus operandi compared to other actors, they manage to infect their victims and carry out their objectives.", "sentence_right": "We must be aware that once these scripts are executed, it is when the behavior analysis of many solutions will detect them, but this fact has not been studied by LAB52.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "It should be noted that the first IP address 185.86.79.243 is geolocated in Ukraine.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Port 2082 is one of the ports allowed by Cloudflare for HTTP traffic.", "sentence_right": "This IP address has been assigned to different domains, among them the malicious one.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Below we detail the main characteristics of each.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "A total of five scripts plus the one involved in the incident could be collected.", "sentence_right": "#### Script 1: 617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This first file can be seen in Virus Total and has a low detection (4/58).", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "#### Script 1: 617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a", "sentence_right": "The last analysis took place on 12/12/2018.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "* 104.31.78.17", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This domain since it exists has resolved to the following ip addresses:", "sentence_right": "* 104.31.79.17", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "### Technical analysis", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "During the report these documents will be analyzed and who could be the objectives depending on the topic dealt with in the document.", "sentence_right": "As indicated above, during the month of August 2018 S2 Grupo CERT we managed an incident aimed at the diplomacy of different Middle Eastern countries.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "#### Script 2: b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Consequently, the chances of a possible victim opening the document increase significantly.", "sentence_right": "This file in Virus Total has a low detection, 2/56, and the last analysis took place on 1 Dec. 2018.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The ip addresses to which the domain has resolved are:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This hash changes the domain and then the structure of the script is different from the others, although it maintains functions and similarities with the rest.", "sentence_right": "* 104.24.108.64", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "#### Script 4: 3d4a9466e9428ccb1cde05336f5366b29c7e5ae454ddaa4aa28c75c504c13d96", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "In this case the script has exactly the same code as the previous two; the decoy document is identical to “617bbc71e5f0a645cbb8eeb6d4a1ece96ba0860c8ab5deda6a795e6ad244607a”, varying only from where it was uploaded and the dates regarding the first one.", "sentence_right": "This file in Virus Total has a low detection, 8/56, and the last analysis took place on 12/12/2018.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This hash changes the domain and then the structure of the script is different from the others, although it maintains functions and similarities with the rest.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The network communication in this case is produced by HTTP to the domain **office365-update[.]co** to TCP/2082 port.", "sentence_right": "The ip addresses to which the domain has resolved are:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "* 185.86.79.243", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 104.31.79.17", "sentence_right": "Currently resolves to a Cloudflare address.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "It should be noted that the write-to-file function used is **wirte**File(), which as can be seen has produced a typographical error that has been seen in several of the scripts that implement this functionality.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The function it does is to save, in a file named sys.txt and in a path set from the script, the content of the fileContent variable that is part of a powershell script.", "sentence_right": "The function **writeSCT()**:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This file has a higher detection rate than the previous ones: you can see that 20/58 antivirus identify it as harmful.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "#### Script 5: 4f5d633604b8a3cceb7d582bab640d47e8a5898458c5c2f0e28adcdf01aabf33", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img11.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "#### Script 5: 4f5d633604b8a3cceb7d582bab640d47e8a5898458c5c2f0e28adcdf01aabf33", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "In this case the decoy document shown to the victim is the same as that presented in “b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa”.", "sentence_right": "This file has a higher detection rate than the previous ones: you can see that 20/58 antivirus identify it as harmful.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The first function that we find is **writeTXT()**:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "We are going to see what logic each of the functions has.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod05.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "There are five fundamental pillars within the religion of Islam.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Presumably, the author intends to generate an infection among the “partner states” of Saudi Arabia; **the “target” of the issuer could be the members of the diplomatic corps of countries with interest in the “Hajj”** and especially the diplomats who are part of the Cooperation Council of the Arab States of the Gulf, since the issuer promotes the forwarding of the document to all interested parties.", "sentence_right": "One of them is the “Hajj”, which implies that all Muslims must visit Mecca at least once in their lifetime.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Consequently, the chances of a possible victim opening the document increase significantly.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**The date of issuance of the document is relevant** as it was held in August, approximately two weeks before the great pilgrimage, just when thousands of people of Muslim faith would begin the pilgrimage to Jeddah in Saudi Arabia.", "sentence_right": "#### Script 2: b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This IP address has been assigned to different domains, among them the malicious one.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "It should be noted that the first IP address 185.86.79.243 is geolocated in Ukraine.", "sentence_right": "Apparently the attackers changed their IP address and hid behind Cloudflare at some point.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "Despite this apparently unsophisticated modus operandi compared to other actors, they manage to infect their victims and carry out their objectives.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "It is considered unsophisticated by the fact that the scripts are unobtrusive, communications go unencrypted by HTTP, they use Powershell (increasingly monitored), and so on.", "sentence_right": "In addition, as will be seen during the report, the detection rate of some of the scripts in December 2018 by the main antivirus manufacturers is low, an aspect that must be highlighted.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "The main of the script is simple and we are going to review its flow:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "In this case, the domain has always resolved to CloudFlare and it has not been observed that it has resolved to another IP address as in the previous case.", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_cod04.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This file in Virus Total has a low detection, 3/56, and the last analysis took place on 1 Dec. 2018.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "#### Script 3: b906f3c19c19e1b20b2d00bfb82b5453d5386d63b4db901ecade0f33dd38326a", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img07.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "During the report these documents will be analyzed and who could be the objectives depending on the topic dealt with in the document.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This actor in all the artifacts analyzed shows his victims a decoy document in Arabic with different themes.", "sentence_right": "### Technical analysis", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "* 104.24.109.64", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 104.24.108.64", "sentence_right": "In this case, the domain has always resolved to CloudFlare and it has not been observed that it has resolved to another IP address as in the previous case.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "**The “Hajj” is significantly relevant to Muslims around the world**.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This monument is located in the Jeddah region within Saudi Arabia.", "sentence_right": "Consequently, this text is attractive and of interest to both Shi’ite and Sunni Muslims.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "This file in Virus Total has a low detection, 2/56, and the last analysis took place on 1 Dec. 2018.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "#### Script 2: b4c20b56059a6c6762b4c99d04eb9177cb0a4707c58ef575817fb8b702f162aa", "sentence_right": "![](https://lab52.es/blog/wp-content/uploads/2019/04/wirte_img04.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}
{"mention": "In addition, the document informs about the potential political strategies that the previously mentioned actors could undertake in the future.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The information is an analytical summary of the current political situation in Palestine and even analyzes in geostrategic terms some current aspects.", "sentence_right": "This type of information is highly relevant for **diplomats with political interests in the geographical area of Gaza and Palestine**.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2019-04-02_wirte-group-attacking-the-middle"}