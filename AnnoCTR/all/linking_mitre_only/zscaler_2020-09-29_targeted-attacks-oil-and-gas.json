{"mention": "AZORult", "context_left": "We discovered multiple instances of malicious PDF files sent as email attachments and were used to distribute an information-stealing Trojan,", "context_right": ", to these organizations.", "_context_left": "We discovered multiple instances of malicious PDF files sent as email attachments and were used to distribute an information-stealing Trojan, ", "_context_right": ", to these organizations.", "sentence_left": "Since July 2020, the Zscaler ThreatLabZ team has observed an increase in targeted attacks against multiple supply chain-related organizations in the oil and gas sector in the Middle East.", "sentence_right": "In this blog, we describe the details of this campaign, explaining the attack vectors, the malware distribution strategy, and the threat attribution.", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "malicious PDF files sent as email attachments", "context_left": "We discovered multiple instances of", "context_right": "and were used to distribute an information-stealing Trojan, AZORult, to these organizations.", "_context_left": "We discovered multiple instances of ", "_context_right": " and were used to distribute an information-stealing Trojan, AZORult, to these organizations.", "sentence_left": "Since July 2020, the Zscaler ThreatLabZ team has observed an increase in targeted attacks against multiple supply chain-related organizations in the oil and gas sector in the Middle East.", "sentence_right": "In this blog, we describe the details of this campaign, explaining the attack vectors, the malware distribution strategy, and the threat attribution.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "email that appears to be", "context_left": "The attack chain begins with an", "context_right": "from an official working at the ADNOC and is targeted at officials working in the supply chain and government sectors in the Middle East.", "_context_left": "The attack chain begins with an ", "_context_right": " from an official working at the ADNOC and is targeted at officials working in the supply chain and government sectors in the Middle East.", "sentence_left": "### **Distribution strategy**", "sentence_right": "Each email in this campaign has an attached PDF file.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "email in this campaign has an attached PDF file", "context_left": "Each", "context_right": ".", "_context_left": "Each ", "_context_right": ".", "sentence_left": "The attack chain begins with an email that appears to be from an official working at the ADNOC and is targeted at officials working in the supply chain and government sectors in the Middle East.", "sentence_right": "This PDF contains download links on the first page that lead to legitimate file sharing sites, such as wetransfer and mega.nz where a ZIP archive is hosted.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "This PDF contains", "context_left": "", "context_right": "download links on the first page that lead to legitimate file sharing sites, such as wetransfer and mega.nz where a ZIP archive is hosted.", "_context_left": "", "_context_right": " download links on the first page that lead to legitimate file sharing sites, such as wetransfer and mega.nz where a ZIP archive is hosted.", "sentence_left": "Each email in this campaign has an attached PDF file.", "sentence_right": "The ZIP archive contains a malicious and packed .NET executable that will decrypt, load, and execute the embedded AZORult binary.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "The ZIP archive contains a malicious and packed .NET executable that will decrypt, load, and execute the embedded", "context_right": "binary.", "_context_left": "The ZIP archive contains a malicious and packed .NET executable that will decrypt, load, and execute the embedded ", "_context_right": " binary.", "sentence_left": "This PDF contains download links on the first page that lead to legitimate file sharing sites, such as wetransfer and mega.nz where a ZIP archive is hosted.", "sentence_right": "Figure 1 shows a graphical representation of the attack flow.", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "malicious and packed", "context_left": "The ZIP archive contains a", "context_right": ".NET executable that will decrypt, load, and execute the embedded AZORult binary.", "_context_left": "The ZIP archive contains a ", "_context_right": " .NET executable that will decrypt, load, and execute the embedded AZORult binary.", "sentence_left": "This PDF contains download links on the first page that lead to legitimate file sharing sites, such as wetransfer and mega.nz where a ZIP archive is hosted.", "sentence_right": "Figure 1 shows a graphical representation of the attack flow.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "The ZIP archive contains a malicious and packed", "context_right": "executable that will decrypt, load, and execute the embedded AZORult binary.", "_context_left": "The ZIP archive contains a malicious and packed ", "_context_right": " executable that will decrypt, load, and execute the embedded AZORult binary.", "sentence_left": "This PDF contains download links on the first page that lead to legitimate file sharing sites, such as wetransfer and mega.nz where a ZIP archive is hosted.", "sentence_right": "Figure 1 shows a graphical representation of the attack flow.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "will decrypt", "context_left": "The ZIP archive contains a malicious and packed .NET executable that", "context_right": ", load, and execute the embedded AZORult binary.", "_context_left": "The ZIP archive contains a malicious and packed .NET executable that ", "_context_right": ", load, and execute the embedded AZORult binary.", "sentence_left": "This PDF contains download links on the first page that lead to legitimate file sharing sites, such as wetransfer and mega.nz where a ZIP archive is hosted.", "sentence_right": "Figure 1 shows a graphical representation of the attack flow.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "email message that pretends to come from", "context_left": "Figure 2 shows an", "context_right": "a senior chemist of lab operations of ADNOC Sour Gas.", "_context_left": "Figure 2 shows an ", "_context_right": " a senior chemist of lab operations of ADNOC Sour Gas.", "sentence_left": "**Email analysis**", "sentence_right": "![Figure 2](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%202%20_%20email.png)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "fake email sent", "context_left": "*Figure 2: A", "context_right": "to officials in the supply chain industry in the Middle East.*", "_context_left": "*Figure 2: A ", "_context_right": " to officials in the supply chain industry in the Middle East.*", "sentence_left": "![Figure 2](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%202%20_%20email.png)", "sentence_right": "In all the cases, the emails were sent from Gmail-based address.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Gmail addresses observed in the attacks", "context_left": "The two", "context_right": "were:", "_context_left": "The two ", "_context_right": " were:", "sentence_left": "In all the cases, the emails were sent from Gmail-based address.", "sentence_right": "[[email protected]](/cdn-cgi/l/email-protection#becddfd2dbcdcdd7d9d3df8689fed9d3dfd7d290ddd1d3)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "anonymous email services from Tutanota to create emails", "context_left": "The threat actor also leveraged", "context_right": "registered with keemail.me and tuta.io which were also used in this email campaign.", "_context_left": "The threat actor also leveraged ", "_context_right": " registered with keemail.me and tuta.io which were also used in this email campaign.", "sentence_left": "[[email protected]](/cdn-cgi/l/email-protection#b7c7c5d8d4c2c5dad2d9c399d4dfd2d1c4d1dec5c4c399d4d8daf7d0dad6dedb99d4d8da)", "sentence_right": "The PDF files attached to the email are multipage documents (containing 14 pages) that appear to be Requests for Quotations (RFQ) for supply contracts and legal tenders for various projects related to ADNOC and the Doha airport.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "used in this email campaign", "context_left": "The threat actor also leveraged anonymous email services from Tutanota to create emails registered with keemail.me and tuta.io which were also", "context_right": ".", "_context_left": "The threat actor also leveraged anonymous email services from Tutanota to create emails registered with keemail.me and tuta.io which were also ", "_context_right": ".", "sentence_left": "[[email protected]](/cdn-cgi/l/email-protection#b7c7c5d8d4c2c5dad2d9c399d4dfd2d1c4d1dec5c4c399d4d8daf7d0dad6dedb99d4d8da)", "sentence_right": "The PDF files attached to the email are multipage documents (containing 14 pages) that appear to be Requests for Quotations (RFQ) for supply contracts and legal tenders for various projects related to ADNOC and the Doha airport.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "PDF files attached to the email", "context_left": "The", "context_right": "are multipage documents (containing 14 pages) that appear to be Requests for Quotations (RFQ) for supply contracts and legal tenders for various projects related to ADNOC and the Doha airport.", "_context_left": "The ", "_context_right": " are multipage documents (containing 14 pages) that appear to be Requests for Quotations (RFQ) for supply contracts and legal tenders for various projects related to ADNOC and the Doha airport.", "sentence_left": "The threat actor also leveraged anonymous email services from Tutanota to create emails registered with keemail.me and tuta.io which were also used in this email campaign.", "sentence_right": "The decoy documents are carefully crafted to appear legitimate for social engineering purposes.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "decoy documents are carefully crafted to appear legitimate for social engineering purposes", "context_left": "The", "context_right": ".", "_context_left": "The ", "_context_right": ".", "sentence_left": "The PDF files attached to the email are multipage documents (containing 14 pages) that appear to be Requests for Quotations (RFQ) for supply contracts and legal tenders for various projects related to ADNOC and the Doha airport.", "sentence_right": "The first page of each document contains the instructions to access the specifications and drawings using embedded download links that lead to malicious ZIP archives as described in the attack flow above.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "download links that lead to malicious ZIP archives", "context_left": "The first page of each document contains the instructions to access the specifications and drawings using embedded", "context_right": "as described in the attack flow above.", "_context_left": "The first page of each document contains the instructions to access the specifications and drawings using embedded ", "_context_right": " as described in the attack flow above.", "sentence_left": "The decoy documents are carefully crafted to appear legitimate for social engineering purposes.", "sentence_right": "Some examples of the content in the PDFs include:", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "first page contains the malicious download links.", "context_left": "It bears the logo of ADNOC at the top right and the", "context_right": "", "_context_left": "It bears the logo of ADNOC at the top right and the ", "_context_right": "", "sentence_left": "Figure 3 shows a PDF that pretends to be a legitimate Request for Quotation (RFQ) related to the Dalma gas development project.", "sentence_right": "![Figure 3](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%203%20_%20document%201.png)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "fake letter contained in the PDF", "context_left": "*Figure 3: The", "context_right": "associated with this attack.*", "_context_left": "*Figure 3: The ", "_context_right": " associated with this attack.*", "sentence_left": "![Figure 3](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%203%20_%20document%201.png)", "sentence_right": "**PDF Filename:** AJC-QA HAMAD INTERNATIONAL AIRPORT EXPANSION, DOHA.pdf", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "PDF that pretends to be a", "context_left": "Figure 4 shows a", "context_right": "Request for Quotation for Hamad International Airport expansion plan for Doha and supposedly comes from a supply chain trading contractor in Qatar.", "_context_left": "Figure 4 shows a ", "_context_right": " Request for Quotation for Hamad International Airport expansion plan for Doha and supposedly comes from a supply chain trading contractor in Qatar.", "sentence_left": "**MD5 hash:** abab000b3162ed6001ed8a11024dd21c", "sentence_right": "![Figure 4](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%204%20-%20document%202.png)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "target recipients of the email, the contents of the email, and the attached PDF files", "context_left": "Based on the", "context_right": ", along with the metadata and infrastructure analysis, we conclude that this is a targeted attack on organisations in the Middle East.", "_context_left": "Based on the ", "_context_right": ", along with the metadata and infrastructure analysis, we conclude that this is a targeted attack on organisations in the Middle East.", "sentence_left": "The threat actor is specifically interested in Middle East targets, such as organisations in the supply chain and government sectors of the Middle East, especially the United Arab Emirates (UAE) and Qatar.", "sentence_right": "### **Metadata analysis**", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "metadata of PDF files", "context_left": "After investigating the", "context_right": ", we were able to discover several PDFs that we associate with the same threat actor.", "_context_left": "After investigating the ", "_context_right": ", we were able to discover several PDFs that we associate with the same threat actor.", "sentence_left": "### **Metadata analysis**", "sentence_right": "The distribution method has been used in the wild from January 2020 through May 2020 in low volume.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Command and Control", "context_left": "In addition to the contents of the emails and the documents that were used for threat attribution, we can also infer from the", "context_right": "(C&C) infrastructure that the threat actor has specifically chosen a C&C server that blends with the theme.", "_context_left": "In addition to the contents of the emails and the documents that were used for threat attribution, we can also infer from the ", "_context_right": " (C&C) infrastructure that the threat actor has specifically chosen a C&C server that blends with the theme.", "sentence_left": "### **Infrastructure analysis**", "sentence_right": "The C&C server in the samples we discovered was crevisoft.net.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "In addition to the contents of the emails and the documents that were used for threat attribution, we can also infer from the Command and Control (", "context_right": ") infrastructure that the threat actor has specifically chosen a C&C server that blends with the theme.", "_context_left": "In addition to the contents of the emails and the documents that were used for threat attribution, we can also infer from the Command and Control (", "_context_right": ") infrastructure that the threat actor has specifically chosen a C&C server that blends with the theme.", "sentence_left": "### **Infrastructure analysis**", "sentence_right": "The C&C server in the samples we discovered was crevisoft.net.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "In addition to the contents of the emails and the documents that were used for threat attribution, we can also infer from the Command and Control (C&C) infrastructure that the threat actor has specifically chosen a", "context_right": "server that blends with the theme.", "_context_left": "In addition to the contents of the emails and the documents that were used for threat attribution, we can also infer from the Command and Control (C&C) infrastructure that the threat actor has specifically chosen a ", "_context_right": " server that blends with the theme.", "sentence_left": "### **Infrastructure analysis**", "sentence_right": "The C&C server in the samples we discovered was crevisoft.net.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "contents of the emails and the documents", "context_left": "In addition to the", "context_right": "that were used for threat attribution, we can also infer from the Command and Control (C&C) infrastructure that the threat actor has specifically chosen a C&C server that blends with the theme.", "_context_left": "In addition to the ", "_context_right": "that were used for threat attribution, we can also infer from the Command and Control (C&C) infrastructure that the threat actor has specifically chosen a C&C server that blends with the theme.", "sentence_left": "### **Infrastructure analysis**", "sentence_right": "The C&C server in the samples we discovered was crevisoft.net.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "The", "context_right": "server in the samples we discovered was crevisoft.net.", "_context_left": "The ", "_context_right": " server in the samples we discovered was crevisoft.net.", "sentence_left": "In addition to the contents of the emails and the documents that were used for threat attribution, we can also infer from the Command and Control (C&C) infrastructure that the threat actor has specifically chosen a C&C server that blends with the theme.", "sentence_right": "At the time of analysis, this domain was resolving to the IP address 167.114.57.136.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "stealing information", "context_left": "With a high confidence level, we can conclude that this threat actor is interested in", "context_right": "and gaining access to infrastructure of supply chain-related organisations located in the Middle East.", "_context_left": "With a high confidence level, we can conclude that this threat actor is interested in ", "_context_right": " and gaining access to infrastructure of supply chain-related organisations located in the Middle East.", "sentence_left": "crevisoft.co", "sentence_right": "###", "label": "The adversary is trying to steal data. Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.", "label_id": 583, "label_title": "Exfiltration", "label_link": "https://attack.mitre.org/tactics/TA0010", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "gaining access", "context_left": "With a high confidence level, we can conclude that this threat actor is interested in stealing information and", "context_right": "to infrastructure of supply chain-related organisations located in the Middle East.", "_context_left": "With a high confidence level, we can conclude that this threat actor is interested in stealing information and ", "_context_right": " to infrastructure of supply chain-related organisations located in the Middle East.", "sentence_left": "crevisoft.co", "sentence_right": "###", "label": "The adversary is trying to get into your network. Initial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.", "label_id": 584, "label_title": "Initial Access", "label_link": "https://attack.mitre.org/tactics/TA0001", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "### **Technical analysis of the", "context_right": "payload**", "_context_left": "### **Technical analysis of the ", "_context_right": " payload**", "sentence_left": "###", "sentence_right": "For the purpose of technical analysis, we will consider the .NET binary with MD5 hash: 84e7b5a60cd771173b75a775e0399bc7", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "For the purpose of technical analysis, we will consider the", "context_right": "binary with MD5 hash: 84e7b5a60cd771173b75a775e0399bc7", "_context_left": "For the purpose of technical analysis, we will consider the ", "_context_right": " binary with MD5 hash: 84e7b5a60cd771173b75a775e0399bc7", "sentence_left": "### **Technical analysis of the .NET payload**", "sentence_right": "This payload, which is present inside the downloaded ZIP archive, is a packed and obfuscated .NET binary.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "packed and obfuscated", "context_left": "This payload, which is present inside the downloaded ZIP archive, is a", "context_right": ".NET binary.", "_context_left": "This payload, which is present inside the downloaded ZIP archive, is a ", "_context_right": " .NET binary.", "sentence_left": "For the purpose of technical analysis, we will consider the .NET binary with MD5 hash: 84e7b5a60cd771173b75a775e0399bc7", "sentence_right": "Based on static analysis, we can see that the payload pretends to be a Skype application with spoofed metadata as shown in Figure 7.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "This payload, which is present inside the downloaded ZIP archive, is a packed and obfuscated", "context_right": "binary.", "_context_left": "This payload, which is present inside the downloaded ZIP archive, is a packed and obfuscated ", "_context_right": " binary.", "sentence_left": "For the purpose of technical analysis, we will consider the .NET binary with MD5 hash: 84e7b5a60cd771173b75a775e0399bc7", "sentence_right": "Based on static analysis, we can see that the payload pretends to be a Skype application with spoofed metadata as shown in Figure 7.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "payload pretends to be a Skype application", "context_left": "Based on static analysis, we can see that the", "context_right": "with spoofed metadata as shown in Figure 7.", "_context_left": "Based on static analysis, we can see that the ", "_context_right": " with spoofed metadata as shown in Figure 7.", "sentence_left": "This payload, which is present inside the downloaded ZIP archive, is a packed and obfuscated .NET binary.", "sentence_right": "![Figure 7](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%207%20-%20.NET%201.png)", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "![Figure 7](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%207%20-%20", "context_right": "%201.png)", "_context_left": "![Figure 7](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%207%20-%20", "_context_right": "%201.png)", "sentence_left": "Based on static analysis, we can see that the payload pretends to be a Skype application with spoofed metadata as shown in Figure 7.", "sentence_right": "*Figure 7: Metadata of the main .NET executable.*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "*Figure 7: Metadata of the main", "context_right": "executable.*", "_context_left": "*Figure 7: Metadata of the main ", "_context_right": " executable.*", "sentence_left": "![Figure 7](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%207%20-%20.NET%201.png)", "sentence_right": "Upon execution, it unpacks another payload that is embedded in the resource section.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "execution", "context_left": "Upon", "context_right": ", it unpacks another payload that is embedded in the resource section.", "_context_left": "Upon ", "_context_right": ", it unpacks another payload that is embedded in the resource section.", "sentence_left": "*Figure 7: Metadata of the main .NET executable.*", "sentence_right": "Figure 8 shows the custom algorithm that decrypts the payload using a hardcoded key “GXR20”.", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "custom algorithm that decrypts the payload", "context_left": "Figure 8 shows the", "context_right": "using a hardcoded key “GXR20”.", "_context_left": "Figure 8 shows the ", "_context_right": " using a hardcoded key “GXR20”.", "sentence_left": "Upon execution, it unpacks another payload that is embedded in the resource section.", "sentence_right": "![Figure 8](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%208%20-%20.NET%202.png)", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "![Figure 8](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%208%20-%20", "context_right": "%202.png)", "_context_left": "![Figure 8](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%208%20-%20", "_context_right": "%202.png)", "sentence_left": "Figure 8 shows the custom algorithm that decrypts the payload using a hardcoded key “GXR20”.", "sentence_right": "*Figure 8: The subroutine used to decrypt the second stage .NET DLL.*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "*Figure 8: The subroutine used to decrypt the second stage", "context_right": "DLL.*", "_context_left": "*Figure 8: The subroutine used to decrypt the second stage ", "_context_right": " DLL.*", "sentence_left": "![Figure 8](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%208%20-%20.NET%202.png)", "sentence_right": "###", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "decrypted payload", "context_left": "Figure 9 shows the", "context_right": ", which is a .NET DLL with the **MD5 hash** 0988195ab961071b4aa2d7a8c8e6372d and the name Aphrodite.dll", "_context_left": "Figure 9 shows the ", "_context_right": ", which is a .NET DLL with the **MD5 hash** 0988195ab961071b4aa2d7a8c8e6372d and the name Aphrodite.dll", "sentence_left": "### **Second stage**", "sentence_right": "![Figure 9](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%209%20-%20.NET%203.png)", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "Figure 9 shows the decrypted payload, which is a", "context_right": "DLL with the **MD5 hash** 0988195ab961071b4aa2d7a8c8e6372d and the name Aphrodite.dll", "_context_left": "Figure 9 shows the decrypted payload, which is a ", "_context_right": " DLL with the **MD5 hash** 0988195ab961071b4aa2d7a8c8e6372d and the name Aphrodite.dll", "sentence_left": "### **Second stage**", "sentence_right": "![Figure 9](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%209%20-%20.NET%203.png)", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "![Figure 9](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%209%20-%20", "context_right": "%203.png)", "_context_left": "![Figure 9](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%209%20-%20", "_context_right": "%203.png)", "sentence_left": "Figure 9 shows the decrypted payload, which is a .NET DLL with the **MD5 hash** 0988195ab961071b4aa2d7a8c8e6372d and the name Aphrodite.dll", "sentence_right": "*Figure 9: The unpacked and loaded second stage DLL called Aphrodite.*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "unpacked and loaded second stage DLL", "context_left": "*Figure 9: The", "context_right": "called Aphrodite.*", "_context_left": "*Figure 9: The ", "_context_right": " called Aphrodite.*", "sentence_left": "![Figure 9](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%209%20-%20.NET%203.png)", "sentence_right": "The code execution is transferred to the DLL by creating an object for class named “Mortiz.Anton” along with the following three parameters, as shown in Figure 10.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "![Figure 10](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2010%20-%20", "context_right": "%204.png)", "_context_left": "![Figure 10](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2010%20-%20", "_context_right": "%204.png)", "sentence_left": "projName: “Skype” (name of the project of main executable)", "sentence_right": "*Figure 10: The code control passed to the Aphrodite DLL.*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "DLL further unpacks another binary", "context_left": "This", "context_right": ", which is embedded as a bitmap image in the resource section of the main executable, as shown in Figure 11.", "_context_left": "This ", "_context_right": ", which is embedded as a bitmap image in the resource section of the main executable, as shown in Figure 11.", "sentence_left": "*Figure 10: The code control passed to the Aphrodite DLL.*", "sentence_right": "![Figure 11](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2011%20-%20.NET%205.png)", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "embedded as a bitmap image in the resource section", "context_left": "This DLL further unpacks another binary, which is", "context_right": "of the main executable, as shown in Figure 11.", "_context_left": "This DLL further unpacks another binary, which is ", "_context_right": " of the main executable, as shown in Figure 11.", "sentence_left": "*Figure 10: The code control passed to the Aphrodite DLL.*", "sentence_right": "![Figure 11](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2011%20-%20.NET%205.png)", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "![Figure 11](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2011%20-%20", "context_right": "%205.png)", "_context_left": "![Figure 11](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2011%20-%20", "_context_right": "%205.png)", "sentence_left": "This DLL further unpacks another binary, which is embedded as a bitmap image in the resource section of the main executable, as shown in Figure 11.", "sentence_right": "*Figure 11: The bitmap image inside the resource section that contains the next stage payload.*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "bitmap image inside the resource section that contains the next stage payload.", "context_left": "*Figure 11: The", "context_right": "*", "_context_left": "*Figure 11: The ", "_context_right": "*", "sentence_left": "![Figure 11](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2011%20-%20.NET%205.png)", "sentence_right": "Similar to the second stage (Aphrodite), it is also encrypted with a custom algorithm.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "custom algorithm is based on XOR", "context_left": "The", "context_right": "using the key indicated by the parameter ugz3**.**", "_context_left": "The ", "_context_right": " using the key indicated by the parameter ugz3**.**", "sentence_left": "Similar to the second stage (Aphrodite), it is also encrypted with a custom algorithm.", "sentence_right": "###", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "The resulting unpacked binary is a", "context_right": "DLL with **MD5 hash** ae5f14478d5e06c1b2dc2685cbe992c1 and the name Jupiter.", "_context_left": "The resulting unpacked binary is a ", "_context_right": " DLL with **MD5 hash** ae5f14478d5e06c1b2dc2685cbe992c1 and the name Jupiter.", "sentence_left": "### **Third stage**", "sentence_right": "The code control is transferred to the third stage DLL via a call to one of its routines as shown in Figure 12.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "![Figure 12](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2012%20-%20", "context_right": "%206.png)", "_context_left": "![Figure 12](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2012%20-%20", "_context_right": "%206.png)", "sentence_left": "The code control is transferred to the third stage DLL via a call to one of its routines as shown in Figure 12.", "sentence_right": "*Figure 12: The unpacked and loaded third stage DLL called Jupiter.*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "unpacked and loaded", "context_left": "*Figure 12: The", "context_right": "third stage DLL called Jupiter.*", "_context_left": "*Figure 12: The ", "_context_right": " third stage DLL called Jupiter.*", "sentence_left": "![Figure 12](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2012%20-%20.NET%206.png)", "sentence_right": "This third stage DLL uses various methods to detect the presence of a virtualization or an analysis environment.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "detect the presence of a virtualization or an analysis environment", "context_left": "This third stage DLL uses various methods to", "context_right": ".", "_context_left": "This third stage DLL uses various methods to ", "_context_right": ".", "sentence_left": "*Figure 12: The unpacked and loaded third stage DLL called Jupiter.*", "sentence_right": "###", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "detect the analysis environment.", "context_left": "Below is a summary of the methods used by this DLL to", "context_right": "", "_context_left": "Below is a summary of the methods used by this DLL to ", "_context_right": "", "sentence_left": "### **Evasion techniques**", "sentence_right": "### **Registry checks:**", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Registry key: \"HARDWARE\\\\DEVICEMAP\\\\Scsi\\\\Scsi Port 0\\\\Scsi Bus 0\\\\Target Id 0\\\\Logical Unit Id 0\"", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### **Registry checks:**", "sentence_right": "Value: \"Identifier\"", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Checks for the presence of a DLL with the name: \"SbieDll.dll\" in the process address space.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**DLL name-based checks:**", "sentence_right": "**Username-based checks:**", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "FilePath contains: \"//VIRUS\" OR \"SANDBOX\" OR \"SAMPLE\" OR \"C:\\\\file.exe\"", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**Filename or filepath-based checks:**", "sentence_right": "**Window class check:**", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "After all the above environment checks are performed, the", "context_right": "payload (**MD5 hash:** 38360115294c49538ab15b5ec3037a77) is injected using the process hollowing technique in a new instance of the main process.", "_context_left": "After all the above environment checks are performed, the ", "_context_right": " payload (**MD5 hash:** 38360115294c49538ab15b5ec3037a77) is injected using the process hollowing technique in a new instance of the main process.", "sentence_left": "\"Afx:400000:0\"", "sentence_right": "We will not describe the details of the functionality of AZORult information stealer since it is already well-documented in the public domain.", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "injected using the process hollowing technique", "context_left": "After all the above environment checks are performed, the AZORult payload (**MD5 hash:** 38360115294c49538ab15b5ec3037a77) is", "context_right": "in a new instance of the main process.", "_context_left": "After all the above environment checks are performed, the AZORult payload (**MD5 hash:** 38360115294c49538ab15b5ec3037a77) is ", "_context_right": " in a new instance of the main process.", "sentence_left": "\"Afx:400000:0\"", "sentence_right": "We will not describe the details of the functionality of AZORult information stealer since it is already well-documented in the public domain.", "label": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.", "label_id": 318, "label_title": "Process Injection", "label_link": "https://attack.mitre.org/techniques/T1055", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "We will not describe the details of the functionality of", "context_right": "information stealer since it is already well-documented in the public domain.", "_context_left": "We will not describe the details of the functionality of ", "_context_right": " information stealer since it is already well-documented in the public domain.", "sentence_left": "After all the above environment checks are performed, the AZORult payload (**MD5 hash:** 38360115294c49538ab15b5ec3037a77) is injected using the process hollowing technique in a new instance of the main process.", "sentence_right": "It is important to note that based on the flow of the code execution and the anti-analysis techniques used, the .NET packed payload appears to be created using the CyaX packer.", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "CyaX", "context_left": "It is important to note that based on the flow of the code execution and the anti-analysis techniques used, the .NET packed payload appears to be created using the", "context_right": "packer.", "_context_left": "It is important to note that based on the flow of the code execution and the anti-analysis techniques used, the .NET packed payload appears to be created using the ", "_context_right": " packer.", "sentence_left": "We will not describe the details of the functionality of AZORult information stealer since it is already well-documented in the public domain.", "sentence_right": "More details about this packer can be found here.", "label": "CyaX packer", "label_id": 1378, "label_title": "CyaX packer", "label_link": "http://www.bosch.com#node1fuu313m0x2", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "anti-analysis techniques", "context_left": "It is important to note that based on the flow of the code execution and the", "context_right": "used, the .NET packed payload appears to be created using the CyaX packer.", "_context_left": "It is important to note that based on the flow of the code execution and the ", "_context_right": " used, the .NET packed payload appears to be created using the CyaX packer.", "sentence_left": "We will not describe the details of the functionality of AZORult information stealer since it is already well-documented in the public domain.", "sentence_right": "More details about this packer can be found here.", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": ".NET", "context_left": "It is important to note that based on the flow of the code execution and the anti-analysis techniques used, the", "context_right": "packed payload appears to be created using the CyaX packer.", "_context_left": "It is important to note that based on the flow of the code execution and the anti-analysis techniques used, the ", "_context_right": " packed payload appears to be created using the CyaX packer.", "sentence_left": "We will not describe the details of the functionality of AZORult information stealer since it is already well-documented in the public domain.", "sentence_right": "More details about this packer can be found here.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "The final unpacked payload,", "context_right": ", will perform information stealing activities on the machine and exfiltrate the information by sending an HTTP POST request to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "_context_left": "The final unpacked payload, ", "_context_right": ", will perform information stealing activities on the machine and exfiltrate the information by sending an HTTP POST request to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "sentence_left": "### **Network communication**", "sentence_right": "Upon inspection, we discovered that opendir was enabled on the C&C server as shown in Figure 13.", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "unpacked payload", "context_left": "The final", "context_right": ", AZORult, will perform information stealing activities on the machine and exfiltrate the information by sending an HTTP POST request to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "_context_left": "The final ", "_context_right": ", AZORult, will perform information stealing activities on the machine and exfiltrate the information by sending an HTTP POST request to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "sentence_left": "### **Network communication**", "sentence_right": "Upon inspection, we discovered that opendir was enabled on the C&C server as shown in Figure 13.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "information stealing activities", "context_left": "The final unpacked payload, AZORult, will perform", "context_right": "on the machine and exfiltrate the information by sending an HTTP POST request to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "_context_left": "The final unpacked payload, AZORult, will perform ", "_context_right": " on the machine and exfiltrate the information by sending an HTTP POST request to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "sentence_left": "### **Network communication**", "sentence_right": "Upon inspection, we discovered that opendir was enabled on the C&C server as shown in Figure 13.", "label": "The adversary is trying to gather data of interest to their goal. Collection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "label_id": 589, "label_title": "Collection", "label_link": "https://attack.mitre.org/tactics/TA0009", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "exfiltrate the information by sending an HTTP POST request", "context_left": "The final unpacked payload, AZORult, will perform information stealing activities on the machine and", "context_right": "to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "_context_left": "The final unpacked payload, AZORult, will perform information stealing activities on the machine and ", "_context_right": " to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "sentence_left": "### **Network communication**", "sentence_right": "Upon inspection, we discovered that opendir was enabled on the C&C server as shown in Figure 13.", "label": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. Alternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)", "label_id": 48, "label_title": "Exfiltration Over Alternative Protocol", "label_link": "https://attack.mitre.org/techniques/T1048", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "Upon inspection, we discovered that opendir was enabled on the", "context_right": "server as shown in Figure 13.", "_context_left": "Upon inspection, we discovered that opendir was enabled on the ", "_context_right": " server as shown in Figure 13.", "sentence_left": "The final unpacked payload, AZORult, will perform information stealing activities on the machine and exfiltrate the information by sending an HTTP POST request to the URL: hxxp://crevisoft.net/images/backgrounds/ob/index.php", "sentence_right": "![Figure 13](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2013%20-%20opendir.png)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "*Figure 13: Opendir enabled on the", "context_right": "server.*", "_context_left": "*Figure 13: Opendir enabled on the ", "_context_right": " server.*", "sentence_left": "![Figure 13](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2013%20-%20opendir.png)", "sentence_right": "The AZORult panel on the C&C server can be accessed atthe URL:hxxp://crevisoft.net/images/backgrounds/ob/panel/admin.php.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "The", "context_right": "panel on the C&C server can be accessed atthe URL:hxxp://crevisoft.net/images/backgrounds/ob/panel/admin.php.", "_context_left": "The ", "_context_right": " panel on the C&C server can be accessed atthe URL:hxxp://crevisoft.net/images/backgrounds/ob/panel/admin.php.", "sentence_left": "*Figure 13: Opendir enabled on the C&C server.*", "sentence_right": "![Figure 14](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2014%20-%20panel.png)", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "The AZORult panel on the", "context_right": "server can be accessed atthe URL:hxxp://crevisoft.net/images/backgrounds/ob/panel/admin.php.", "_context_left": "The AZORult panel on the ", "_context_right": " server can be accessed atthe URL:hxxp://crevisoft.net/images/backgrounds/ob/panel/admin.php.", "sentence_left": "*Figure 13: Opendir enabled on the C&C server.*", "sentence_right": "![Figure 14](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2014%20-%20panel.png)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "*Figure 14: The", "context_right": "panel*", "_context_left": "*Figure 14: The ", "_context_right": " panel*", "sentence_left": "![Figure 14](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2014%20-%20panel.png)", "sentence_right": "###", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "Among other artifacts we discovered on the", "context_right": "server, we found a PHP mailing script deployed at hxxp://crevisoft[.]net/images/-/leaf.php.", "_context_left": "Among other artifacts we discovered on the ", "_context_right": " server, we found a PHP mailing script deployed at hxxp://crevisoft[.]net/images/-/leaf.php.", "sentence_left": "### **PHP mailer script**", "sentence_right": "This enables the threat actor to send emails using the C&C server’s SMTP.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "This enables the threat actor to send emails using the", "context_right": "server’s SMTP.", "_context_left": "This enables the threat actor to send emails using the ", "_context_right": " server’s SMTP.", "sentence_left": "Among other artifacts we discovered on the C&C server, we found a PHP mailing script deployed at hxxp://crevisoft[.]net/images/-/leaf.php.", "sentence_right": "![Figure 15](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2015%20-%20mailer%20script.png)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "send emails using the C&C server’s SMTP.", "context_left": "This enables the threat actor to", "context_right": "", "_context_left": "This enables the threat actor to ", "_context_right": "", "sentence_left": "Among other artifacts we discovered on the C&C server, we found a PHP mailing script deployed at hxxp://crevisoft[.]net/images/-/leaf.php.", "sentence_right": "![Figure 15](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2015%20-%20mailer%20script.png)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "*Figure 15: The PHP mailing script on the", "context_right": "server.*", "_context_left": "*Figure 15: The PHP mailing script on the ", "_context_right": " server.*", "sentence_left": "![Figure 15](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2015%20-%20mailer%20script.png)", "sentence_right": "###", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "PHP mailing script", "context_left": "*Figure 15: The", "context_right": "on the C&C server.*", "_context_left": "*Figure 15: The ", "_context_right": " on the C&C server.*", "sentence_left": "![Figure 15](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/oil_gas_dalma/Figure%2015%20-%20mailer%20script.png)", "sentence_right": "###", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "links embedded inside file formats such as PDF", "context_left": "And always be wary of", "context_right": "since these links could lead to download of malicious files on your system.", "_context_left": "And always be wary of ", "_context_right": " since these links could lead to download of malicious files on your system.", "sentence_left": "As always, users should be cautious when receiving emails out of the blue, even if those emails appear to be related to something you are interested in, such as a legal tender for a project which might appear relevant.", "sentence_right": "The Zscaler ThreatLabZ team will continue to monitor this campaign, as well as others, to help keep our customers safe.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1566.001 | Spearphishing Attachment", "context_left": "|", "context_right": "| Uses PDF attachments containing malicious URLs |", "_context_left": "| ", "_context_right": " | Uses PDF attachments containing malicious URLs |", "sentence_left": "| **ID** | **Tactic** | **Technique** |", "sentence_right": "| T1204.002 | User Execution: Malicious File | User opens pdf file.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Uses PDF attachments containing malicious URLs", "context_left": "| T1566.001 | Spearphishing Attachment |", "context_right": "|", "_context_left": "| T1566.001 | Spearphishing Attachment | ", "_context_right": " |", "sentence_left": "| **ID** | **Tactic** | **Technique** |", "sentence_right": "| T1204.002 | User Execution: Malicious File | User opens pdf file.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1204.002 | User Execution: Malicious File", "context_left": "|", "context_right": "| User opens pdf file.", "_context_left": "| ", "_context_right": " | User opens pdf file.", "sentence_left": "| T1566.001 | Spearphishing Attachment | Uses PDF attachments containing malicious URLs |", "sentence_right": "Click the URL link.", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "User opens pdf file.", "context_left": "| T1204.002 | User Execution: Malicious File |", "context_right": "", "_context_left": "| T1204.002 | User Execution: Malicious File | ", "_context_right": "", "sentence_left": "| T1566.001 | Spearphishing Attachment | Uses PDF attachments containing malicious URLs |", "sentence_right": "Click the URL link.", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Click the URL link.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "| T1204.002 | User Execution: Malicious File | User opens pdf file.", "sentence_right": "Downloads ZIP file.", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Downloads ZIP file.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Click the URL link.", "sentence_right": "Extracts zip file and executes the binary.", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "executes", "context_left": "Extracts zip file and", "context_right": "the binary.", "_context_left": "Extracts zip file and ", "_context_right": " the binary.", "sentence_left": "Downloads ZIP file.", "sentence_right": "|", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "File names used related to projects directly linked to the Middle East", "context_left": "| T1036.005  | Masquerading: Match Legitimate Name or Location |", "context_right": ".", "_context_left": "| T1036.005  | Masquerading: Match Legitimate Name or Location | ", "_context_right": ".", "sentence_left": "|", "sentence_right": "|", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1027.002  | Obfuscated Files or Information: Software Packing", "context_left": "|", "context_right": "| Payloads are packed with a multilayer packer.", "_context_left": "| ", "_context_right": " | Payloads are packed with a multilayer packer.", "sentence_left": "|", "sentence_right": "|", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Payloads are packed with a multilayer packer.", "context_left": "| T1027.002  | Obfuscated Files or Information: Software Packing |", "context_right": "", "_context_left": "| T1027.002  | Obfuscated Files or Information: Software Packing | ", "_context_right": "", "sentence_left": "|", "sentence_right": "|", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1497 | Virtualization/Sandbox Evasion", "context_left": "|", "context_right": "| Uses Registry, WMI, UserName-based anti-VM techniques |", "_context_left": "| ", "_context_right": " | Uses Registry, WMI, UserName-based anti-VM techniques |", "sentence_left": "|", "sentence_right": "| T1134.002 | Access Token Manipulation: Create Process with Token | One of AZORult capabilities |", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Uses Registry, WMI, UserName-based anti-VM techniques", "context_left": "| T1497 | Virtualization/Sandbox Evasion |", "context_right": "|", "_context_left": "| T1497 | Virtualization/Sandbox Evasion | ", "_context_right": " |", "sentence_left": "|", "sentence_right": "| T1134.002 | Access Token Manipulation: Create Process with Token | One of AZORult capabilities |", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1134.002 | Access Token Manipulation: Create Process with Token | One of", "context_right": "capabilities |", "_context_left": "| T1134.002 | Access Token Manipulation: Create Process with Token | One of ", "_context_right": " capabilities |", "sentence_left": "| T1497 | Virtualization/Sandbox Evasion | Uses Registry, WMI, UserName-based anti-VM techniques |", "sentence_right": "| T1555.003 | Credentials from Password Stores: Credentials from Web Browsers          | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1134.002 | Access Token Manipulation: Create Process with Token", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1497 | Virtualization/Sandbox Evasion | Uses Registry, WMI, UserName-based anti-VM techniques |", "sentence_right": "| T1555.003 | Credentials from Password Stores: Credentials from Web Browsers          | One of AZORult capabilities |", "label": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token. An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation) Any standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.", "label_id": 96, "label_title": "Access Token Manipulation", "label_link": "https://attack.mitre.org/techniques/T1134", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1555.003 | Credentials from Password Stores: Credentials from Web Browsers", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": "          | One of AZORult capabilities |", "sentence_left": "| T1134.002 | Access Token Manipulation: Create Process with Token | One of AZORult capabilities |", "sentence_right": "| T1140 | Deobfuscate/Decode Files or Information      | One of AZORult capabilities |", "label": "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.", "label_id": 18, "label_title": "Credentials from Password Stores", "label_link": "https://attack.mitre.org/techniques/T1555", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1555.003 | Credentials from Password Stores: Credentials from Web Browsers          | One of", "context_right": "capabilities |", "_context_left": "| T1555.003 | Credentials from Password Stores: Credentials from Web Browsers          | One of ", "_context_right": " capabilities |", "sentence_left": "| T1134.002 | Access Token Manipulation: Create Process with Token | One of AZORult capabilities |", "sentence_right": "| T1140 | Deobfuscate/Decode Files or Information      | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1140 | Deobfuscate/Decode Files or Information      | One of", "context_right": "capabilities |", "_context_left": "| T1140 | Deobfuscate/Decode Files or Information      | One of ", "_context_right": " capabilities |", "sentence_left": "| T1555.003 | Credentials from Password Stores: Credentials from Web Browsers          | One of AZORult capabilities |", "sentence_right": "| T1573.001 | Encrypted Channel: Symmetric Cryptography | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1573.001 | Encrypted Channel: Symmetric Cryptography", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1140 | Deobfuscate/Decode Files or Information      | One of AZORult capabilities |", "sentence_right": "| T1083 | File and Directory Discovery | One of AZORult capabilities |", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1573.001 | Encrypted Channel: Symmetric Cryptography | One of", "context_right": "capabilities |", "_context_left": "| T1573.001 | Encrypted Channel: Symmetric Cryptography | One of ", "_context_right": " capabilities |", "sentence_left": "| T1140 | Deobfuscate/Decode Files or Information      | One of AZORult capabilities |", "sentence_right": "| T1083 | File and Directory Discovery | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1083 | File and Directory Discovery", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1573.001 | Encrypted Channel: Symmetric Cryptography | One of AZORult capabilities |", "sentence_right": "| T1070.004 | Indicator Removal on Host: File Deletion | One of AZORult capabilities |", "label": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).", "label_id": 75, "label_title": "File and Directory Discovery", "label_link": "https://attack.mitre.org/techniques/T1083", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1083 | File and Directory Discovery | One of", "context_right": "capabilities |", "_context_left": "| T1083 | File and Directory Discovery | One of ", "_context_right": " capabilities |", "sentence_left": "| T1573.001 | Encrypted Channel: Symmetric Cryptography | One of AZORult capabilities |", "sentence_right": "| T1070.004 | Indicator Removal on Host: File Deletion | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1070.004 | Indicator Removal on Host: File Deletion", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1083 | File and Directory Discovery | One of AZORult capabilities |", "sentence_right": "| T1105 | Ingress Tool Transfer | One of AZORult capabilities |", "label": "Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as [Bash History](https://attack.mitre.org/techniques/T1552/003) and /var/log/*. These actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.", "label_id": 327, "label_title": "Indicator Removal on Host", "label_link": "https://attack.mitre.org/techniques/T1070", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1070.004 | Indicator Removal on Host: File Deletion | One of", "context_right": "capabilities |", "_context_left": "| T1070.004 | Indicator Removal on Host: File Deletion | One of ", "_context_right": " capabilities |", "sentence_left": "| T1083 | File and Directory Discovery | One of AZORult capabilities |", "sentence_right": "| T1105 | Ingress Tool Transfer | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1105 | Ingress Tool Transfer | One of", "context_right": "capabilities |", "_context_left": "| T1105 | Ingress Tool Transfer | One of ", "_context_right": " capabilities |", "sentence_left": "| T1070.004 | Indicator Removal on Host: File Deletion | One of AZORult capabilities |", "sentence_right": "| T1057 | Process Discovery | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1057 | Process Discovery", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1105 | Ingress Tool Transfer | One of AZORult capabilities |", "sentence_right": "| T1055.012 | Process Injection: Process Hollowing | One of AZORult capabilities |", "label": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. In Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.", "label_id": 20, "label_title": "Process Discovery", "label_link": "https://attack.mitre.org/techniques/T1057", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1057 | Process Discovery | One of", "context_right": "capabilities |", "_context_left": "| T1057 | Process Discovery | One of ", "_context_right": " capabilities |", "sentence_left": "| T1105 | Ingress Tool Transfer | One of AZORult capabilities |", "sentence_right": "| T1055.012 | Process Injection: Process Hollowing | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1055.012 | Process Injection: Process Hollowing | One of", "context_right": "capabilities |", "_context_left": "| T1055.012 | Process Injection: Process Hollowing | One of ", "_context_right": " capabilities |", "sentence_left": "| T1057 | Process Discovery | One of AZORult capabilities |", "sentence_right": "| T1012 | Query Registry  | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1012 | Query Registry  | One of", "context_right": "capabilities |", "_context_left": "| T1012 | Query Registry  | One of ", "_context_right": " capabilities |", "sentence_left": "| T1055.012 | Process Injection: Process Hollowing | One of AZORult capabilities |", "sentence_right": "| T1113 | Screen Capture | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1113 | Screen Capture", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1012 | Query Registry  | One of AZORult capabilities |", "sentence_right": "| T1082 | System Information Discovery | One of AZORult capabilities |", "label": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)", "label_id": 26, "label_title": "Screen Capture", "label_link": "https://attack.mitre.org/techniques/T1113", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1113 | Screen Capture | One of", "context_right": "capabilities |", "_context_left": "| T1113 | Screen Capture | One of ", "_context_right": " capabilities |", "sentence_left": "| T1012 | Query Registry  | One of AZORult capabilities |", "sentence_right": "| T1082 | System Information Discovery | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1082 | System Information Discovery", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1113 | Screen Capture | One of AZORult capabilities |", "sentence_right": "| T1016 | System Network Configuration Discovery | One of AZORult capabilities |", "label": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)", "label_id": 550, "label_title": "System Information Discovery", "label_link": "https://attack.mitre.org/techniques/T1082", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1082 | System Information Discovery | One of", "context_right": "capabilities |", "_context_left": "| T1082 | System Information Discovery | One of ", "_context_right": " capabilities |", "sentence_left": "| T1113 | Screen Capture | One of AZORult capabilities |", "sentence_right": "| T1016 | System Network Configuration Discovery | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1016 | System Network Configuration Discovery", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1082 | System Information Discovery | One of AZORult capabilities |", "sentence_right": "| T1033 | System Owner/User Discovery | One of AZORult capabilities |", "label": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103). Adversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next.", "label_id": 95, "label_title": "System Network Configuration Discovery", "label_link": "https://attack.mitre.org/techniques/T1016", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1016 | System Network Configuration Discovery | One of", "context_right": "capabilities |", "_context_left": "| T1016 | System Network Configuration Discovery | One of ", "_context_right": " capabilities |", "sentence_left": "| T1082 | System Information Discovery | One of AZORult capabilities |", "sentence_right": "| T1033 | System Owner/User Discovery | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1033 | System Owner/User Discovery", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1016 | System Network Configuration Discovery | One of AZORult capabilities |", "sentence_right": "| T1124 | System Time Discovery | One of AZORult capabilities |", "label": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Various utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.", "label_id": 78, "label_title": "System Owner/User Discovery", "label_link": "https://attack.mitre.org/techniques/T1033", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1033 | System Owner/User Discovery | One of", "context_right": "capabilities |", "_context_left": "| T1033 | System Owner/User Discovery | One of ", "_context_right": " capabilities |", "sentence_left": "| T1016 | System Network Configuration Discovery | One of AZORult capabilities |", "sentence_right": "| T1124 | System Time Discovery | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1124 | System Time Discovery", "context_left": "|", "context_right": "| One of AZORult capabilities |", "_context_left": "| ", "_context_right": " | One of AZORult capabilities |", "sentence_left": "| T1033 | System Owner/User Discovery | One of AZORult capabilities |", "sentence_right": "| T1552.001 | Unsecured Credentials: Credentials In Files | One of AZORult capabilities |", "label": "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time) (Citation: Technet Windows Time Service) System time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>. (Citation: Technet Windows Time Service) This information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) (Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)", "label_id": 404, "label_title": "System Time Discovery", "label_link": "https://attack.mitre.org/techniques/T1124", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1124 | System Time Discovery | One of", "context_right": "capabilities |", "_context_left": "| T1124 | System Time Discovery | One of ", "_context_right": " capabilities |", "sentence_left": "| T1033 | System Owner/User Discovery | One of AZORult capabilities |", "sentence_right": "| T1552.001 | Unsecured Credentials: Credentials In Files | One of AZORult capabilities |", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "T1552.001 | Unsecured Credentials: Credentials", "context_left": "|", "context_right": "In Files | One of AZORult capabilities |", "_context_left": "| ", "_context_right": " In Files | One of AZORult capabilities |", "sentence_left": "| T1124 | System Time Discovery | One of AZORult capabilities |", "sentence_right": "### **Indicators of compromise**", "label": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).", "label_id": 125, "label_title": "Unsecured Credentials", "label_link": "https://attack.mitre.org/techniques/T1552", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "AZORult", "context_left": "| T1552.001 | Unsecured Credentials: Credentials In Files | One of", "context_right": "capabilities |", "_context_left": "| T1552.001 | Unsecured Credentials: Credentials In Files | One of ", "_context_right": " capabilities |", "sentence_left": "| T1124 | System Time Discovery | One of AZORult capabilities |", "sentence_right": "### **Indicators of compromise**", "label": "Vidar", "label_id": 1396, "label_title": "Vidar", "label_link": "http://www.bosch.com#node1fvup9pj1x20", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "*Scheduled task names", "context_left": "*", "context_right": "**", "_context_left": "*", "_context_right": "**", "sentence_left": "### **Indicators of compromise**", "sentence_right": "**Naming convention**: “Updates\\<random\\_string>”", "label": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security) Adversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).", "label_id": 17, "label_title": "Scheduled Task/Job", "label_link": "https://attack.mitre.org/techniques/T1053", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "Scheduled tasks are created", "context_left": "", "context_right": "using dropped XML files in %temp% directory with random names.", "_context_left": "", "_context_right": " using dropped XML files in %temp% directory with random names.", "sentence_left": "**XML file names**", "sentence_right": "C:\\Users\\user\\AppData\\Local\\Temp\\tmp9AA2.tmp", "label": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security) Adversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).", "label_id": 17, "label_title": "Scheduled Task/Job", "label_link": "https://attack.mitre.org/techniques/T1053", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "as a scheduled task.", "context_left": "Files are dropped in the “AppData\\Roaming” directory with the same name", "context_right": "", "_context_left": "Files are dropped in the “AppData\\Roaming” directory with the same name ", "_context_right": "", "sentence_left": "**Dropped filenames**", "sentence_right": "C:\\Users\\User\\AppData\\Roaming\\YJSlNpkH.Exe", "label": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security) Adversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges).", "label_id": 17, "label_title": "Scheduled Task/Job", "label_link": "https://attack.mitre.org/techniques/T1053", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}
{"mention": "C&C", "context_left": "**", "context_right": "servers**", "_context_left": "**", "_context_right": " servers**", "sentence_left": "AJC-QA HAMAD INTERNATIONAL AIRPORT EXPANSION, DOHA.pdf", "sentence_right": "hxxp://crevisoft[.]net/images/backgrounds/ob/index.php", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-09-29_targeted-attacks-oil-and-gas"}