{"mention": "sent this malspam campaign", "context_left": "The threat actor that", "context_right": "demonstrated good operational security (OPSEC) by hiding their infrastructure behind professional bulletproof hosting (BPH) services and by filtering traffic to hide final payloads from curious researchers.", "_context_left": "The threat actor that ", "_context_right": " demonstrated good operational security (OPSEC) by hiding their infrastructure behind professional bulletproof hosting (BPH) services and by filtering traffic to hide final payloads from curious researchers.", "sentence_left": "-------", "sentence_right": "The actor used a series of tools in this operation, including KeitaroTDS, a malicious Microsoft Excel spreadsheet document builder and the Zloader banking trojan (aka Terdot).", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "The actor used a series of tools in this operation, including KeitaroTDS, a malicious Microsoft Excel spreadsheet document builder and the", "context_right": "banking trojan (aka Terdot).", "_context_left": "The actor used a series of tools in this operation, including KeitaroTDS, a malicious Microsoft Excel spreadsheet document builder and the ", "_context_right": " banking trojan (aka Terdot).", "sentence_left": "The threat actor that sent this malspam campaign demonstrated good operational security (OPSEC) by hiding their infrastructure behind professional bulletproof hosting (BPH) services and by filtering traffic to hide final payloads from curious researchers.", "sentence_right": "Considering the nature of the malspam documents (usually named “Invoice”) and the use of a banking trojan, we assess the intended goal of the attackers was to make unauthorized bank transfers from victim accounts.", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Terdot", "context_left": "The actor used a series of tools in this operation, including KeitaroTDS, a malicious Microsoft Excel spreadsheet document builder and the Zloader banking trojan (aka", "context_right": ").", "_context_left": "The actor used a series of tools in this operation, including KeitaroTDS, a malicious Microsoft Excel spreadsheet document builder and the Zloader banking trojan (aka ", "_context_right": ").", "sentence_left": "The threat actor that sent this malspam campaign demonstrated good operational security (OPSEC) by hiding their infrastructure behind professional bulletproof hosting (BPH) services and by filtering traffic to hide final payloads from curious researchers.", "sentence_right": "Considering the nature of the malspam documents (usually named “Invoice”) and the use of a banking trojan, we assess the intended goal of the attackers was to make unauthorized bank transfers from victim accounts.", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "a malicious Microsoft Excel spreadsheet document builder", "context_left": "The actor used a series of tools in this operation, including KeitaroTDS,", "context_right": "and the Zloader banking trojan (aka Terdot).", "_context_left": "The actor used a series of tools in this operation, including KeitaroTDS, ", "_context_right": " and the Zloader banking trojan (aka Terdot).", "sentence_left": "The threat actor that sent this malspam campaign demonstrated good operational security (OPSEC) by hiding their infrastructure behind professional bulletproof hosting (BPH) services and by filtering traffic to hide final payloads from curious researchers.", "sentence_right": "Considering the nature of the malspam documents (usually named “Invoice”) and the use of a banking trojan, we assess the intended goal of the attackers was to make unauthorized bank transfers from victim accounts.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "the malspam documents", "context_left": "Considering the nature of", "context_right": "(usually named “Invoice”) and the use of a banking trojan, we assess the intended goal of the attackers was to make unauthorized bank transfers from victim accounts.", "_context_left": "Considering the nature of ", "_context_right": " (usually named “Invoice”) and the use of a banking trojan, we assess the intended goal of the attackers was to make unauthorized bank transfers from victim accounts.", "sentence_left": "The actor used a series of tools in this operation, including KeitaroTDS, a malicious Microsoft Excel spreadsheet document builder and the Zloader banking trojan (aka Terdot).", "sentence_right": "Email details", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "download and execute the secondary stage payload.", "context_left": "The document implemented malicious Excel 4.0 Macros (XLM) to", "context_right": "", "_context_left": "The document implemented malicious Excel 4.0 Macros (XLM) to ", "_context_right": "", "sentence_left": "| Author | N/A |", "sentence_right": "These macros were present in a hidden sheet named \"DiOAFArhpr\".", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "document implemented malicious Excel 4.0 Macros (XLM)", "context_left": "The", "context_right": "to download and execute the secondary stage payload.", "_context_left": "The ", "_context_right": " to download and execute the secondary stage payload.", "sentence_left": "| Author | N/A |", "sentence_right": "These macros were present in a hidden sheet named \"DiOAFArhpr\".", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "macros were present in a hidden sheet", "context_left": "These", "context_right": "named \"DiOAFArhpr\".", "_context_left": "These ", "_context_right": " named \"DiOAFArhpr\".", "sentence_left": "The document implemented malicious Excel 4.0 Macros (XLM) to download and execute the secondary stage payload.", "sentence_right": "The macros were written vertically, character-by-character inside different cells.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "macros were written vertically, character-by-character inside different cells.", "context_left": "The", "context_right": "", "_context_left": "The ", "_context_right": "", "sentence_left": "These macros were present in a hidden sheet named \"DiOAFArhpr\".", "sentence_right": "This approach was employed to bypass detection since analysis tools can fail to retrieve the command strings.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "employed to bypass detection since analysis tools can fail to retrieve the command strings.", "context_left": "This approach was", "context_right": "", "_context_left": "This approach was ", "_context_right": "", "sentence_left": "The macros were written vertically, character-by-character inside different cells.", "sentence_right": "![](https://d39ec1uo9ktrut.cloudfront.net/pasted-image-0-1-300x163.png)", "label": "The adversary is trying to avoid being detected. Defense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses.", "label_id": 578, "label_title": "Defense Evasion", "label_link": "https://attack.mitre.org/tactics/TA0005", "entity_class": "CI", "entity_type": "TACTIC", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "executed macros were", "context_left": "The", "context_right": ":", "_context_left": "The ", "_context_right": ":", "sentence_left": "![](https://d39ec1uo9ktrut.cloudfront.net/pasted-image-0-1-300x163.png)", "sentence_right": "|", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "executed macros were", "context_left": "The", "context_right": ":", "_context_left": "The ", "_context_right": ":", "sentence_left": "![](https://d39ec1uo9ktrut.cloudfront.net/pasted-image-0-1-300x163.png)", "sentence_right": "|", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "\"C:\\Windows\\system32\\rundll32.exe\",", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "=CALL(\"Shell32\",\"ShellExecuteA\",\"JJCCCJJ\",0,\"open\",", "sentence_right": "\"c:\\Users\\Public\\fef2fff.html,DllRegisterServer\",0,5)", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "downloaded a dynamic link library (DLL) from a public repository.", "context_left": "As shown in the HTTP request below, the malicious server performed a redirection to the GitHub software development platform (GitHub was advised) and", "context_right": "", "_context_left": "As shown in the HTTP request below, the malicious server performed a redirection to the GitHub software development platform (GitHub was advised) and ", "_context_right": "", "sentence_left": "The DLL at the location hxxps://grpxmqnrb[.]pw/egrg4g3g was retrieved and saved under \"C:\\Users\\Public\\fef2fff.html\" before being executed.", "sentence_right": "| GET /egrg4g3g HTTP/1.1Host: grpxmqnrb[.]pwUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)Accept: */*HTTP/1.1 302 FoundServer: nginxDate: Tue, 24 Mar 2020 13:00:34 GMTContent-Type: text/html; charset=UTF-8Content-Length: 0Connection: keep-aliveCache-Control: no-cache, no-store, must-revalidate,post-check=0,pre-check=0Expires: 0Last-Modified: Tue, 24 Mar 2020 13:00:34 GMT**Location: hxxps://github[.]com/arntsonl/calc\\\\_security\\\\_poc/raw/master/dll/calc.dll**Pragma: no-cacheSet-Cookie: \\\\_subid=357bngnes3kqn;Expires=Friday, 24-Apr-2020 13:00:34 GMT;Max-Age=2678400;Path=/X-Content-Type-Options: nosniff |", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "| wgyvjbse[.]pw | 2020-03-18 14:45:51 | Confirmed", "context_right": "controller domain name |", "_context_left": "| wgyvjbse[.]pw | 2020-03-18 14:45:51 | Confirmed ", "_context_right": " controller domain name |", "sentence_left": "| wgyafqtc[.]online | 2020-03-18 15:30:23 | Associated with similar Excel doc based campaign:  |", "sentence_right": "| botiq[.]xyz | 2020-03-18 14:46:16 | Confirmed Zloader controller domain name |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "| botiq[.]xyz | 2020-03-18 14:46:16 | Confirmed", "context_right": "controller domain name |", "_context_left": "| botiq[.]xyz | 2020-03-18 14:46:16 | Confirmed ", "_context_right": " controller domain name |", "sentence_left": "| wgyvjbse[.]pw | 2020-03-18 14:45:51 | Confirmed Zloader controller domain name |", "sentence_right": "| dhteijwrb[.]host | 2020-03-17 07:55:04 | Linked directly to a very similar campaign: .", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "| siloban[.]pw | 2020-03-17 07:54:50 | Linked to [161.117.177[.]248](https://www.virustotal.com/gui/ip-address/161.117.177.248) which is a confirmed", "context_right": "controller address and part of yalishanda’s fast-flux bulletproof hosting infrastructure.", "_context_left": "| siloban[.]pw | 2020-03-17 07:54:50 | Linked to [161.117.177[.]248](https://www.virustotal.com/gui/ip-address/161.117.177.248) which is a confirmed ", "_context_right": " controller address and part of yalishanda’s fast-flux bulletproof hosting infrastructure.", "sentence_left": "|", "sentence_right": "Also a confirmed Zloader controller domain name.", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader controller address", "context_left": "| siloban[.]pw | 2020-03-17 07:54:50 | Linked to [161.117.177[.]248](https://www.virustotal.com/gui/ip-address/161.117.177.248) which is a confirmed", "context_right": "and part of yalishanda’s fast-flux bulletproof hosting infrastructure.", "_context_left": "| siloban[.]pw | 2020-03-17 07:54:50 | Linked to [161.117.177[.]248](https://www.virustotal.com/gui/ip-address/161.117.177.248) which is a confirmed ", "_context_right": " and part of yalishanda’s fast-flux bulletproof hosting infrastructure.", "sentence_left": "|", "sentence_right": "Also a confirmed Zloader controller domain name.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "Also a confirmed", "context_right": "controller domain name.", "_context_left": "Also a confirmed ", "_context_right": " controller domain name.", "sentence_left": "| siloban[.]pw | 2020-03-17 07:54:50 | Linked to [161.117.177[.]248](https://www.virustotal.com/gui/ip-address/161.117.177.248) which is a confirmed Zloader controller address and part of yalishanda’s fast-flux bulletproof hosting infrastructure.", "sentence_right": "|", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "file invoice-522.xls", "context_left": "The", "context_right": "(SHA256: 34c5591a749636853aef4f9b3867560319d78ab530a332575fee88a85287dcfa) was analyzed on the VirusTotal intelligence platform and found to communicate with the same IP address, although via a different domain and file path.", "_context_left": "The ", "_context_right": " (SHA256: 34c5591a749636853aef4f9b3867560319d78ab530a332575fee88a85287dcfa) was analyzed on the VirusTotal intelligence platform and found to communicate with the same IP address, although via a different domain and file path.", "sentence_left": "We initially were unable to download the intended payload from hxxps://grpxmqnrb[.]pw/egrg4g3g, but by following the trail of infrastructure and record of activity, we were able to reproduce the steps and continue the investigation.", "sentence_right": "This likely is a previous campaign by the same threat actor or group.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "payload that contacted some unknown controllers", "context_left": "They received a", "context_right": ":", "_context_left": "They received a ", "_context_right": ":", "sentence_left": "This payload is an exact match of the one received by Amirreza Niakanlahiji and Pedram Amini in their blog post on a previous campaign from the same actors (see: ).", "sentence_right": "* hxxps://aquolepp[.]pw/milagrecf.php", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "We recognized these as", "context_right": "control server addresses because they are re-using the milagrecf.php file path for their controller URLs.", "_context_left": "We recognized these as ", "_context_right": " control server addresses because they are re-using the milagrecf.php file path for their controller URLs.", "sentence_left": "* hxxps://dhteijwrb[.]host/milagrecf.php", "sentence_right": "Was it possible our campaign was unrelated.", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader control server addresses because they are re-using the milagrecf.php file path for their controller URLs.", "context_left": "We recognized these as", "context_right": "", "_context_left": "We recognized these as ", "_context_right": "", "sentence_left": "* hxxps://dhteijwrb[.]host/milagrecf.php", "sentence_right": "Was it possible our campaign was unrelated.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel documents", "context_left": "Most of these domains can be linked to", "context_right": "apparently created by the same malicious document builder.", "_context_left": "Most of these domains can be linked to ", "_context_right": " apparently created by the same malicious document builder.", "sentence_left": "The pattern of behavior is becoming clear.", "sentence_right": "Based on the research, we can attribute some TTPs to this threat actor.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious document builder.", "context_left": "Most of these domains can be linked to malicious Excel documents apparently created by the same", "context_right": "", "_context_left": "Most of these domains can be linked to malicious Excel documents apparently created by the same ", "_context_right": "", "sentence_left": "The pattern of behavior is becoming clear.", "sentence_right": "Based on the research, we can attribute some TTPs to this threat actor.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "documents for malspam campaigns.", "context_left": "* Using a malicious Excel document builder to craft", "context_right": "", "_context_left": "* Using a malicious Excel document builder to craft ", "_context_right": "", "sentence_left": "See Brian Krebs’ blog post on yalishanda [here](https://krebsonsecurity.com/2019/07/meet-the-worlds-biggest-bulletproof-hoster/).", "sentence_right": "* Using KeitaroTDS for routing traffic and controlling campaign infrastructure.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel document builder to craft documents for malspam campaigns.", "context_left": "* Using a", "context_right": "", "_context_left": "* Using a ", "_context_right": "", "sentence_left": "See Brian Krebs’ blog post on yalishanda [here](https://krebsonsecurity.com/2019/07/meet-the-worlds-biggest-bulletproof-hoster/).", "sentence_right": "* Using KeitaroTDS for routing traffic and controlling campaign infrastructure.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "* Using", "context_right": "banking trojan for establishing control on victim machines and staging additional payloads such as hidden virtual network computing (HVNC) and launching web-injects.", "_context_left": "* Using ", "_context_right": " banking trojan for establishing control on victim machines and staging additional payloads such as hidden virtual network computing (HVNC) and launching web-injects.", "sentence_left": "* Using KeitaroTDS for routing traffic and controlling campaign infrastructure.", "sentence_right": "* Using legitimate secure sockets layer (SSL) certificates signed by Let’s Encrypt.", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "establishing control on victim machines and staging additional payloads", "context_left": "* Using Zloader banking trojan for", "context_right": "such as hidden virtual network computing (HVNC) and launching web-injects.", "_context_left": "* Using Zloader banking trojan for ", "_context_right": " such as hidden virtual network computing (HVNC) and launching web-injects.", "sentence_left": "* Using KeitaroTDS for routing traffic and controlling campaign infrastructure.", "sentence_right": "* Using legitimate secure sockets layer (SSL) certificates signed by Let’s Encrypt.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "from malicious Excel document", "context_left": "| Download link", "context_right": "| hxxps://wgyafqtc[.]online/fgwg24g24g |", "_context_left": "| Download link ", "_context_right": " | hxxps://wgyafqtc[.]online/fgwg24g24g |", "sentence_left": "| **Context** | **Indicator** |", "sentence_right": "| Download link from malicious Excel document | hxxps://tdvomds[.]pw/fgwg24g24g |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "from malicious Excel document", "context_left": "| Download link", "context_right": "| hxxps://tdvomds[.]pw/fgwg24g24g |", "_context_left": "| Download link ", "_context_right": " | hxxps://tdvomds[.]pw/fgwg24g24g |", "sentence_left": "| Download link from malicious Excel document | hxxps://wgyafqtc[.]online/fgwg24g24g |", "sentence_right": "| Download link from malicious Excel document | hxxp://tdvomds[.]pw/12341324rfefv |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "from malicious Excel document", "context_left": "| Download link", "context_right": "| hxxp://tdvomds[.]pw/12341324rfefv |", "_context_left": "| Download link ", "_context_right": " | hxxp://tdvomds[.]pw/12341324rfefv |", "sentence_left": "| Download link from malicious Excel document | hxxps://tdvomds[.]pw/fgwg24g24g |", "sentence_right": "| Download link from malicious Excel document | hxxps://tdvomds[.]pw/12341324rfefv |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel document", "context_left": "| Download link from", "context_right": "| hxxps://tdvomds[.]pw/12341324rfefv |", "_context_left": "| Download link from ", "_context_right": " | hxxps://tdvomds[.]pw/12341324rfefv |", "sentence_left": "| Download link from malicious Excel document | hxxp://tdvomds[.]pw/12341324rfefv |", "sentence_right": "| Download link from malicious Excel document | hxxps://hxzfvomd[.]buzz/asf2f1ff |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel document", "context_left": "| Download link from", "context_right": "| hxxps://hxzfvomd[.]buzz/asf2f1ff |", "_context_left": "| Download link from ", "_context_right": " | hxxps://hxzfvomd[.]buzz/asf2f1ff |", "sentence_left": "| Download link from malicious Excel document | hxxps://tdvomds[.]pw/12341324rfefv |", "sentence_right": "| Download link from malicious Excel document | hxxp://hxzfvomd[.]buzz/asf2f1ff |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel document", "context_left": "| Download link from", "context_right": "| hxxp://hxzfvomd[.]buzz/asf2f1ff |", "_context_left": "| Download link from ", "_context_right": " | hxxp://hxzfvomd[.]buzz/asf2f1ff |", "sentence_left": "| Download link from malicious Excel document | hxxps://hxzfvomd[.]buzz/asf2f1ff |", "sentence_right": "| Download link from malicious Excel document | hxxp://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel document", "context_left": "| Download link from", "context_right": "| hxxp://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "_context_left": "| Download link from ", "_context_right": " | hxxp://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "sentence_left": "| Download link from malicious Excel document | hxxp://hxzfvomd[.]buzz/asf2f1ff |", "sentence_right": "| Download link from malicious Excel document | hxxps://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel document", "context_left": "| Download link from", "context_right": "| hxxps://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "_context_left": "| Download link from ", "_context_right": " | hxxps://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "sentence_left": "| Download link from malicious Excel document | hxxp://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "sentence_right": "| Download link from malicious Excel document | hxxp://wrjmkdod[.]xyz/SDFwef2fvbbe |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "malicious Excel document", "context_left": "| Download link from", "context_right": "| hxxp://wrjmkdod[.]xyz/SDFwef2fvbbe |", "_context_left": "| Download link from ", "_context_right": " | hxxp://wrjmkdod[.]xyz/SDFwef2fvbbe |", "sentence_left": "| Download link from malicious Excel document | hxxps://pjtcdnrd[.]pw/fsgbfgbfsg43 |", "sentence_right": "| Yalishanda bulletproof hosting IP | 8.208.28[.]247 |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://aquolepp[.]pw/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://aquolepp[.]pw/milagrecf.php |", "sentence_left": "| Yalishanda bulletproof hosting IP | 161.117.177[.]248 |", "sentence_right": "| Zloader controller URL | hxxps://barbeyo[.]xyz/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://barbeyo[.]xyz/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://barbeyo[.]xyz/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://aquolepp[.]pw/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://bhajkqmd[.]xyz/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://bhajkqmd[.]xyz/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://bhajkqmd[.]xyz/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://barbeyo[.]xyz/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://botiq[.]xyz/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://botiq[.]xyz/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://botiq[.]xyz/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://bhajkqmd[.]xyz/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://buhjike[.]host/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://buhjike[.]host/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://buhjike[.]host/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://botiq[.]xyz/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://bwambztl[.]xyz/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://bwambztl[.]xyz/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://bwambztl[.]xyz/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://buhjike[.]host/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://dhteijwrb[.]host/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://dhteijwrb[.]host/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://dhteijwrb[.]host/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://bwambztl[.]xyz/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://rizoqur[.]pw/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://rizoqur[.]pw/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://rizoqur[.]pw/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://dhteijwrb[.]host/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://siloban[.]pw/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://siloban[.]pw/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://siloban[.]pw/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://rizoqur[.]pw/milagrecf.php |", "sentence_right": "| Zloader controller URL | hxxps://wgyvjbse[.]pw/milagrecf.php |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "controller URL | hxxps://wgyvjbse[.]pw/milagrecf.php |", "_context_left": "| ", "_context_right": " controller URL | hxxps://wgyvjbse[.]pw/milagrecf.php |", "sentence_left": "| Zloader controller URL | hxxps://siloban[.]pw/milagrecf.php |", "sentence_right": "| Malicious Excel document sample | cfe139d639d461fe731427e79bd7048849080d4d7d906d10fae764eb056f1f0b |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Malicious Excel document sample", "context_left": "|", "context_right": "| cfe139d639d461fe731427e79bd7048849080d4d7d906d10fae764eb056f1f0b |", "_context_left": "| ", "_context_right": " | cfe139d639d461fe731427e79bd7048849080d4d7d906d10fae764eb056f1f0b |", "sentence_left": "| Zloader controller URL | hxxps://wgyvjbse[.]pw/milagrecf.php |", "sentence_right": "| Malicious Excel document sample | f1ced9008d9de4109844d99fc924b6e3e4a4062ed37b52ce4b5baed430d004cf |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Malicious Excel document sample", "context_left": "|", "context_right": "| f1ced9008d9de4109844d99fc924b6e3e4a4062ed37b52ce4b5baed430d004cf |", "_context_left": "| ", "_context_right": " | f1ced9008d9de4109844d99fc924b6e3e4a4062ed37b52ce4b5baed430d004cf |", "sentence_left": "| Malicious Excel document sample | cfe139d639d461fe731427e79bd7048849080d4d7d906d10fae764eb056f1f0b |", "sentence_right": "| Malicious Excel document sample | 4a5d8cde14f9e8c4f1a0cf514ca084528631d6caa8aa5282a4bf8f58dbf54f33 |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Malicious Excel document sample", "context_left": "|", "context_right": "| 4a5d8cde14f9e8c4f1a0cf514ca084528631d6caa8aa5282a4bf8f58dbf54f33 |", "_context_left": "| ", "_context_right": " | 4a5d8cde14f9e8c4f1a0cf514ca084528631d6caa8aa5282a4bf8f58dbf54f33 |", "sentence_left": "| Malicious Excel document sample | f1ced9008d9de4109844d99fc924b6e3e4a4062ed37b52ce4b5baed430d004cf |", "sentence_right": "| Malicious Excel document sample | 9e5edda543358b7ead2614ff75e23d2c271cb917a89003fa8733d9d730950507 |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Malicious Excel document sample", "context_left": "|", "context_right": "| 9e5edda543358b7ead2614ff75e23d2c271cb917a89003fa8733d9d730950507 |", "_context_left": "| ", "_context_right": " | 9e5edda543358b7ead2614ff75e23d2c271cb917a89003fa8733d9d730950507 |", "sentence_left": "| Malicious Excel document sample | 4a5d8cde14f9e8c4f1a0cf514ca084528631d6caa8aa5282a4bf8f58dbf54f33 |", "sentence_right": "| Malicious Excel document sample | 30175739414fa301617ed6f0234992f1b3bc67a8547185cd332ad42c5a170486 |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Malicious Excel document sample", "context_left": "|", "context_right": "| 30175739414fa301617ed6f0234992f1b3bc67a8547185cd332ad42c5a170486 |", "_context_left": "| ", "_context_right": " | 30175739414fa301617ed6f0234992f1b3bc67a8547185cd332ad42c5a170486 |", "sentence_left": "| Malicious Excel document sample | 9e5edda543358b7ead2614ff75e23d2c271cb917a89003fa8733d9d730950507 |", "sentence_right": "| Malicious Excel document sample | 34c5591a749636853aef4f9b3867560319d78ab530a332575fee88a85287dcfa |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Malicious Excel document sample", "context_left": "|", "context_right": "| 34c5591a749636853aef4f9b3867560319d78ab530a332575fee88a85287dcfa |", "_context_left": "| ", "_context_right": " | 34c5591a749636853aef4f9b3867560319d78ab530a332575fee88a85287dcfa |", "sentence_left": "| Malicious Excel document sample | 30175739414fa301617ed6f0234992f1b3bc67a8547185cd332ad42c5a170486 |", "sentence_right": "| Zloader malware sample | 8021084f2d006101e0522f62de9c1e22ec55a6639e792dc7eff2826c013597a9 |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | 8021084f2d006101e0522f62de9c1e22ec55a6639e792dc7eff2826c013597a9 |", "_context_left": "| ", "_context_right": " malware sample | 8021084f2d006101e0522f62de9c1e22ec55a6639e792dc7eff2826c013597a9 |", "sentence_left": "| Malicious Excel document sample | 34c5591a749636853aef4f9b3867560319d78ab530a332575fee88a85287dcfa |", "sentence_right": "| Zloader malware sample | e81d729e1b810215940eb96e1de3e9500f522e9ba16bca2f9d49113fb462bb4d |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | e81d729e1b810215940eb96e1de3e9500f522e9ba16bca2f9d49113fb462bb4d |", "_context_left": "| ", "_context_right": " malware sample | e81d729e1b810215940eb96e1de3e9500f522e9ba16bca2f9d49113fb462bb4d |", "sentence_left": "| Zloader malware sample | 8021084f2d006101e0522f62de9c1e22ec55a6639e792dc7eff2826c013597a9 |", "sentence_right": "| Zloader malware sample | 0889271c721391d625a19391275f0e6bf244a5548a1a6eb673c6e16a48e960e1 |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | 0889271c721391d625a19391275f0e6bf244a5548a1a6eb673c6e16a48e960e1 |", "_context_left": "| ", "_context_right": " malware sample | 0889271c721391d625a19391275f0e6bf244a5548a1a6eb673c6e16a48e960e1 |", "sentence_left": "| Zloader malware sample | e81d729e1b810215940eb96e1de3e9500f522e9ba16bca2f9d49113fb462bb4d |", "sentence_right": "| Zloader malware sample | 3703d42ee0a6c4115295f14f3980cf205f7e6fb77ed0301c845431728015c812 |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | 3703d42ee0a6c4115295f14f3980cf205f7e6fb77ed0301c845431728015c812 |", "_context_left": "| ", "_context_right": " malware sample | 3703d42ee0a6c4115295f14f3980cf205f7e6fb77ed0301c845431728015c812 |", "sentence_left": "| Zloader malware sample | 0889271c721391d625a19391275f0e6bf244a5548a1a6eb673c6e16a48e960e1 |", "sentence_right": "| Zloader malware sample | 3f2cf070e3740514c4e0dd431392a6727250a9ad3425c5b25ffad2d9d3b74716 |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | 3f2cf070e3740514c4e0dd431392a6727250a9ad3425c5b25ffad2d9d3b74716 |", "_context_left": "| ", "_context_right": " malware sample | 3f2cf070e3740514c4e0dd431392a6727250a9ad3425c5b25ffad2d9d3b74716 |", "sentence_left": "| Zloader malware sample | 3703d42ee0a6c4115295f14f3980cf205f7e6fb77ed0301c845431728015c812 |", "sentence_right": "| Zloader malware sample | 66f49a261b6086dfdd1c3e2a21f7cb746aa35707490cbd64693d66383ba54c64 |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | 66f49a261b6086dfdd1c3e2a21f7cb746aa35707490cbd64693d66383ba54c64 |", "_context_left": "| ", "_context_right": " malware sample | 66f49a261b6086dfdd1c3e2a21f7cb746aa35707490cbd64693d66383ba54c64 |", "sentence_left": "| Zloader malware sample | 3f2cf070e3740514c4e0dd431392a6727250a9ad3425c5b25ffad2d9d3b74716 |", "sentence_right": "| Zloader malware sample | 776fee630d6f89a7a01c5903de93fbd9f12f5cba8df148330a8c6f0cd267890b |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | 776fee630d6f89a7a01c5903de93fbd9f12f5cba8df148330a8c6f0cd267890b |", "_context_left": "| ", "_context_right": " malware sample | 776fee630d6f89a7a01c5903de93fbd9f12f5cba8df148330a8c6f0cd267890b |", "sentence_left": "| Zloader malware sample | 66f49a261b6086dfdd1c3e2a21f7cb746aa35707490cbd64693d66383ba54c64 |", "sentence_right": "| Zloader malware sample | 945e3e4f52d30e07a281b20f96bf7150234c18aa4373c683dee74a194b57dcc0 |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | 945e3e4f52d30e07a281b20f96bf7150234c18aa4373c683dee74a194b57dcc0 |", "_context_left": "| ", "_context_right": " malware sample | 945e3e4f52d30e07a281b20f96bf7150234c18aa4373c683dee74a194b57dcc0 |", "sentence_left": "| Zloader malware sample | 776fee630d6f89a7a01c5903de93fbd9f12f5cba8df148330a8c6f0cd267890b |", "sentence_right": "| Zloader malware sample | a347f8b4a17dffa05a4fe9602cf99302201220e7000b5826798dd3d8db7b2b7f |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | a347f8b4a17dffa05a4fe9602cf99302201220e7000b5826798dd3d8db7b2b7f |", "_context_left": "| ", "_context_right": " malware sample | a347f8b4a17dffa05a4fe9602cf99302201220e7000b5826798dd3d8db7b2b7f |", "sentence_left": "| Zloader malware sample | 945e3e4f52d30e07a281b20f96bf7150234c18aa4373c683dee74a194b57dcc0 |", "sentence_right": "| Zloader malware sample | ac60a7471ee5297b9cefb5b3d1c1dbec4b7bf328c8b8649529202a1381acb2a5 |", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}
{"mention": "Zloader", "context_left": "|", "context_right": "malware sample | ac60a7471ee5297b9cefb5b3d1c1dbec4b7bf328c8b8649529202a1381acb2a5 |", "_context_left": "| ", "_context_right": " malware sample | ac60a7471ee5297b9cefb5b3d1c1dbec4b7bf328c8b8649529202a1381acb2a5 |", "sentence_left": "| Zloader malware sample | a347f8b4a17dffa05a4fe9602cf99302201220e7000b5826798dd3d8db7b2b7f |", "sentence_right": "", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "intel471_2020-03-26_analysis-of-an-attempted-attack"}