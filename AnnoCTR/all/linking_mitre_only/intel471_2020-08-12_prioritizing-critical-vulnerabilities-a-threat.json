{"mention": "active exploitation", "context_left": "It is important to note that our risk assessment is assigned as a probability of current,", "context_right": "versus organization-specific risk.", "_context_left": "It is important to note that our risk assessment is assigned as a probability of current, ", "_context_right": " versus organization-specific risk.", "sentence_left": "For instance, our vulnerability intelligence product uses information disclosed by vendor advisories, open source repositories and research companies’ analyses to determine a certain level of risk, but we also take into consideration the scope of underground activity that can be seen surrounding critical vulnerability announcements.", "sentence_right": "Over the course of a year, we observed consistency across underground activity responding to critical vulnerability disclosures and leading up to exploit development.", "label": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility. Several types exist: ### Browser-based Exploitation Web browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed. ### Office Applications Common office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run. ### Common Third-party Applications Other applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash,", "label_id": 549, "label_title": "Exploitation for Client Execution", "label_link": "https://attack.mitre.org/techniques/T1203", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "to exploit development", "context_left": "Over the course of a year, we observed consistency across underground activity responding to critical vulnerability disclosures and leading up", "context_right": ".", "_context_left": "Over the course of a year, we observed consistency across underground activity responding to critical vulnerability disclosures and leading up ", "_context_right": ".", "sentence_left": "It is important to note that our risk assessment is assigned as a probability of current, active exploitation versus organization-specific risk.", "sentence_right": "These indicators could further help identify potential elevation of risk to your organization by recognizing events such as spikes of activity that commonly occur prior to successful exploitation attempts.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "occur prior to successful exploitation attempts.", "context_left": "These indicators could further help identify potential elevation of risk to your organization by recognizing events such as spikes of activity that commonly", "context_right": "", "_context_left": "These indicators could further help identify potential elevation of risk to your organization by recognizing events such as spikes of activity that commonly ", "_context_right": "", "sentence_left": "Over the course of a year, we observed consistency across underground activity responding to critical vulnerability disclosures and leading up to exploit development.", "sentence_right": "This is far from a one-size-fits-all approach and won’t necessarily give you an easy-to-prioritize list, but through the examples shown below, you will see this theory applied to recent critical vulnerabilities overlaid with threat actor activity observed over time.", "label": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility. Several types exist: ### Browser-based Exploitation Web browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed. ### Office Applications Common office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run. ### Common Third-party Applications Other applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash,", "label_id": 549, "label_title": "Exploitation for Client Execution", "label_link": "https://attack.mitre.org/techniques/T1203", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "development of proof of concept (PoC) and exploit code that leverage the newly announced vulnerability", "context_left": "Additionally, there are several forum threads started where threat actors discuss the possibility of exploitation or seek partners to assist in the", "context_right": ".", "_context_left": "Additionally, there are several forum threads started where threat actors discuss the possibility of exploitation or seek partners to assist in the ", "_context_right": ".", "sentence_left": "There is an initial surge in posts made by threat actors who copy and paste information directly from open source reports.", "sentence_right": "Closely following these discussions, several threat actors will advertise claims of PoCs and exploits that have successfully been developed, however, claims within this timeframe are typically false.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "PoCs and exploits that have successfully been developed", "context_left": "Closely following these discussions, several threat actors will advertise claims of", "context_right": ", however, claims within this timeframe are typically false.", "_context_left": "Closely following these discussions, several threat actors will advertise claims of ", "_context_right": ", however, claims within this timeframe are typically false.", "sentence_left": "Additionally, there are several forum threads started where threat actors discuss the possibility of exploitation or seek partners to assist in the development of proof of concept (PoC) and exploit code that leverage the newly announced vulnerability.", "sentence_right": "After this initial deluge of information, activity surrounding mentions of the vulnerability slows and there are fewer observed reposts of open source information.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "exploit for a recently disclosed critical vulnerability, including the common vulnerabilities and exposures (CVE)", "context_left": "For example, an actor will claim to have an", "context_right": "ID or its alias in the initial post.", "_context_left": "For example, an actor will claim to have an ", "_context_right": " ID or its alias in the initial post.", "sentence_left": "Paired with this, a few threat actors may advertise high dollar PoCs or exploits in a limited supply.", "sentence_right": "The privately developed code will be priced around US $1,000 to US $4,000 and the actor will state only a few copies are available for purchase.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "credible exploit development", "context_left": "Vendors and vulnerability researchers likely would include information of existing", "context_right": "and successful exploitation of a vulnerability.", "_context_left": "Vendors and vulnerability researchers likely would include information of existing ", "_context_right": " and successful exploitation of a vulnerability.", "sentence_left": "It is common to see this activity reported as alleged code development as they would need to be purchased or verified by a reliable secondary source to report them as a source of truth.", "sentence_right": "These sources also may expedite the development of exploits, such as when you see a successful PoC released after patching information for impacted products is provided by the vendor.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "successful exploitation of a vulnerability", "context_left": "Vendors and vulnerability researchers likely would include information of existing credible exploit development and", "context_right": ".", "_context_left": "Vendors and vulnerability researchers likely would include information of existing credible exploit development and ", "_context_right": ".", "sentence_left": "It is common to see this activity reported as alleged code development as they would need to be purchased or verified by a reliable secondary source to report them as a source of truth.", "sentence_right": "These sources also may expedite the development of exploits, such as when you see a successful PoC released after patching information for impacted products is provided by the vendor.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "the development of exploits", "context_left": "These sources also may expedite", "context_right": ", such as when you see a successful PoC released after patching information for impacted products is provided by the vendor.", "_context_left": "These sources also may expedite ", "_context_right": ", such as when you see a successful PoC released after patching information for impacted products is provided by the vendor.", "sentence_left": "Vendors and vulnerability researchers likely would include information of existing credible exploit development and successful exploitation of a vulnerability.", "sentence_right": "Once threat actors share advertisements of code development, publicly available PoCs are not far behind, if not already released.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "open source PoCs or exploits", "context_left": "Threat actors will share links to", "context_right": "in response to the initial sales post and will leave comments such as “this is a rip off,” “it must be fake, you can get this for free” and more.", "_context_left": "Threat actors will share links to ", "_context_right": " in response to the initial sales post and will leave comments such as “this is a rip off,” “it must be fake, you can get this for free” and more.", "sentence_left": "If you are not immediately aware of publicly available code, conversations on the pricey exploit advertisement threads will point to it.", "sentence_right": "Notably, successful exploit development does not necessarily indicate all interested financially motivated cybercriminals will leverage the vulnerability for attacks.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "successful exploit development", "context_left": "Notably,", "context_right": "does not necessarily indicate all interested financially motivated cybercriminals will leverage the vulnerability for attacks.", "_context_left": "Notably, ", "_context_right": " does not necessarily indicate all interested financially motivated cybercriminals will leverage the vulnerability for attacks.", "sentence_left": "Threat actors will share links to open source PoCs or exploits in response to the initial sales post and will leave comments such as “this is a rip off,” “it must be fake, you can get this for free” and more.", "sentence_right": "While there might be an increase in exploitation attempts, many threat actors will lack the sophistication required to take their interest to the next level.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "leverage the vulnerability for attacks.", "context_left": "Notably, successful exploit development does not necessarily indicate all interested financially motivated cybercriminals will", "context_right": "", "_context_left": "Notably, successful exploit development does not necessarily indicate all interested financially motivated cybercriminals will ", "_context_right": "", "sentence_left": "Threat actors will share links to open source PoCs or exploits in response to the initial sales post and will leave comments such as “this is a rip off,” “it must be fake, you can get this for free” and more.", "sentence_right": "While there might be an increase in exploitation attempts, many threat actors will lack the sophistication required to take their interest to the next level.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "exploitation attempts", "context_left": "While there might be an increase in", "context_right": ", many threat actors will lack the sophistication required to take their interest to the next level.", "_context_left": "While there might be an increase in ", "_context_right": ", many threat actors will lack the sophistication required to take their interest to the next level.", "sentence_left": "Notably, successful exploit development does not necessarily indicate all interested financially motivated cybercriminals will leverage the vulnerability for attacks.", "sentence_right": "As the disclosure to exploit cycle ends, reporting on threat actors successfully leveraging the vulnerability in attack techniques and procedures may be delayed.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "leverage a type of vulnerability or only providing the name of the vulnerable system.", "context_left": "Attackers can be cautious and use nonspecific details if they report initial entry methods at all, such as claiming to", "context_right": "", "_context_left": "Attackers can be cautious and use nonspecific details if they report initial entry methods at all, such as claiming to ", "_context_right": "", "sentence_left": "As the disclosure to exploit cycle ends, reporting on threat actors successfully leveraging the vulnerability in attack techniques and procedures may be delayed.", "sentence_right": "Evidence of this activity allows us to identify threat actors that claim to leverage a specific vulnerability to carry out consistently intrusive cybercriminal activity.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "claim to leverage a specific vulnerability", "context_left": "Evidence of this activity allows us to identify threat actors that", "context_right": "to carry out consistently intrusive cybercriminal activity.", "_context_left": "Evidence of this activity allows us to identify threat actors that ", "_context_right": " to carry out consistently intrusive cybercriminal activity.", "sentence_left": "Attackers can be cautious and use nonspecific details if they report initial entry methods at all, such as claiming to leverage a type of vulnerability or only providing the name of the vulnerable system.", "sentence_right": "### Priority indicators to assess risk of exploitation", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "development and sale of PoC and exploit code.", "context_left": "3.Indicator three – Fake and private", "context_right": "", "_context_left": "3.Indicator three – Fake and private ", "_context_right": "", "sentence_left": "This increase will be significant and easily observed in comparison to other vulnerabilities being discussed on underground forums and messaging services.", "sentence_right": "This identifies a clear objective from threat actors seeking to leverage the vulnerability for future attacks.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "leverage the vulnerability", "context_left": "This identifies a clear objective from threat actors seeking to", "context_right": "for future attacks.", "_context_left": "This identifies a clear objective from threat actors seeking to ", "_context_right": " for future attacks.", "sentence_left": "3.Indicator three – Fake and private development and sale of PoC and exploit code.", "sentence_right": "4.Indicator four – Publicly available, legitimate PoC code and threat actors claiming they are attempting to use this code for exploit development.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "exploit development.", "context_left": "4.Indicator four – Publicly available, legitimate PoC code and threat actors claiming they are attempting to use this code for", "context_right": "", "_context_left": "4.Indicator four – Publicly available, legitimate PoC code and threat actors claiming they are attempting to use this code for ", "_context_right": "", "sentence_left": "This identifies a clear objective from threat actors seeking to leverage the vulnerability for future attacks.", "sentence_right": "Publicly released PoC code will be shared as a link or direct copy-paste on underground forums and referenced across all related initial post threads.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "exploit for the vulnerability", "context_left": "In December 2019, we began to see less sophisticated threat actors share information from open source reports about CVE-2019-19781 and new forum threads started where actors sought to buy an", "context_right": ".", "_context_left": "In December 2019, we began to see less sophisticated threat actors share information from open source reports about CVE-2019-19781 and new forum threads started where actors sought to buy an ", "_context_right": ".", "sentence_left": "National Vulnerability Database (NVD) in January 2020.", "sentence_right": "Discussions about the potential exploitation of the vulnerability continued until a publicly available exploit was observed in January 2020 and subsequently shared in the underground.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "exploitation of the vulnerability", "context_left": "Discussions about the potential", "context_right": "continued until a publicly available exploit was observed in January 2020 and subsequently shared in the underground.", "_context_left": "Discussions about the potential ", "_context_right": " continued until a publicly available exploit was observed in January 2020 and subsequently shared in the underground.", "sentence_left": "In December 2019, we began to see less sophisticated threat actors share information from open source reports about CVE-2019-19781 and new forum threads started where actors sought to buy an exploit for the vulnerability.", "sentence_right": "Several exploit variants were circulated by threat actors commonly known for sharing publicly available PoC and exploit code.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "claimed this vulnerability allowed them access into vulnerable systems as they attempted to move laterally through impacted networks.", "context_left": "We reported on threat actors who", "context_right": "", "_context_left": "We reported on threat actors who ", "_context_right": "", "sentence_left": "This vulnerability continues to be high risk to organizations with unpatched affected Citrix systems.", "sentence_right": "The overall risk of exploitation score is high.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "leveraged the vulnerability to gain unauthorized network access to several organizations.", "context_left": "* A prolific seller of network access possibly", "context_right": "", "_context_left": "* A prolific seller of network access possibly ", "_context_right": "", "sentence_left": "Several actors replied expressing a similar interest or discussing exploitability of CVE-2019-19781.", "sentence_right": "The assessment was not confirmed but the timing of the disclosure and advertised accesses were concurrent.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "exploit for the Citrix vulnerability was publicly available.", "context_left": "* An", "context_right": "", "_context_left": "* An ", "_context_right": "", "sentence_left": "#### January 2020", "sentence_right": "An actor posted the GitHub link on a previously opened post thread and several actors circulated exploits for the vulnerability.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "circulated exploits for the vulnerability", "context_left": "An actor posted the GitHub link on a previously opened post thread and several actors", "context_right": ".", "_context_left": "An actor posted the GitHub link on a previously opened post thread and several actors ", "_context_right": ".", "sentence_left": "* An exploit for the Citrix vulnerability was publicly available.", "sentence_right": "* An actor shared several code variants for CVE-2019-19781.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "actor shared several code variants for CVE-2019-19781.", "context_left": "* An", "context_right": "", "_context_left": "* An ", "_context_right": "", "sentence_left": "An actor posted the GitHub link on a previously opened post thread and several actors circulated exploits for the vulnerability.", "sentence_right": "This actor commonly shares copied PoC and exploit code from open sources including Exploit DB, Packet Storm and GitHub.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "Russian-speaking actor was suspected to have leveraged the Citrix vulnerability", "context_left": "* A", "context_right": "after released compromised access revealed the impacted company uses Citrix System Software, however, the assessment was not confirmed.", "_context_left": "* A ", "_context_right": " after released compromised access revealed the impacted company uses Citrix System Software, however, the assessment was not confirmed.", "sentence_left": "#### February 2020", "sentence_right": "#### May 2020", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "publicly available code for exploitation", "context_left": "The actor claimed to use", "context_right": "after scanning the internet for vulnerable hosts.", "_context_left": "The actor claimed to use ", "_context_right": " after scanning the internet for vulnerable hosts.", "sentence_left": "* A relatively new actor allegedly leveraged CVE-2019-19781 to sell compromised network accesses on underground forums.", "sentence_right": "#### June 2020", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "compromised network accesses likely using the Citrix vulnerability as an initial attack vector into compromised victim organizations.", "context_left": "* A handful of actors, including a notable threat actor with a positive underground reputation, claimed responsibility for many", "context_right": "", "_context_left": "* A handful of actors, including a notable threat actor with a positive underground reputation, claimed responsibility for many ", "_context_right": "", "sentence_left": "#### June 2020", "sentence_right": "###", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "create or delete files", "context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to execute arbitrary system commands,", "context_right": ", disable services and execute arbitrary Java code.", "_context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to execute arbitrary system commands, ", "_context_right": ", disable services and execute arbitrary Java code.", "sentence_left": "The vendor reported the vulnerability with a Common Vulnerability Scoring System (CVSS) of 10.0, the highest score a CVE can receive.", "sentence_right": "Although the vendor released fixed versions and mitigation information, there was rapid development of exploit code and implementation into an attack framework.", "label": "Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.", "label_id": 555, "label_title": "Data Manipulation", "label_link": "https://attack.mitre.org/techniques/T1565", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "execute arbitrary system commands", "context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to", "context_right": ", create or delete files, disable services and execute arbitrary Java code.", "_context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to ", "_context_right": ", create or delete files, disable services and execute arbitrary Java code.", "sentence_left": "The vendor reported the vulnerability with a Common Vulnerability Scoring System (CVSS) of 10.0, the highest score a CVE can receive.", "sentence_right": "Although the vendor released fixed versions and mitigation information, there was rapid development of exploit code and implementation into an attack framework.", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CI", "entity_type": "TACTIC", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "disable services", "context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to execute arbitrary system commands, create or delete files,", "context_right": "and execute arbitrary Java code.", "_context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to execute arbitrary system commands, create or delete files, ", "_context_right": " and execute arbitrary Java code.", "sentence_left": "The vendor reported the vulnerability with a Common Vulnerability Scoring System (CVSS) of 10.0, the highest score a CVE can receive.", "sentence_right": "Although the vendor released fixed versions and mitigation information, there was rapid development of exploit code and implementation into an attack framework.", "label": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may span both native defenses as well as supplemental capabilities installed by users or mobile endpoint administrators.", "label_id": 1653, "label_title": "Impair Defenses", "label_link": "https://attack.mitre.org/techniques/T1629", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "execute arbitrary Java code", "context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to execute arbitrary system commands, create or delete files, disable services and", "context_right": ".", "_context_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to execute arbitrary system commands, create or delete files, disable services and ", "_context_right": ".", "sentence_left": "The vendor reported the vulnerability with a Common Vulnerability Scoring System (CVSS) of 10.0, the highest score a CVE can receive.", "sentence_right": "Although the vendor released fixed versions and mitigation information, there was rapid development of exploit code and implementation into an attack framework.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "rapid development of exploit code", "context_left": "Although the vendor released fixed versions and mitigation information, there was", "context_right": "and implementation into an attack framework.", "_context_left": "Although the vendor released fixed versions and mitigation information, there was ", "_context_right": " and implementation into an attack framework.", "sentence_left": "The F5 vulnerability allowed unauthenticated attackers or authenticated users with network access to execute arbitrary system commands, create or delete files, disable services and execute arbitrary Java code.", "sentence_right": "Following common trends, several actors shared information from multiple open source reports that discussed the vulnerability, an actor shared an alleged nmap exploit for CVE-2020-5902.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "threat actors attempting to leverage the CVE in attacks", "context_left": "Because the vulnerability was quickly productized and there was evidence of", "context_right": ", the overall risk of exploitation score is high.", "_context_left": "Because the vulnerability was quickly productized and there was evidence of ", "_context_right": ", the overall risk of exploitation score is high.", "sentence_left": "Once a Metasploit module was observed publicly, an actor known for copying code from open sources shared it on an underground forum.", "sentence_right": "#### July 2020", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "develop code to leverage this vulnerability.", "context_left": "There is clear underground interest in CVE-2020-1350 based on threat actor posts seeking to", "context_right": "", "_context_left": "There is clear underground interest in CVE-2020-1350 based on threat actor posts seeking to ", "_context_right": "", "sentence_left": "Following the outlined behavior, after the disclosure of the vulnerability and released patching information, we observed a near-immediate increase in underground mentions of this vulnerability including rick-rolling PoCs repeatedly shared.", "sentence_right": "However, a closer look at the actors that expressed an initial interest in leveraging the vulnerability shows no specific historical activity to indicate these individuals are sophisticated enough to carry out an exploitation of the SIGRed vulnerability alone.", "label": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020) As with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.", "label_id": 506, "label_title": "Develop Capabilities", "label_link": "https://attack.mitre.org/techniques/T1587", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "leveraging the vulnerability", "context_left": "However, a closer look at the actors that expressed an initial interest in", "context_right": "shows no specific historical activity to indicate these individuals are sophisticated enough to carry out an exploitation of the SIGRed vulnerability alone.", "_context_left": "However, a closer look at the actors that expressed an initial interest in ", "_context_right": " shows no specific historical activity to indicate these individuals are sophisticated enough to carry out an exploitation of the SIGRed vulnerability alone.", "sentence_left": "There is clear underground interest in CVE-2020-1350 based on threat actor posts seeking to develop code to leverage this vulnerability.", "sentence_right": "The activity remains an indicator of increase in risk scoring and probability of exploitation, but there likely will be many follow-on indicators that will press the severity higher.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "probability of exploitation", "context_left": "The activity remains an indicator of increase in risk scoring and", "context_right": ", but there likely will be many follow-on indicators that will press the severity higher.", "_context_left": "The activity remains an indicator of increase in risk scoring and ", "_context_right": ", but there likely will be many follow-on indicators that will press the severity higher.", "sentence_left": "However, a closer look at the actors that expressed an initial interest in leveraging the vulnerability shows no specific historical activity to indicate these individuals are sophisticated enough to carry out an exploitation of the SIGRed vulnerability alone.", "sentence_right": "The current overall risk of exploitation score is medium.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}
{"mention": "denial of service (DoS)", "context_left": "* A", "context_right": "PoC was released publicly on GitHub.", "_context_left": "* A ", "_context_right": " PoC was released publicly on GitHub.", "sentence_left": "The actor previously advertised dumped databases obtained by exploiting enterprise resource planning software.", "sentence_right": "###", "label": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014) An Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS). To perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets. Adversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This", "label_id": 453, "label_title": "Endpoint Denial of Service", "label_link": "https://attack.mitre.org/techniques/T1499", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "intel471_2020-08-12_prioritizing-critical-vulnerabilities-a-threat"}