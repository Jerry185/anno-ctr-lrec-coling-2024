{"mention": "RATs Over Custom Protocols", "context_left": "Catching", "context_right": "", "_context_left": "Catching ", "_context_right": "", "sentence_left": "", "sentence_right": "May 05, 2021", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the mobile device, and often the results of those commands, will be embedded within the protocol traffic between the mobile device and server.  Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS.", "label_id": 1603, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1437", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "command and control", "context_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and", "context_right": "(C&C) servers.", "_context_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and ", "_context_right": " (C&C) servers.", "sentence_left": "May 05, 2021", "sentence_right": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "(C&C)", "context_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control", "context_right": "servers.", "_context_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control ", "_context_right": " servers.", "sentence_left": "May 05, 2021", "sentence_right": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Standard Application Layer Protocols for communication between malware and command and control", "context_left": "Adversaries generally use", "context_right": "(C&C) servers.", "_context_left": "Adversaries generally use ", "_context_right": " (C&C) servers.", "sentence_left": "May 05, 2021", "sentence_right": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control (", "context_right": ") servers.", "_context_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control (", "_context_right": ") servers.", "sentence_left": "May 05, 2021", "sentence_right": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "malicious traffic", "context_left": "This is for several reasons: first,", "context_right": "blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "_context_left": "This is for several reasons: first, ", "_context_right": " blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "sentence_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control (C&C) servers.", "sentence_right": "However, the massive growth of SSL attacks – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these encrypted channels.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "standard protocols like HTTP/S", "context_left": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on", "context_right": "; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "_context_left": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on ", "_context_right": "; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "sentence_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control (C&C) servers.", "sentence_right": "However, the massive growth of SSL attacks – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these encrypted channels.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "SSL/TLS encrypted traffic", "context_left": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all", "context_right": "as it is extremely resource-intensive to do so.", "_context_left": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all ", "_context_right": " as it is extremely resource-intensive to do so.", "sentence_left": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control (C&C) servers.", "sentence_right": "However, the massive growth of SSL attacks – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these encrypted channels.", "label": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal. For efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).", "label_id": 243, "label_title": "Asymmetric Cryptography", "label_link": "https://attack.mitre.org/techniques/T1573/002", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "SSL attacks", "context_left": "However, the massive growth of", "context_right": "– [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these encrypted channels.", "_context_left": "However, the massive growth of ", "_context_right": " – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these encrypted channels.", "sentence_left": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "sentence_right": "For those that do inspect their encrypted traffic, modern network security proxies, gateways, and firewalls are evolved enough to conveniently parse application protocols and strip the SSL layer to scan the underlying data.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypted channels.", "context_left": "However, the massive growth of SSL attacks – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these", "context_right": "", "_context_left": "However, the massive growth of SSL attacks – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these ", "_context_right": "", "sentence_left": "This is for several reasons: first, malicious traffic blends in more easily with legitimate traffic on standard protocols like HTTP/S; second, companies that rely on appliances for security often don’t inspect all SSL/TLS encrypted traffic as it is extremely resource-intensive to do so.", "sentence_right": "For those that do inspect their encrypted traffic, modern network security proxies, gateways, and firewalls are evolved enough to conveniently parse application protocols and strip the SSL layer to scan the underlying data.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypted traffic", "context_left": "For those that do inspect their", "context_right": ", modern network security proxies, gateways, and firewalls are evolved enough to conveniently parse application protocols and strip the SSL layer to scan the underlying data.", "_context_left": "For those that do inspect their ", "_context_right": ", modern network security proxies, gateways, and firewalls are evolved enough to conveniently parse application protocols and strip the SSL layer to scan the underlying data.", "sentence_left": "However, the massive growth of SSL attacks – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these encrypted channels.", "sentence_right": "And by knowing the protocol, scan engines using heuristics or machine-learning techniques can more easily differentiate between malicious and legitimate traffic, giving security teams an advantage.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "application protocols", "context_left": "For those that do inspect their encrypted traffic, modern network security proxies, gateways, and firewalls are evolved enough to conveniently parse", "context_right": "and strip the SSL layer to scan the underlying data.", "_context_left": "For those that do inspect their encrypted traffic, modern network security proxies, gateways, and firewalls are evolved enough to conveniently parse ", "_context_right": " and strip the SSL layer to scan the underlying data.", "sentence_left": "However, the massive growth of SSL attacks – [260% higher in 2020 compared to 2019](/blogs/security-research/2020-state-encrypted-attacks) – has turned many security teams’ attention to these encrypted channels.", "sentence_right": "And by knowing the protocol, scan engines using heuristics or machine-learning techniques can more easily differentiate between malicious and legitimate traffic, giving security teams an advantage.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "adversaries to turn to custom protocols.", "context_left": "These trends have led some", "context_right": "", "_context_left": "These trends have led some ", "_context_right": "", "sentence_left": "And by knowing the protocol, scan engines using heuristics or machine-learning techniques can more easily differentiate between malicious and legitimate traffic, giving security teams an advantage.", "sentence_right": "Although custom protocols for malicious communication are nothing new, almost one-third of prevalent malware families we recently analyzed support communication over non-HTTP/S protocols.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "custom protocols for malicious communication", "context_left": "Although", "context_right": "are nothing new, almost one-third of prevalent malware families we recently analyzed support communication over non-HTTP/S protocols.", "_context_left": "Although ", "_context_right": " are nothing new, almost one-third of prevalent malware families we recently analyzed support communication over non-HTTP/S protocols.", "sentence_left": "These trends have led some adversaries to turn to custom protocols.", "sentence_right": "Almost all of these malware families are Remote Access Trojans (RATs) and are found all over, from campaigns of mass infection to highly targeted attacks.", "label": "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. Adversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) to facilitate remote IPC execution.(Citation: Fireeye Hunting COM June 2019)", "label_id": 215, "label_title": "Inter-Process Communication", "label_link": "https://attack.mitre.org/techniques/T1559", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "malicious communication", "context_left": "Although custom protocols for", "context_right": "are nothing new, almost one-third of prevalent malware families we recently analyzed support communication over non-HTTP/S protocols.", "_context_left": "Although custom protocols for ", "_context_right": " are nothing new, almost one-third of prevalent malware families we recently analyzed support communication over non-HTTP/S protocols.", "sentence_left": "These trends have led some adversaries to turn to custom protocols.", "sentence_right": "Almost all of these malware families are Remote Access Trojans (RATs) and are found all over, from campaigns of mass infection to highly targeted attacks.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Below are statistical representations of traffic that Zscaler blocked for non-HTTP/S", "context_right": "communication, as well as the most active RAT families that we observed over a three-month period.", "_context_left": "Below are statistical representations of traffic that Zscaler blocked for non-HTTP/S ", "_context_right": " communication, as well as the most active RAT families that we observed over a three-month period.", "sentence_left": "At the end, we share a number of signatures and Snort rules that aid in detecting these attacks.", "sentence_right": "![](https://lh5.googleusercontent.com/aYzD50PDgdfzxXZyjeGnZ1rFbL-b7dYT3UQCAZqIIgf8MAI3Adj4MziWl0n-AuYx6tISUTHpur-YwI9J7Z2s7gKMRX_eLqMUMoDEdQ1NcJYgiHUZNj6taGB_E-S9p0XZ7MhBSPR1)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Below are statistical representations of traffic that Zscaler blocked for non-HTTP/S", "context_right": "communication, as well as the most active RAT families that we observed over a three-month period.", "_context_left": "Below are statistical representations of traffic that Zscaler blocked for non-HTTP/S ", "_context_right": " communication, as well as the most active RAT families that we observed over a three-month period.", "sentence_left": "At the end, we share a number of signatures and Snort rules that aid in detecting these attacks.", "sentence_right": "![](https://lh5.googleusercontent.com/aYzD50PDgdfzxXZyjeGnZ1rFbL-b7dYT3UQCAZqIIgf8MAI3Adj4MziWl0n-AuYx6tISUTHpur-YwI9J7Z2s7gKMRX_eLqMUMoDEdQ1NcJYgiHUZNj6taGB_E-S9p0XZ7MhBSPR1)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicating over non-HTTP/S", "context_left": "*Fig.1: Hits of top threats", "context_right": "in the last quarter.*", "_context_left": "*Fig.1: Hits of top threats ", "_context_right": "in the last quarter.*", "sentence_left": "![](https://lh5.googleusercontent.com/aYzD50PDgdfzxXZyjeGnZ1rFbL-b7dYT3UQCAZqIIgf8MAI3Adj4MziWl0n-AuYx6tISUTHpur-YwI9J7Z2s7gKMRX_eLqMUMoDEdQ1NcJYgiHUZNj6taGB_E-S9p0XZ7MhBSPR1)", "sentence_right": "*![](https://lh5.googleusercontent.com/PriwwYlpzpsb-E89vgyjWguBklqQvrw8j4DN9ttZ_LaIShbiWvvvyVjUw-MgUxV6X-JU_DTOWtl5VGU06GqCY83AsXDuBJee6_cx0egzqKtIVxD7TnkT1-z_frrKimsVbb7Z9ApG)*", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos", "context_left": "### **", "context_right": "RAT**", "_context_left": "### **", "_context_right": " RAT**", "sentence_left": "*Fig.2: Hits of top non-HTTP/S based RAT families in last quarter.*", "sentence_right": "Remcos is remote access and surveillance software developed and distributed by an organization called Breaking Security.", "label": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)", "label_id": 713, "label_title": "Remcos", "label_link": "https://attack.mitre.org/software/S0332", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos", "context_left": "", "context_right": "is remote access and surveillance software developed and distributed by an organization called Breaking Security.", "_context_left": "", "_context_right": " is remote access and surveillance software developed and distributed by an organization called Breaking Security.", "sentence_left": "### **Remcos RAT**", "sentence_right": "The Remcos RAT appeared in hacking forums in late 2016.", "label": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)", "label_id": 713, "label_title": "Remcos", "label_link": "https://attack.mitre.org/software/S0332", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos", "context_left": "The", "context_right": "RAT appeared in hacking forums in late 2016.", "_context_left": "The ", "_context_right": " RAT appeared in hacking forums in late 2016.", "sentence_left": "Remcos is remote access and surveillance software developed and distributed by an organization called Breaking Security.", "sentence_right": "Since then, it has been favored by many cyber criminals and even adopted by APT actors such as the [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [Elfin Group](https://attack.mitre.org/groups/G0064/).", "label": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)", "label_id": 713, "label_title": "Remcos", "label_link": "https://attack.mitre.org/software/S0332", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Gorgon Group", "context_left": "Since then, it has been favored by many cyber criminals and even adopted by APT actors such as the [", "context_right": "](https://attack.mitre.org/groups/G0078/) and [Elfin Group](https://attack.mitre.org/groups/G0064/).", "_context_left": "Since then, it has been favored by many cyber criminals and even adopted by APT actors such as the [", "_context_right": "](https://attack.mitre.org/groups/G0078/) and [Elfin Group](https://attack.mitre.org/groups/G0064/).", "sentence_left": "The Remcos RAT appeared in hacking forums in late 2016.", "sentence_right": "Remcos is primarily delivered to victims via malicious attachments in phishing emails.", "label": "[Gorgon Group](https://attack.mitre.org/groups/G0078) is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. (Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 1168, "label_title": "Gorgon Group", "label_link": "https://attack.mitre.org/groups/G0078", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Elfin Group", "context_left": "Since then, it has been favored by many cyber criminals and even adopted by APT actors such as the [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [", "context_right": "](https://attack.mitre.org/groups/G0064/).", "_context_left": "Since then, it has been favored by many cyber criminals and even adopted by APT actors such as the [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [", "_context_right": "](https://attack.mitre.org/groups/G0064/).", "sentence_left": "The Remcos RAT appeared in hacking forums in late 2016.", "sentence_right": "Remcos is primarily delivered to victims via malicious attachments in phishing emails.", "label": "[APT33](https://attack.mitre.org/groups/G0064) is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors. (Citation: FireEye APT33 Sept 2017) (Citation: FireEye APT33 Webinar Sept 2017)", "label_id": 1161, "label_title": "APT33", "label_link": "https://attack.mitre.org/groups/G0064", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos", "context_left": "", "context_right": "is primarily delivered to victims via malicious attachments in phishing emails.", "_context_left": "", "_context_right": " is primarily delivered to victims via malicious attachments in phishing emails.", "sentence_left": "Since then, it has been favored by many cyber criminals and even adopted by APT actors such as the [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [Elfin Group](https://attack.mitre.org/groups/G0064/).", "sentence_right": "Its capabilities range from logging keystrokes to executing commands, stealing credentials, and capturing microphones and webcams.", "label": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)", "label_id": 713, "label_title": "Remcos", "label_link": "https://attack.mitre.org/software/S0332", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "delivered to victims via malicious attachments in phishing emails.", "context_left": "Remcos is primarily", "context_right": "", "_context_left": "Remcos is primarily ", "_context_right": "", "sentence_left": "Since then, it has been favored by many cyber criminals and even adopted by APT actors such as the [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [Elfin Group](https://attack.mitre.org/groups/G0064/).", "sentence_right": "Its capabilities range from logging keystrokes to executing commands, stealing credentials, and capturing microphones and webcams.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "executing commands", "context_left": "Its capabilities range from logging keystrokes to", "context_right": ", stealing credentials, and capturing microphones and webcams.", "_context_left": "Its capabilities range from logging keystrokes to ", "_context_right": ", stealing credentials, and capturing microphones and webcams.", "sentence_left": "Remcos is primarily delivered to victims via malicious attachments in phishing emails.", "sentence_right": "RC4 key and encrypted configuration data is kept in the resource section “SETTINGS” under “RCData”.", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "logging keystrokes", "context_left": "Its capabilities range from", "context_right": "to executing commands, stealing credentials, and capturing microphones and webcams.", "_context_left": "Its capabilities range from ", "_context_right": " to executing commands, stealing credentials, and capturing microphones and webcams.", "sentence_left": "Remcos is primarily delivered to victims via malicious attachments in phishing emails.", "sentence_right": "RC4 key and encrypted configuration data is kept in the resource section “SETTINGS” under “RCData”.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "capturing microphones and webcams", "context_left": "Its capabilities range from logging keystrokes to executing commands, stealing credentials, and", "context_right": ".", "_context_left": "Its capabilities range from logging keystrokes to executing commands, stealing credentials, and ", "_context_right": ".", "sentence_left": "Remcos is primarily delivered to victims via malicious attachments in phishing emails.", "sentence_right": "RC4 key and encrypted configuration data is kept in the resource section “SETTINGS” under “RCData”.", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypted configuration", "context_left": "RC4 key and", "context_right": "data is kept in the resource section “SETTINGS” under “RCData”.", "_context_left": "RC4 key and ", "_context_right": " data is kept in the resource section “SETTINGS” under “RCData”.", "sentence_left": "Its capabilities range from logging keystrokes to executing commands, stealing credentials, and capturing microphones and webcams.", "sentence_right": "The configuration contains the C&C address, port, mutex name, and encryption key for C&C communication.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "The configuration contains the", "context_right": "address, port, mutex name, and encryption key for C&C communication.", "_context_left": "The configuration contains the ", "_context_right": " address, port, mutex name, and encryption key for C&C communication.", "sentence_left": "RC4 key and encrypted configuration data is kept in the resource section “SETTINGS” under “RCData”.", "sentence_right": "![](https://lh6.googleusercontent.com/zN7waqVzJ7bcYrfOAkgqH-_czg5hvNth-DIU6ll956XT3r7e49_4CLHbjXWxlnc7D4fCrNd_UIXEW3hKz8K4Wt7lGVLzCuIsbBTcUhFu4JP0n4f4zFXterYWG-HxAva4QI_S5gIo)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "The configuration contains the C&C address, port, mutex name, and encryption key for", "context_right": "communication.", "_context_left": "The configuration contains the C&C address, port, mutex name, and encryption key for ", "_context_right": " communication.", "sentence_left": "RC4 key and encrypted configuration data is kept in the resource section “SETTINGS” under “RCData”.", "sentence_right": "![](https://lh6.googleusercontent.com/zN7waqVzJ7bcYrfOAkgqH-_czg5hvNth-DIU6ll956XT3r7e49_4CLHbjXWxlnc7D4fCrNd_UIXEW3hKz8K4Wt7lGVLzCuIsbBTcUhFu4JP0n4f4zFXterYWG-HxAva4QI_S5gIo)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "The configuration contains the", "context_right": "address, port, mutex name, and encryption key for C&C communication.", "_context_left": "The configuration contains the ", "_context_right": " address, port, mutex name, and encryption key for C&C communication.", "sentence_left": "RC4 key and encrypted configuration data is kept in the resource section “SETTINGS” under “RCData”.", "sentence_right": "![](https://lh6.googleusercontent.com/zN7waqVzJ7bcYrfOAkgqH-_czg5hvNth-DIU6ll956XT3r7e49_4CLHbjXWxlnc7D4fCrNd_UIXEW3hKz8K4Wt7lGVLzCuIsbBTcUhFu4JP0n4f4zFXterYWG-HxAva4QI_S5gIo)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encryption key for C&C communication.", "context_left": "The configuration contains the C&C address, port, mutex name, and", "context_right": "", "_context_left": "The configuration contains the C&C address, port, mutex name, and ", "_context_right": "", "sentence_left": "RC4 key and encrypted configuration data is kept in the resource section “SETTINGS” under “RCData”.", "sentence_right": "![](https://lh6.googleusercontent.com/zN7waqVzJ7bcYrfOAkgqH-_czg5hvNth-DIU6ll956XT3r7e49_4CLHbjXWxlnc7D4fCrNd_UIXEW3hKz8K4Wt7lGVLzCuIsbBTcUhFu4JP0n4f4zFXterYWG-HxAva4QI_S5gIo)", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Encrypted configuration in resource", "context_left": "*Fig.3:", "context_right": ".*", "_context_left": "*Fig.3: ", "_context_right": ".*", "sentence_left": "![](https://lh6.googleusercontent.com/zN7waqVzJ7bcYrfOAkgqH-_czg5hvNth-DIU6ll956XT3r7e49_4CLHbjXWxlnc7D4fCrNd_UIXEW3hKz8K4Wt7lGVLzCuIsbBTcUhFu4JP0n4f4zFXterYWG-HxAva4QI_S5gIo)", "sentence_right": "![](https://lh5.googleusercontent.com/vd-LhD9lYGPqT3Yl_ABwdyq2A0yN5YasLtqsvF_hSua6QkxIMi9MZ0zgtZfpRDpSgUfZmxbCKOcB4G9mUh7VY5uSDjYzUwHl8wjZzk102ApFqJeabOokBoYv0Z3nSZ2b2pOTZZ3d)", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Decrypted configuration", "context_left": "*Fig.4:", "context_right": "*", "_context_left": "*Fig.4: ", "_context_right": "*", "sentence_left": "![](https://lh5.googleusercontent.com/vd-LhD9lYGPqT3Yl_ABwdyq2A0yN5YasLtqsvF_hSua6QkxIMi9MZ0zgtZfpRDpSgUfZmxbCKOcB4G9mUh7VY5uSDjYzUwHl8wjZzk102ApFqJeabOokBoYv0Z3nSZ2b2pOTZZ3d)", "sentence_right": "Remcos communicates over non-HTTP/S channels/ports on custom protocols.", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos", "context_left": "", "context_right": "communicates over non-HTTP/S channels/ports on custom protocols.", "_context_left": "", "_context_right": " communicates over non-HTTP/S channels/ports on custom protocols.", "sentence_left": "*Fig.4: Decrypted configuration*", "sentence_right": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect C&C traffic.", "label": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)", "label_id": 713, "label_title": "Remcos", "label_link": "https://attack.mitre.org/software/S0332", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicates over non-HTTP/S channels/ports on custom protocols.", "context_left": "Remcos", "context_right": "", "_context_left": "Remcos ", "_context_right": "", "sentence_left": "*Fig.4: Decrypted configuration*", "sentence_right": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect C&C traffic.", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect", "context_right": "traffic.", "_context_left": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect ", "_context_right": " traffic.", "sentence_left": "Remcos communicates over non-HTTP/S channels/ports on custom protocols.", "sentence_right": "The custom protocol contains the header “[DataStart]” followed by the size of data and then followed by the exfiltrated data.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect", "context_right": "traffic.", "_context_left": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect ", "_context_right": " traffic.", "sentence_left": "Remcos communicates over non-HTTP/S channels/ports on custom protocols.", "sentence_right": "The custom protocol contains the header “[DataStart]” followed by the size of data and then followed by the exfiltrated data.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "custom protocol", "context_left": "The", "context_right": "contains the header “[DataStart]” followed by the size of data and then followed by the exfiltrated data.", "_context_left": "The ", "_context_right": " contains the header “[DataStart]” followed by the size of data and then followed by the exfiltrated data.", "sentence_left": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect C&C traffic.", "sentence_right": "![](https://lh5.googleusercontent.com/7wLs8lUEMdYFPShrSwZR0DS-dWkSEznyb1LzuiirRBrwkx_aOfRHBBA9IZi6M3wA_tZ8wmTxQ-nVQQRAXBqHX1bUn9QziriO_-34JLECbcWR-OTBtiG6WhFF2EQQxOYd8qQz_vnB)", "label": "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "label_id": 130, "label_title": "Non-Standard Port", "label_link": "https://attack.mitre.org/techniques/T1571", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "followed by the exfiltrated data.", "context_left": "The custom protocol contains the header “[DataStart]” followed by the size of data and then", "context_right": "", "_context_left": "The custom protocol contains the header “[DataStart]” followed by the size of data and then ", "_context_right": "", "sentence_left": "The bot can be configured to communicate in plain text, which makes it fairly straightforward to detect C&C traffic.", "sentence_right": "![](https://lh5.googleusercontent.com/7wLs8lUEMdYFPShrSwZR0DS-dWkSEznyb1LzuiirRBrwkx_aOfRHBBA9IZi6M3wA_tZ8wmTxQ-nVQQRAXBqHX1bUn9QziriO_-34JLECbcWR-OTBtiG6WhFF2EQQxOYd8qQz_vnB)", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*Fig.5: Data sent to", "context_right": "server in plain text.*", "_context_left": "*Fig.5: Data sent to ", "_context_right": " server in plain text.*", "sentence_left": "![](https://lh5.googleusercontent.com/7wLs8lUEMdYFPShrSwZR0DS-dWkSEznyb1LzuiirRBrwkx_aOfRHBBA9IZi6M3wA_tZ8wmTxQ-nVQQRAXBqHX1bUn9QziriO_-34JLECbcWR-OTBtiG6WhFF2EQQxOYd8qQz_vnB)", "sentence_right": "However, in most cases, the communication is encrypted using the RC4 algorithm with a key present in the configuration.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Data sent to C&C server", "context_left": "*Fig.5:", "context_right": "in plain text.*", "_context_left": "*Fig.5: ", "_context_right": " in plain text.*", "sentence_left": "![](https://lh5.googleusercontent.com/7wLs8lUEMdYFPShrSwZR0DS-dWkSEznyb1LzuiirRBrwkx_aOfRHBBA9IZi6M3wA_tZ8wmTxQ-nVQQRAXBqHX1bUn9QziriO_-34JLECbcWR-OTBtiG6WhFF2EQQxOYd8qQz_vnB)", "sentence_right": "However, in most cases, the communication is encrypted using the RC4 algorithm with a key present in the configuration.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "the communication is encrypted using the RC4 algorithm", "context_left": "However, in most cases,", "context_right": "with a key present in the configuration.", "_context_left": "However, in most cases, ", "_context_right": " with a key present in the configuration.", "sentence_left": "*Fig.5: Data sent to C&C server in plain text.*", "sentence_right": "It is not possible to match signatures in encrypted binary data.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypted binary data.", "context_left": "It is not possible to match signatures in", "context_right": "", "_context_left": "It is not possible to match signatures in ", "_context_right": "", "sentence_left": "However, in most cases, the communication is encrypted using the RC4 algorithm with a key present in the configuration.", "sentence_right": "However, there is scope for heuristics-based detection.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos", "context_left": "Upon execution,", "context_right": "sends system information to its C&C server, and in return the server replies with commands to execute.", "_context_left": "Upon execution, ", "_context_right": " sends system information to its C&C server, and in return the server replies with commands to execute.", "sentence_left": "However, there is scope for heuristics-based detection.", "sentence_right": "As this request and response is encrypted with the same symmetric key, the header “[DataStart]” will generate the same encrypted stream of bytes in place of the header for all communication generated by the executable.", "label": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)", "label_id": 713, "label_title": "Remcos", "label_link": "https://attack.mitre.org/software/S0332", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Upon execution, Remcos sends system information to its", "context_right": "server, and in return the server replies with commands to execute.", "_context_left": "Upon execution, Remcos sends system information to its ", "_context_right": " server, and in return the server replies with commands to execute.", "sentence_left": "However, there is scope for heuristics-based detection.", "sentence_right": "As this request and response is encrypted with the same symmetric key, the header “[DataStart]” will generate the same encrypted stream of bytes in place of the header for all communication generated by the executable.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos sends system information to its C&C", "context_left": "Upon execution,", "context_right": "server, and in return the server replies with commands to execute.", "_context_left": "Upon execution, ", "_context_right": " server, and in return the server replies with commands to execute.", "sentence_left": "However, there is scope for heuristics-based detection.", "sentence_right": "As this request and response is encrypted with the same symmetric key, the header “[DataStart]” will generate the same encrypted stream of bytes in place of the header for all communication generated by the executable.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "server replies with commands to execute", "context_left": "Upon execution, Remcos sends system information to its C&C server, and in return the", "context_right": ".", "_context_left": "Upon execution, Remcos sends system information to its C&C server, and in return the ", "_context_right": ".", "sentence_left": "However, there is scope for heuristics-based detection.", "sentence_right": "As this request and response is encrypted with the same symmetric key, the header “[DataStart]” will generate the same encrypted stream of bytes in place of the header for all communication generated by the executable.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "request and response is encrypted with the same symmetric key", "context_left": "As this", "context_right": ", the header “[DataStart]” will generate the same encrypted stream of bytes in place of the header for all communication generated by the executable.", "_context_left": "As this ", "_context_right": ", the header “[DataStart]” will generate the same encrypted stream of bytes in place of the header for all communication generated by the executable.", "sentence_left": "Upon execution, Remcos sends system information to its C&C server, and in return the server replies with commands to execute.", "sentence_right": "![](https://lh5.googleusercontent.com/ueaF5gjccOqVQVXS2sRGsLoQin-mq3xSkD-SwxC7XZRlQLqmidAWsItAJKXAALu_LIsYjNqovbDiRsM3DRRqSg6lvtdZ9s4SvOJuxehAqyQA6pj0uhLjIdNuwNvOZlUXBinfRIsI)", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "same encrypted stream of bytes in place of the header for all communication generated by the executable.", "context_left": "As this request and response is encrypted with the same symmetric key, the header “[DataStart]” will generate the", "context_right": "", "_context_left": "As this request and response is encrypted with the same symmetric key, the header “[DataStart]” will generate the ", "_context_right": "", "sentence_left": "Upon execution, Remcos sends system information to its C&C server, and in return the server replies with commands to execute.", "sentence_right": "![](https://lh5.googleusercontent.com/ueaF5gjccOqVQVXS2sRGsLoQin-mq3xSkD-SwxC7XZRlQLqmidAWsItAJKXAALu_LIsYjNqovbDiRsM3DRRqSg6lvtdZ9s4SvOJuxehAqyQA6pj0uhLjIdNuwNvOZlUXBinfRIsI)", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*Fig.6: Data sent to", "context_right": "server as RC4 encrypted.*", "_context_left": "*Fig.6: Data sent to ", "_context_right": " server as RC4 encrypted.*", "sentence_left": "![](https://lh5.googleusercontent.com/ueaF5gjccOqVQVXS2sRGsLoQin-mq3xSkD-SwxC7XZRlQLqmidAWsItAJKXAALu_LIsYjNqovbDiRsM3DRRqSg6lvtdZ9s4SvOJuxehAqyQA6pj0uhLjIdNuwNvOZlUXBinfRIsI)", "sentence_right": "As an example, it can be seen in the above image, a binary stream of bytes “08 b4 de f6 84 27 70 9a 57 17 5e” has taken place of the header “[DataStart]”.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Data sent to C&C server as RC4 encrypted", "context_left": "*Fig.6:", "context_right": ".*", "_context_left": "*Fig.6: ", "_context_right": ".*", "sentence_left": "![](https://lh5.googleusercontent.com/ueaF5gjccOqVQVXS2sRGsLoQin-mq3xSkD-SwxC7XZRlQLqmidAWsItAJKXAALu_LIsYjNqovbDiRsM3DRRqSg6lvtdZ9s4SvOJuxehAqyQA6pj0uhLjIdNuwNvOZlUXBinfRIsI)", "sentence_right": "As an example, it can be seen in the above image, a binary stream of bytes “08 b4 de f6 84 27 70 9a 57 17 5e” has taken place of the header “[DataStart]”.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Remcos", "context_left": "The repeated stream pattern of 11 bytes in requests and responses—plus a combination of other heuristics such as entropy and data length limits—can be considered for flagging RC4 encrypted", "context_right": "traffic.", "_context_left": "The repeated stream pattern of 11 bytes in requests and responses—plus a combination of other heuristics such as entropy and data length limits—can be considered for flagging RC4 encrypted ", "_context_right": " traffic.", "sentence_left": "As an example, it can be seen in the above image, a binary stream of bytes “08 b4 de f6 84 27 70 9a 57 17 5e” has taken place of the header “[DataStart]”.", "sentence_right": "### **Crimson RAT**", "label": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)", "label_id": 713, "label_title": "Remcos", "label_link": "https://attack.mitre.org/software/S0332", "entity_class": "CE", "entity_type": "TOOL", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "RC4 encrypted Remcos traffic", "context_left": "The repeated stream pattern of 11 bytes in requests and responses—plus a combination of other heuristics such as entropy and data length limits—can be considered for flagging", "context_right": ".", "_context_left": "The repeated stream pattern of 11 bytes in requests and responses—plus a combination of other heuristics such as entropy and data length limits—can be considered for flagging ", "_context_right": ".", "sentence_left": "As an example, it can be seen in the above image, a binary stream of bytes “08 b4 de f6 84 27 70 9a 57 17 5e” has taken place of the header “[DataStart]”.", "sentence_right": "### **Crimson RAT**", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Crimson", "context_left": "### **", "context_right": "RAT**", "_context_left": "### **", "_context_right": " RAT**", "sentence_left": "The repeated stream pattern of 11 bytes in requests and responses—plus a combination of other heuristics such as entropy and data length limits—can be considered for flagging RC4 encrypted Remcos traffic.", "sentence_right": "Crimson RAT has been favored by threat actors for targeted attacks on governments and organizations in the financial, healthcare, and space technology sectors.", "label": "[Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2016.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)", "label_id": 1036, "label_title": "Crimson", "label_link": "https://attack.mitre.org/software/S0115", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Crimson", "context_left": "", "context_right": "RAT has been favored by threat actors for targeted attacks on governments and organizations in the financial, healthcare, and space technology sectors.", "_context_left": "", "_context_right": " RAT has been favored by threat actors for targeted attacks on governments and organizations in the financial, healthcare, and space technology sectors.", "sentence_left": "### **Crimson RAT**", "sentence_right": "In 2016, it was found to be used in targeted attacks against Indian diplomatic and military resources.", "label": "[Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2016.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)", "label_id": 1036, "label_title": "Crimson", "label_link": "https://attack.mitre.org/software/S0115", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Crimson", "context_left": "", "context_right": "is typically delivered to the victim via a phishing email containing a malicious .doc file or link to a malicious executable.", "_context_left": "", "_context_right": " is typically delivered to the victim via a phishing email containing a malicious .doc file or link to a malicious executable.", "sentence_left": "Last year, we found it [targeting Indian financial institutions](/blogs/security-research/targeted-attack-indian-financial-institution-delivers-crimson-rat).", "sentence_right": "![](https://lh3.googleusercontent.com/c7KKJMQxQbwMWpqvZ_pJkOGJ6PmWkAp4tsVV3p2Bz3q0URqeSGgeSN9pxCx23208FoGOV4FeHCC6KDY3foKhvH9u1izFykL4QfoUi2Hxgs4rA_Wgtnzh6arhGnzXhGB3hG65-euh)", "label": "[Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2016.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)", "label_id": 1036, "label_title": "Crimson", "label_link": "https://attack.mitre.org/software/S0115", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "delivered to the victim via a phishing email containing a malicious .doc file or link to a malicious executable", "context_left": "Crimson is typically", "context_right": ".", "_context_left": "Crimson is typically ", "_context_right": ".", "sentence_left": "Last year, we found it [targeting Indian financial institutions](/blogs/security-research/targeted-attack-indian-financial-institution-delivers-crimson-rat).", "sentence_right": "![](https://lh3.googleusercontent.com/c7KKJMQxQbwMWpqvZ_pJkOGJ6PmWkAp4tsVV3p2Bz3q0URqeSGgeSN9pxCx23208FoGOV4FeHCC6KDY3foKhvH9u1izFykL4QfoUi2Hxgs4rA_Wgtnzh6arhGnzXhGB3hG65-euh)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*Fig.7: Data sent to", "context_right": "server*", "_context_left": "*Fig.7: Data sent to ", "_context_right": " server*", "sentence_left": "![](https://lh3.googleusercontent.com/c7KKJMQxQbwMWpqvZ_pJkOGJ6PmWkAp4tsVV3p2Bz3q0URqeSGgeSN9pxCx23208FoGOV4FeHCC6KDY3foKhvH9u1izFykL4QfoUi2Hxgs4rA_Wgtnzh6arhGnzXhGB3hG65-euh)", "sentence_right": "### **NetWire RAT**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Data sent to C&C server", "context_left": "*Fig.7:", "context_right": "*", "_context_left": "*Fig.7: ", "_context_right": "*", "sentence_left": "![](https://lh3.googleusercontent.com/c7KKJMQxQbwMWpqvZ_pJkOGJ6PmWkAp4tsVV3p2Bz3q0URqeSGgeSN9pxCx23208FoGOV4FeHCC6KDY3foKhvH9u1izFykL4QfoUi2Hxgs4rA_Wgtnzh6arhGnzXhGB3hG65-euh)", "sentence_right": "### **NetWire RAT**", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NetWire", "context_left": "### **", "context_right": "RAT**", "_context_left": "### **", "_context_right": " RAT**", "sentence_left": "*Fig.7: Data sent to C&C server*", "sentence_right": "The NetWire RAT is a malicious tool that emerged almost a decade ago and has been updated many times since then.", "label": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)", "label_id": 711, "label_title": "NETWIRE", "label_link": "https://attack.mitre.org/software/S0198", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NetWire", "context_left": "The", "context_right": "RAT is a malicious tool that emerged almost a decade ago and has been updated many times since then.", "_context_left": "The ", "_context_right": " RAT is a malicious tool that emerged almost a decade ago and has been updated many times since then.", "sentence_left": "### **NetWire RAT**", "sentence_right": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "label": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)", "label_id": 711, "label_title": "NETWIRE", "label_link": "https://attack.mitre.org/software/S0198", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NetWire", "context_left": "", "context_right": "has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "_context_left": "", "_context_right": " has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "sentence_left": "The NetWire RAT is a malicious tool that emerged almost a decade ago and has been updated many times since then.", "sentence_right": "Typically, the NetWire RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as GuLoader.", "label": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)", "label_id": 711, "label_title": "NETWIRE", "label_link": "https://attack.mitre.org/software/S0198", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "SilverTerrier", "context_left": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [", "context_right": "](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "_context_left": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [", "_context_right": "](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "sentence_left": "The NetWire RAT is a malicious tool that emerged almost a decade ago and has been updated many times since then.", "sentence_right": "Typically, the NetWire RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as GuLoader.", "label": "[SilverTerrier](https://attack.mitre.org/groups/G0083) is a Nigerian threat group that has been seen active since 2014. [SilverTerrier](https://attack.mitre.org/groups/G0083) mainly targets organizations in high technology, higher education, and manufacturing.(Citation: Unit42 SilverTerrier 2018)(Citation: Unit42 SilverTerrier 2016)", "label_id": 1265, "label_title": "SilverTerrier", "label_link": "https://attack.mitre.org/groups/G0083", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "The White Company", "context_left": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [", "context_right": "](https://attack.mitre.org/groups/G0089/).", "_context_left": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [", "_context_right": "](https://attack.mitre.org/groups/G0089/).", "sentence_left": "The NetWire RAT is a malicious tool that emerged almost a decade ago and has been updated many times since then.", "sentence_right": "Typically, the NetWire RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as GuLoader.", "label": "[The White Company](https://attack.mitre.org/groups/G0089) is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan.(Citation: Cylance Shaheen Nov 2018)", "label_id": 1250, "label_title": "The White Company", "label_link": "https://attack.mitre.org/groups/G0089", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NetWire", "context_left": "Typically, the", "context_right": "RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as GuLoader.", "_context_left": "Typically, the ", "_context_right": " RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as GuLoader.", "sentence_left": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "sentence_right": "Also, it was found to be delivered via [exploit kits](/blogs/security-research/sundown-chronicles-observations-exploit-kits-evolution).", "label": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)", "label_id": 711, "label_title": "NETWIRE", "label_link": "https://attack.mitre.org/software/S0198", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "GuLoader", "context_left": "Typically, the NetWire RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as", "context_right": ".", "_context_left": "Typically, the NetWire RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as ", "_context_right": ".", "sentence_left": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "sentence_right": "Also, it was found to be delivered via [exploit kits](/blogs/security-research/sundown-chronicles-observations-exploit-kits-evolution).", "label": "[GuLoader](https://attack.mitre.org/software/S0561) is a file downloader that has been used since at least December 2019 to distribute a variety of remote administration tool (RAT) malware, including [NETWIRE](https://attack.mitre.org/software/S0198), [Agent Tesla](https://attack.mitre.org/software/S0331), [NanoCore](https://attack.mitre.org/software/S0336), FormBook, and Parallax RAT.(Citation: Unit 42 NETWIRE April 2020)(Citation: Medium Eli Salem GuLoader April 2021)", "label_id": 1096, "label_title": "GuLoader", "label_link": "https://attack.mitre.org/software/S0561", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "downloaded as a second-stage payload", "context_left": "Typically, the NetWire RAT is", "context_right": "to systems that have been compromised using other malware such as GuLoader.", "_context_left": "Typically, the NetWire RAT is ", "_context_right": " to systems that have been compromised using other malware such as GuLoader.", "sentence_left": "NetWire has been detected in various campaigns such as [Hydrojiin](/blogs/security-research/look-hydrojiin-campaign) and advanced persistent threat (APT) attacks including [SilverTerrier](https://attack.mitre.org/groups/G0083/) and [The White Company](https://attack.mitre.org/groups/G0089/).", "sentence_right": "Also, it was found to be delivered via [exploit kits](/blogs/security-research/sundown-chronicles-observations-exploit-kits-evolution).", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NetWire", "context_left": "", "context_right": "communicates with custom protocols over TCP and communication is encrypted with AES encryption.", "_context_left": "", "_context_right": " communicates with custom protocols over TCP and communication is encrypted with AES encryption.", "sentence_left": "Also, it was found to be delivered via [exploit kits](/blogs/security-research/sundown-chronicles-observations-exploit-kits-evolution).", "sentence_right": "Each packet begins with a length of data followed by one byte for the command and then followed by data.", "label": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)", "label_id": 711, "label_title": "NETWIRE", "label_link": "https://attack.mitre.org/software/S0198", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NetWire communicates with custom protocols over TCP", "context_left": "", "context_right": "and communication is encrypted with AES encryption.", "_context_left": "", "_context_right": " and communication is encrypted with AES encryption.", "sentence_left": "Also, it was found to be delivered via [exploit kits](/blogs/security-research/sundown-chronicles-observations-exploit-kits-evolution).", "sentence_right": "Each packet begins with a length of data followed by one byte for the command and then followed by data.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communication is encrypted with AES encryption", "context_left": "NetWire communicates with custom protocols over TCP and", "context_right": ".", "_context_left": "NetWire communicates with custom protocols over TCP and ", "_context_right": ".", "sentence_left": "Also, it was found to be delivered via [exploit kits](/blogs/security-research/sundown-chronicles-observations-exploit-kits-evolution).", "sentence_right": "Each packet begins with a length of data followed by one byte for the command and then followed by data.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "The", "context_right": "server generates a session key for this information.", "_context_left": "The ", "_context_right": " server generates a session key for this information.", "sentence_left": "The initial packet sends a 32-byte seed value along with 16-byte IV value and hardcoded password specified in the binary to generate the AES key.", "sentence_right": "![](https://lh4.googleusercontent.com/usA4f2R1PIROH6JL8hvC6FHrb_GuwbBcM3LO2F6hudKGMeEyRfB3Waea5wyfE3nSlk6MyqzXj0SE6t05M4etgOhBwOGYJ_pa2Akv4hN8S34D4S3CRVALYkQwBGqdRCThxlk9ZHrk)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "The", "context_right": "server generates a session key for this information.", "_context_left": "The ", "_context_right": " server generates a session key for this information.", "sentence_left": "The initial packet sends a 32-byte seed value along with 16-byte IV value and hardcoded password specified in the binary to generate the AES key.", "sentence_right": "![](https://lh4.googleusercontent.com/usA4f2R1PIROH6JL8hvC6FHrb_GuwbBcM3LO2F6hudKGMeEyRfB3Waea5wyfE3nSlk6MyqzXj0SE6t05M4etgOhBwOGYJ_pa2Akv4hN8S34D4S3CRVALYkQwBGqdRCThxlk9ZHrk)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*Fig.8: Data sent to", "context_right": "server as AES encrypted.*", "_context_left": "*Fig.8: Data sent to ", "_context_right": " server as AES encrypted.*", "sentence_left": "![](https://lh4.googleusercontent.com/usA4f2R1PIROH6JL8hvC6FHrb_GuwbBcM3LO2F6hudKGMeEyRfB3Waea5wyfE3nSlk6MyqzXj0SE6t05M4etgOhBwOGYJ_pa2Akv4hN8S34D4S3CRVALYkQwBGqdRCThxlk9ZHrk)", "sentence_right": "As the communication is AES encrypted, it is not possible to scan for signature patterns in communication.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Data sent to C&C server as AES encrypted", "context_left": "*Fig.8:", "context_right": ".*", "_context_left": "*Fig.8: ", "_context_right": ".*", "sentence_left": "![](https://lh4.googleusercontent.com/usA4f2R1PIROH6JL8hvC6FHrb_GuwbBcM3LO2F6hudKGMeEyRfB3Waea5wyfE3nSlk6MyqzXj0SE6t05M4etgOhBwOGYJ_pa2Akv4hN8S34D4S3CRVALYkQwBGqdRCThxlk9ZHrk)", "sentence_right": "As the communication is AES encrypted, it is not possible to scan for signature patterns in communication.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communication is AES encrypted", "context_left": "As the", "context_right": ", it is not possible to scan for signature patterns in communication.", "_context_left": "As the ", "_context_right": ", it is not possible to scan for signature patterns in communication.", "sentence_left": "*Fig.8: Data sent to C&C server as AES encrypted.*", "sentence_right": "However, there is enough information in the initial packet to flag the traffic as NetWire C&C communication.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NetWire", "context_left": "However, there is enough information in the initial packet to flag the traffic as", "context_right": "C&C communication.", "_context_left": "However, there is enough information in the initial packet to flag the traffic as ", "_context_right": " C&C communication.", "sentence_left": "As the communication is AES encrypted, it is not possible to scan for signature patterns in communication.", "sentence_right": "### **AsyncRAT**", "label": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)", "label_id": 711, "label_title": "NETWIRE", "label_link": "https://attack.mitre.org/software/S0198", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "However, there is enough information in the initial packet to flag the traffic as NetWire", "context_right": "communication.", "_context_left": "However, there is enough information in the initial packet to flag the traffic as NetWire ", "_context_right": " communication.", "sentence_left": "As the communication is AES encrypted, it is not possible to scan for signature patterns in communication.", "sentence_right": "### **AsyncRAT**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "However, there is enough information in the initial packet to flag the traffic as NetWire", "context_right": "communication.", "_context_left": "However, there is enough information in the initial packet to flag the traffic as NetWire ", "_context_right": " communication.", "sentence_left": "As the communication is AES encrypted, it is not possible to scan for signature patterns in communication.", "sentence_right": "### **AsyncRAT**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "### **", "context_right": "**", "_context_left": "### **", "_context_right": "**", "sentence_left": "However, there is enough information in the initial packet to flag the traffic as NetWire C&C communication.", "sentence_right": "AsyncRAT is an open-source RAT designed to remotely monitor and control other computers through a secure encrypted connection.", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "", "context_right": "is an open-source RAT designed to remotely monitor and control other computers through a secure encrypted connection.", "_context_left": "", "_context_right": " is an open-source RAT designed to remotely monitor and control other computers through a secure encrypted connection.", "sentence_left": "### **AsyncRAT**", "sentence_right": "AsyncRAT provides functionality such as keylogger, screen viewer, command execution, and many more.", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "monitor and control other computers through a secure encrypted connection.", "context_left": "AsyncRAT is an open-source RAT designed to remotely", "context_right": "", "_context_left": "AsyncRAT is an open-source RAT designed to remotely ", "_context_right": "", "sentence_left": "### **AsyncRAT**", "sentence_right": "AsyncRAT provides functionality such as keylogger, screen viewer, command execution, and many more.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "", "context_right": "provides functionality such as keylogger, screen viewer, command execution, and many more.", "_context_left": "", "_context_right": " provides functionality such as keylogger, screen viewer, command execution, and many more.", "sentence_left": "AsyncRAT is an open-source RAT designed to remotely monitor and control other computers through a secure encrypted connection.", "sentence_right": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "command execution", "context_left": "AsyncRAT provides functionality such as keylogger, screen viewer,", "context_right": ", and many more.", "_context_left": "AsyncRAT provides functionality such as keylogger, screen viewer, ", "_context_right": ", and many more.", "sentence_left": "AsyncRAT is an open-source RAT designed to remotely monitor and control other computers through a secure encrypted connection.", "sentence_right": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "keylogger,", "context_left": "AsyncRAT provides functionality such as", "context_right": "screen viewer, command execution, and many more.", "_context_left": "AsyncRAT provides functionality such as ", "_context_right": " screen viewer, command execution, and many more.", "sentence_left": "AsyncRAT is an open-source RAT designed to remotely monitor and control other computers through a secure encrypted connection.", "sentence_right": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "screen viewer", "context_left": "AsyncRAT provides functionality such as keylogger,", "context_right": ", command execution, and many more.", "_context_left": "AsyncRAT provides functionality such as keylogger, ", "_context_right": ", command execution, and many more.", "sentence_left": "AsyncRAT is an open-source RAT designed to remotely monitor and control other computers through a secure encrypted connection.", "sentence_right": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "label": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)", "label_id": 26, "label_title": "Screen Capture", "label_link": "https://attack.mitre.org/techniques/T1113", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "Because of its feature of secure communication,", "context_right": "is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "_context_left": "Because of its feature of secure communication, ", "_context_right": " is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "sentence_left": "AsyncRAT provides functionality such as keylogger, screen viewer, command execution, and many more.", "sentence_right": "AsyncRAT has been found to be delivered via various methods such as spear-phishing, malvertising, and exploit kits.", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "", "context_right": "has been found to be delivered via various methods such as spear-phishing, malvertising, and exploit kits.", "_context_left": "", "_context_right": " has been found to be delivered via various methods such as spear-phishing, malvertising, and exploit kits.", "sentence_left": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "sentence_right": "AsyncRAT communicates over secure TCP channels.", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "delivered via various methods such as spear-phishing", "context_left": "AsyncRAT has been found to be", "context_right": ", malvertising, and exploit kits.", "_context_left": "AsyncRAT has been found to be ", "_context_right": ", malvertising, and exploit kits.", "sentence_left": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "sentence_right": "AsyncRAT communicates over secure TCP channels.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "malvertising", "context_left": "AsyncRAT has been found to be delivered via various methods such as spear-phishing,", "context_right": ", and exploit kits.", "_context_left": "AsyncRAT has been found to be delivered via various methods such as spear-phishing, ", "_context_right": ", and exploit kits.", "sentence_left": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "sentence_right": "AsyncRAT communicates over secure TCP channels.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "exploit kits", "context_left": "AsyncRAT has been found to be delivered via various methods such as spear-phishing, malvertising, and", "context_right": ".", "_context_left": "AsyncRAT has been found to be delivered via various methods such as spear-phishing, malvertising, and ", "_context_right": ".", "sentence_left": "Because of its feature of secure communication, AsyncRAT is used for malicious motives by cybercriminals and weaponized in APT campaigns such as \"[Operation Spalax](https://www.welivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombia/).", "sentence_right": "AsyncRAT communicates over secure TCP channels.", "label": "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)(Citation: NVD CVE-2016-6662), standard services (like SMB(Citation: CIS Multiple SMB Vulnerabilities) or SSH), network device administration and management protocols (like SNMP and Smart Install(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies. For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)", "label_id": 8, "label_title": "Exploit Public-Facing Application", "label_link": "https://attack.mitre.org/techniques/T1190", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "", "context_right": "communicates over secure TCP channels.", "_context_left": "", "_context_right": " communicates over secure TCP channels.", "sentence_left": "AsyncRAT has been found to be delivered via various methods such as spear-phishing, malvertising, and exploit kits.", "sentence_right": "As the custom certificate is carried in the binary itself and matched against the C&C certificate, it is not possible to strip the TLS layer at the proxy/gateway level.", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicates over secure TCP channels.", "context_left": "AsyncRAT", "context_right": "", "_context_left": "AsyncRAT ", "_context_right": "", "sentence_left": "AsyncRAT has been found to be delivered via various methods such as spear-phishing, malvertising, and exploit kits.", "sentence_right": "As the custom certificate is carried in the binary itself and matched against the C&C certificate, it is not possible to strip the TLS layer at the proxy/gateway level.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "As the custom certificate is carried in the binary itself and matched against the", "context_right": "certificate, it is not possible to strip the TLS layer at the proxy/gateway level.", "_context_left": "As the custom certificate is carried in the binary itself and matched against the ", "_context_right": " certificate, it is not possible to strip the TLS layer at the proxy/gateway level.", "sentence_left": "AsyncRAT communicates over secure TCP channels.", "sentence_right": "However, such custom certificates can be filtered out and communication can be blocked by other preventing controls.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "As the custom certificate is carried in the binary itself and matched against the", "context_right": "certificate, it is not possible to strip the TLS layer at the proxy/gateway level.", "_context_left": "As the custom certificate is carried in the binary itself and matched against the ", "_context_right": " certificate, it is not possible to strip the TLS layer at the proxy/gateway level.", "sentence_left": "AsyncRAT communicates over secure TCP channels.", "sentence_right": "However, such custom certificates can be filtered out and communication can be blocked by other preventing controls.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "*Fig.9: Server certificate having subject and issuer name as “", "context_right": "Server”*", "_context_left": "*Fig.9: Server certificate having subject and issuer name as “", "_context_right": " Server”*", "sentence_left": "![](https://lh6.googleusercontent.com/BNgh3pB-hE3i75fI2LSr9VK7ePZZBZCsiph1M5US6SA0Bbpxa16uuoyrATQTg3bxHjUbU7Ioe65psbtZBq0_Wt9JzweADaAdhdmck0S9UAt6ildONREL6uTwxoyARwUHLznCo48P)", "sentence_right": "#### **Quasar RAT**", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Quasar", "context_left": "#### **", "context_right": "RAT**", "_context_left": "#### **", "_context_right": " RAT**", "sentence_left": "*Fig.9: Server certificate having subject and issuer name as “AsyncRAT Server”*", "sentence_right": "Quasar is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[Gorgon Group](https://attack.mitre.org/groups/G0078/)” and “[Patchwork](https://attack.mitre.org/groups/G0040/).", "label": "[QuasarRAT](https://attack.mitre.org/software/S0262) is an open-source, remote access tool that is publicly available on GitHub. [QuasarRAT](https://attack.mitre.org/software/S0262) is developed in the C# language. (Citation: GitHub QuasarRAT) (Citation: Volexity Patchwork June 2018)", "label_id": 774, "label_title": "QuasarRAT", "label_link": "https://attack.mitre.org/software/S0262", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Quasar", "context_left": "", "context_right": "is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[Gorgon Group](https://attack.mitre.org/groups/G0078/)” and “[Patchwork](https://attack.mitre.org/groups/G0040/).", "_context_left": "", "_context_right": " is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[Gorgon Group](https://attack.mitre.org/groups/G0078/)” and “[Patchwork](https://attack.mitre.org/groups/G0040/).", "sentence_left": "#### **Quasar RAT**", "sentence_right": "Its features include remote desktop, keylogging, password stealing, and many more.", "label": "[QuasarRAT](https://attack.mitre.org/software/S0262) is an open-source, remote access tool that is publicly available on GitHub. [QuasarRAT](https://attack.mitre.org/software/S0262) is developed in the C# language. (Citation: GitHub QuasarRAT) (Citation: Volexity Patchwork June 2018)", "label_id": 774, "label_title": "QuasarRAT", "label_link": "https://attack.mitre.org/software/S0262", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Gorgon Group", "context_left": "Quasar is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[", "context_right": "](https://attack.mitre.org/groups/G0078/)” and “[Patchwork](https://attack.mitre.org/groups/G0040/).", "_context_left": "Quasar is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[", "_context_right": "](https://attack.mitre.org/groups/G0078/)” and “[Patchwork](https://attack.mitre.org/groups/G0040/).", "sentence_left": "#### **Quasar RAT**", "sentence_right": "Its features include remote desktop, keylogging, password stealing, and many more.", "label": "[Gorgon Group](https://attack.mitre.org/groups/G0078) is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. (Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 1168, "label_title": "Gorgon Group", "label_link": "https://attack.mitre.org/groups/G0078", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Patchwork", "context_left": "Quasar is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[Gorgon Group](https://attack.mitre.org/groups/G0078/)” and “[", "context_right": "](https://attack.mitre.org/groups/G0040/).", "_context_left": "Quasar is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[Gorgon Group](https://attack.mitre.org/groups/G0078/)” and “[", "_context_right": "](https://attack.mitre.org/groups/G0040/).", "sentence_left": "#### **Quasar RAT**", "sentence_right": "Its features include remote desktop, keylogging, password stealing, and many more.", "label": "[Patchwork](https://attack.mitre.org/groups/G0040) is a cyberespionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. [Patchwork](https://attack.mitre.org/groups/G0040) has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. [Patchwork](https://attack.mitre.org/groups/G0040) was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018. (Citation: Cymmetria Patchwork) (Citation: Symantec Patchwork) (Citation: TrendMicro Patchwork Dec 2017) (Citation: Volexity Patchwork June 2018)", "label_id": 1181, "label_title": "Patchwork", "label_link": "https://attack.mitre.org/groups/G0040", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "keylogging", "context_left": "Its features include remote desktop,", "context_right": ", password stealing, and many more.", "_context_left": "Its features include remote desktop, ", "_context_right": ", password stealing, and many more.", "sentence_left": "Quasar is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[Gorgon Group](https://attack.mitre.org/groups/G0078/)” and “[Patchwork](https://attack.mitre.org/groups/G0040/).", "sentence_right": "Quasar encrypts communications using an AES algorithm with a pre-shared key hardcoded in the client binary.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "password stealing", "context_left": "Its features include remote desktop, keylogging,", "context_right": ", and many more.", "_context_left": "Its features include remote desktop, keylogging, ", "_context_right": ", and many more.", "sentence_left": "Quasar is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors including “[Gorgon Group](https://attack.mitre.org/groups/G0078/)” and “[Patchwork](https://attack.mitre.org/groups/G0040/).", "sentence_right": "Quasar encrypts communications using an AES algorithm with a pre-shared key hardcoded in the client binary.", "label": "The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "label_id": 585, "label_title": "Credential Access", "label_link": "https://attack.mitre.org/tactics/TA0006", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Quasar", "context_left": "", "context_right": "encrypts communications using an AES algorithm with a pre-shared key hardcoded in the client binary.", "_context_left": "", "_context_right": " encrypts communications using an AES algorithm with a pre-shared key hardcoded in the client binary.", "sentence_left": "Its features include remote desktop, keylogging, password stealing, and many more.", "sentence_right": "It is not possible to scan for signature patterns on AES-encrypted traffic.", "label": "[QuasarRAT](https://attack.mitre.org/software/S0262) is an open-source, remote access tool that is publicly available on GitHub. [QuasarRAT](https://attack.mitre.org/software/S0262) is developed in the C# language. (Citation: GitHub QuasarRAT) (Citation: Volexity Patchwork June 2018)", "label_id": 774, "label_title": "QuasarRAT", "label_link": "https://attack.mitre.org/software/S0262", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypts communications using an AES algorithm", "context_left": "Quasar", "context_right": "with a pre-shared key hardcoded in the client binary.", "_context_left": "Quasar ", "_context_right": " with a pre-shared key hardcoded in the client binary.", "sentence_left": "Its features include remote desktop, keylogging, password stealing, and many more.", "sentence_right": "It is not possible to scan for signature patterns on AES-encrypted traffic.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypted data packets can be leveraged to flag Quasar's AES encrypted traffic.", "context_left": "However, the distinctive characteristics of", "context_right": "", "_context_left": "However, the distinctive characteristics of ", "_context_right": "", "sentence_left": "It is not possible to scan for signature patterns on AES-encrypted traffic.", "sentence_right": "![](https://lh3.googleusercontent.com/McWJS_eN_K5qholLoB9qdc8ov8DeRV38MG1uGZ-_1F4rRmCrKiFUKo1rrV5YHo4yI1xUPFtw8z-h2sc7F-8C9_bIH8vW1FWxdKL2FVKRXBox2vL71qJsAnhSI4GDRslj74o8f3gI)", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*Fig.10: Data sent to", "context_right": "server as AES encrypted.*", "_context_left": "*Fig.10: Data sent to ", "_context_right": " server as AES encrypted.*", "sentence_left": "![](https://lh3.googleusercontent.com/McWJS_eN_K5qholLoB9qdc8ov8DeRV38MG1uGZ-_1F4rRmCrKiFUKo1rrV5YHo4yI1xUPFtw8z-h2sc7F-8C9_bIH8vW1FWxdKL2FVKRXBox2vL71qJsAnhSI4GDRslj74o8f3gI)", "sentence_right": "The distinctive first 4 bytes of the payload can be used to identify Quasar traffic.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C server as AES encrypted", "context_left": "*Fig.10: Data sent to", "context_right": ".*", "_context_left": "*Fig.10: Data sent to ", "_context_right": ".*", "sentence_left": "![](https://lh3.googleusercontent.com/McWJS_eN_K5qholLoB9qdc8ov8DeRV38MG1uGZ-_1F4rRmCrKiFUKo1rrV5YHo4yI1xUPFtw8z-h2sc7F-8C9_bIH8vW1FWxdKL2FVKRXBox2vL71qJsAnhSI4GDRslj74o8f3gI)", "sentence_right": "The distinctive first 4 bytes of the payload can be used to identify Quasar traffic.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Quasar", "context_left": "The distinctive first 4 bytes of the payload can be used to identify", "context_right": "traffic.", "_context_left": "The distinctive first 4 bytes of the payload can be used to identify ", "_context_right": " traffic.", "sentence_left": "*Fig.10: Data sent to C&C server as AES encrypted.*", "sentence_right": "Specifically, the first 4 bytes can identify the first packet sent from the server to the client following the TCP handshake.", "label": "[QuasarRAT](https://attack.mitre.org/software/S0262) is an open-source, remote access tool that is publicly available on GitHub. [QuasarRAT](https://attack.mitre.org/software/S0262) is developed in the C# language. (Citation: GitHub QuasarRAT) (Citation: Volexity Patchwork June 2018)", "label_id": 774, "label_title": "QuasarRAT", "label_link": "https://attack.mitre.org/software/S0262", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Agent Tesla", "context_left": "### **", "context_right": "RAT**", "_context_left": "### **", "_context_right": " RAT**", "sentence_left": "The first 4 bytes of the TCP payload contain \"40 00 00 00\" which is the size of the data that follows in little endian.", "sentence_right": "The Agent Tesla RAT has been very active and prevalent.", "label": "[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)", "label_id": 846, "label_title": "Agent Tesla", "label_link": "https://attack.mitre.org/software/S0331", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Agent Tesla", "context_left": "The", "context_right": "RAT has been very active and prevalent.", "_context_left": "The ", "_context_right": " RAT has been very active and prevalent.", "sentence_left": "### **Agent Tesla RAT**", "sentence_right": "Over the last couple of years, there have been huge ongoing phishing campaigns delivering Agent Tesla RAT.", "label": "[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)", "label_id": 846, "label_title": "Agent Tesla", "label_link": "https://attack.mitre.org/software/S0331", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Agent Tesla", "context_left": "Over the last couple of years, there have been huge ongoing phishing campaigns delivering", "context_right": "RAT.", "_context_left": "Over the last couple of years, there have been huge ongoing phishing campaigns delivering ", "_context_right": " RAT.", "sentence_left": "The Agent Tesla RAT has been very active and prevalent.", "sentence_right": "Agent Tesla has evolved over time, varying its behavior from campaign to campaign.", "label": "[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)", "label_id": 846, "label_title": "Agent Tesla", "label_link": "https://attack.mitre.org/software/S0331", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "phishing campaigns delivering Agent Tesla", "context_left": "Over the last couple of years, there have been huge ongoing", "context_right": "RAT.", "_context_left": "Over the last couple of years, there have been huge ongoing ", "_context_right": " RAT.", "sentence_left": "The Agent Tesla RAT has been very active and prevalent.", "sentence_right": "Agent Tesla has evolved over time, varying its behavior from campaign to campaign.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Agent Tesla", "context_left": "", "context_right": "has evolved over time, varying its behavior from campaign to campaign.", "_context_left": "", "_context_right": " has evolved over time, varying its behavior from campaign to campaign.", "sentence_left": "Over the last couple of years, there have been huge ongoing phishing campaigns delivering Agent Tesla RAT.", "sentence_right": "Cybercriminals use this RAT to steal user credentials and spy on victims through screenshots, keyboard logging, and clipboard capturing.", "label": "[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)", "label_id": 846, "label_title": "Agent Tesla", "label_link": "https://attack.mitre.org/software/S0331", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "steal user credentials", "context_left": "Cybercriminals use this RAT to", "context_right": "and spy on victims through screenshots, keyboard logging, and clipboard capturing.", "_context_left": "Cybercriminals use this RAT to ", "_context_right": " and spy on victims through screenshots, keyboard logging, and clipboard capturing.", "sentence_left": "Agent Tesla has evolved over time, varying its behavior from campaign to campaign.", "sentence_right": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "label": "The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "label_id": 585, "label_title": "Credential Access", "label_link": "https://attack.mitre.org/tactics/TA0006", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "spy on victims through screenshots", "context_left": "Cybercriminals use this RAT to steal user credentials and", "context_right": ", keyboard logging, and clipboard capturing.", "_context_left": "Cybercriminals use this RAT to steal user credentials and ", "_context_right": ", keyboard logging, and clipboard capturing.", "sentence_left": "Agent Tesla has evolved over time, varying its behavior from campaign to campaign.", "sentence_right": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "label": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)", "label_id": 26, "label_title": "Screen Capture", "label_link": "https://attack.mitre.org/techniques/T1113", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "keyboard logging", "context_left": "Cybercriminals use this RAT to steal user credentials and spy on victims through screenshots,", "context_right": ", and clipboard capturing.", "_context_left": "Cybercriminals use this RAT to steal user credentials and spy on victims through screenshots, ", "_context_right": ", and clipboard capturing.", "sentence_left": "Agent Tesla has evolved over time, varying its behavior from campaign to campaign.", "sentence_right": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "clipboard capturing", "context_left": "Cybercriminals use this RAT to steal user credentials and spy on victims through screenshots, keyboard logging, and", "context_right": ".", "_context_left": "Cybercriminals use this RAT to steal user credentials and spy on victims through screenshots, keyboard logging, and ", "_context_right": ".", "sentence_left": "Agent Tesla has evolved over time, varying its behavior from campaign to campaign.", "sentence_right": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "label": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. In Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)", "label_id": 346, "label_title": "Clipboard Data", "label_link": "https://attack.mitre.org/techniques/T1115", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Credential stealing", "context_left": "", "context_right": "is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "_context_left": "", "_context_right": " is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_left": "Cybercriminals use this RAT to steal user credentials and spy on victims through screenshots, keyboard logging, and clipboard capturing.", "sentence_right": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, FTP, SMTP, and Telegram API.", "label": "The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "label_id": 585, "label_title": "Credential Access", "label_link": "https://attack.mitre.org/tactics/TA0006", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Agent Tesla", "context_left": "", "context_right": "communicates and exfiltrates data to its C&C server on HTTP, FTP, SMTP, and Telegram API.", "_context_left": "", "_context_right": " communicates and exfiltrates data to its C&C server on HTTP, FTP, SMTP, and Telegram API.", "sentence_left": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_right": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "label": "[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)", "label_id": 846, "label_title": "Agent Tesla", "label_link": "https://attack.mitre.org/software/S0331", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Agent Tesla communicates and exfiltrates data to its", "context_right": "server on HTTP, FTP, SMTP, and Telegram API.", "_context_left": "Agent Tesla communicates and exfiltrates data to its ", "_context_right": " server on HTTP, FTP, SMTP, and Telegram API.", "sentence_left": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_right": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicates and exfiltrates data to its C&C", "context_left": "Agent Tesla", "context_right": "server on HTTP, FTP, SMTP, and Telegram API.", "_context_left": "Agent Tesla ", "_context_right": " server on HTTP, FTP, SMTP, and Telegram API.", "sentence_left": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_right": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "HTTP", "context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on", "context_right": ", FTP, SMTP, and Telegram API.", "_context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on ", "_context_right": ", FTP, SMTP, and Telegram API.", "sentence_left": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_right": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "FTP", "context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP,", "context_right": ", SMTP, and Telegram API.", "_context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, ", "_context_right": ", SMTP, and Telegram API.", "sentence_left": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_right": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "SMTP", "context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, FTP,", "context_right": ", and Telegram API.", "_context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, FTP, ", "_context_right": ", and Telegram API.", "sentence_left": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_right": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Telegram API.", "context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, FTP, SMTP, and", "context_right": "", "_context_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, FTP, SMTP, and ", "_context_right": "", "sentence_left": "Credential stealing is supported across various software ranging from browsers to mail clients, VPNs, and wallets.", "sentence_right": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "label": "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).", "label_id": 522, "label_title": "Web Service", "label_link": "https://attack.mitre.org/techniques/T1102", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a", "context_right": "over one of the aforementioned protocols.", "_context_left": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a ", "_context_right": " over one of the aforementioned protocols.", "sentence_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, FTP, SMTP, and Telegram API.", "sentence_right": "For communication over FTP, the HTML page is sent as a file to an FTP C&C server.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C", "context_left": "All", "context_right": "over one of the aforementioned protocols.", "_context_left": "All ", "_context_right": " over one of the aforementioned protocols.", "sentence_left": "Agent Tesla communicates and exfiltrates data to its C&C server on HTTP, FTP, SMTP, and Telegram API.", "sentence_right": "For communication over FTP, the HTML page is sent as a file to an FTP C&C server.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "For communication over FTP, the HTML page is sent as a file to an FTP", "context_right": "server.", "_context_left": "For communication over FTP, the HTML page is sent as a file to an FTP ", "_context_right": " server.", "sentence_left": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "sentence_right": "The file name is generated in format “PW\\_<UserName>\\_<OS>\\_<Timestamp>.HTML”", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communication over FTP", "context_left": "For", "context_right": ", the HTML page is sent as a file to an FTP C&C server.", "_context_left": "For ", "_context_right": ", the HTML page is sent as a file to an FTP C&C server.", "sentence_left": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "sentence_right": "The file name is generated in format “PW\\_<UserName>\\_<OS>\\_<Timestamp>.HTML”", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "the HTML page is sent as a file to an FTP C&C server", "context_left": "For communication over FTP,", "context_right": ".", "_context_left": "For communication over FTP, ", "_context_right": ".", "sentence_left": "All collected data is encapsulated into an HTML page, and that HTML page is sent to a C&C over one of the aforementioned protocols.", "sentence_right": "The file name is generated in format “PW\\_<UserName>\\_<OS>\\_<Timestamp>.HTML”", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Data to be sent via FTP", "context_left": "*Fig.11:", "context_right": ".*", "_context_left": "*Fig.11: ", "_context_right": ".*", "sentence_left": "![](https://lh5.googleusercontent.com/Y2YwbsGuKtRdA_tsmpFz6qgeMTmxXwe-zF7sgYpReVYihtEZu9w08FFi-yJ5qzMCnwYd4r6fzrGcDDUroOywVfewZonLRNFxZwPQphavAwcr0ADmVNNUqlNrHIi-rJPmfDqtapIU)", "sentence_right": "![](https://lh3.googleusercontent.com/8F2MVgT3zx-6rcHGYEHNkJp9wj610xCU0yscksACAnADDhWCNdNZ7sBkzjHrsY1PLAGurtUGTjlBBf4TQTK-P4Jxq42mm0_1A0-LpwsP373wrC6lYZOS9sgarmgIl3Auq8CzRQy0)", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Exfiltration over FTP", "context_left": "*Fig.12:", "context_right": "*", "_context_left": "*Fig.12: ", "_context_right": "*", "sentence_left": "![](https://lh3.googleusercontent.com/8F2MVgT3zx-6rcHGYEHNkJp9wj610xCU0yscksACAnADDhWCNdNZ7sBkzjHrsY1PLAGurtUGTjlBBf4TQTK-P4Jxq42mm0_1A0-LpwsP373wrC6lYZOS9sgarmgIl3Auq8CzRQy0)", "sentence_right": "For communication over SMTP, the HTML page is sent as a mail body to the C&C server.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "For communication over SMTP, the HTML page is sent as a mail body to the", "context_right": "server.", "_context_left": "For communication over SMTP, the HTML page is sent as a mail body to the ", "_context_right": " server.", "sentence_left": "*Fig.12: Exfiltration over FTP*", "sentence_right": "The mail subject is generated in format “PW\\_<UserName>/<ComputerName>”.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communication over SMTP", "context_left": "For", "context_right": ", the HTML page is sent as a mail body to the C&C server.", "_context_left": "For ", "_context_right": ", the HTML page is sent as a mail body to the C&C server.", "sentence_left": "*Fig.12: Exfiltration over FTP*", "sentence_right": "The mail subject is generated in format “PW\\_<UserName>/<ComputerName>”.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "the HTML page is sent as a mail body to the C&C server", "context_left": "For communication over SMTP,", "context_right": ".", "_context_left": "For communication over SMTP, ", "_context_right": ".", "sentence_left": "*Fig.12: Exfiltration over FTP*", "sentence_right": "The mail subject is generated in format “PW\\_<UserName>/<ComputerName>”.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Exfiltration over SMTP*", "context_left": "*Fig.13:", "context_right": "", "_context_left": "*Fig.13: ", "_context_right": "", "sentence_left": "![](https://lh3.googleusercontent.com/KYoapIP64WbQl-mIxxYgRLvQSfgBJKwb9u8jg2zaJVJgaaSrRvsgJO3Hau49yWAr9H4VeOfc1l5f_viEFHZkKKUwEEyQc1WufV2JPf5vDBjadrOkgLSp1Wcj9hEJrTJ53a7sHfjA)", "sentence_right": "### **CyberGate RAT**", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "CyberGate", "context_left": "### **", "context_right": "RAT**", "_context_left": "### **", "_context_right": " RAT**", "sentence_left": "*Fig.13: Exfiltration over SMTP*", "sentence_right": "CyberGate allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as download and execute additional malware.", "label": "CyberGateRAT", "label_id": 1358, "label_title": "CyberGateRAT", "label_link": "http://www.bosch.com#node1frhbstcrx4", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "CyberGate", "context_left": "", "context_right": "allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as download and execute additional malware.", "_context_left": "", "_context_right": " allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as download and execute additional malware.", "sentence_left": "### **CyberGate RAT**", "sentence_right": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and remote enabling of webcams.", "label": "CyberGateRAT", "label_id": 1358, "label_title": "CyberGateRAT", "label_link": "http://www.bosch.com#node1frhbstcrx4", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "browse and manipulate files", "context_left": "CyberGate allows an attacker to", "context_right": ", devices, and settings on the victim's machine as well as download and execute additional malware.", "_context_left": "CyberGate allows an attacker to ", "_context_right": ", devices, and settings on the victim's machine as well as download and execute additional malware.", "sentence_left": "### **CyberGate RAT**", "sentence_right": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and remote enabling of webcams.", "label": "Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.", "label_id": 555, "label_title": "Data Manipulation", "label_link": "https://attack.mitre.org/techniques/T1565", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "devices, and settings on the victim's", "context_left": "CyberGate allows an attacker to browse and manipulate files,", "context_right": "machine as well as download and execute additional malware.", "_context_left": "CyberGate allows an attacker to browse and manipulate files, ", "_context_right": " machine as well as download and execute additional malware.", "sentence_left": "### **CyberGate RAT**", "sentence_right": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and remote enabling of webcams.", "label": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)", "label_id": 550, "label_title": "System Information Discovery", "label_link": "https://attack.mitre.org/techniques/T1082", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "download and execute additional malware", "context_left": "CyberGate allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as", "context_right": ".", "_context_left": "CyberGate allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as ", "_context_right": ".", "sentence_left": "### **CyberGate RAT**", "sentence_right": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and remote enabling of webcams.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "browser credential theft", "context_left": "It also has a wide range of information-stealing abilities including", "context_right": ", keylogging, screen capture, and remote enabling of webcams.", "_context_left": "It also has a wide range of information-stealing abilities including ", "_context_right": ", keylogging, screen capture, and remote enabling of webcams.", "sentence_left": "CyberGate allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as download and execute additional malware.", "sentence_right": "The CyberGate RAT communicates on a custom protocol over TCP.", "label": "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.", "label_id": 18, "label_title": "Credentials from Password Stores", "label_link": "https://attack.mitre.org/techniques/T1555", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "keylogging", "context_left": "It also has a wide range of information-stealing abilities including browser credential theft,", "context_right": ", screen capture, and remote enabling of webcams.", "_context_left": "It also has a wide range of information-stealing abilities including browser credential theft, ", "_context_right": ", screen capture, and remote enabling of webcams.", "sentence_left": "CyberGate allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as download and execute additional malware.", "sentence_right": "The CyberGate RAT communicates on a custom protocol over TCP.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "screen capture", "context_left": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging,", "context_right": ", and remote enabling of webcams.", "_context_left": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, ", "_context_right": ", and remote enabling of webcams.", "sentence_left": "CyberGate allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as download and execute additional malware.", "sentence_right": "The CyberGate RAT communicates on a custom protocol over TCP.", "label": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)", "label_id": 26, "label_title": "Screen Capture", "label_link": "https://attack.mitre.org/techniques/T1113", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "remote enabling of webcams", "context_left": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and", "context_right": ".", "_context_left": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and ", "_context_right": ".", "sentence_left": "CyberGate allows an attacker to browse and manipulate files, devices, and settings on the victim's machine as well as download and execute additional malware.", "sentence_right": "The CyberGate RAT communicates on a custom protocol over TCP.", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "CyberGate", "context_left": "The", "context_right": "RAT communicates on a custom protocol over TCP.", "_context_left": "The ", "_context_right": " RAT communicates on a custom protocol over TCP.", "sentence_left": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and remote enabling of webcams.", "sentence_right": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "label": "CyberGateRAT", "label_id": 1358, "label_title": "CyberGateRAT", "label_link": "http://www.bosch.com#node1frhbstcrx4", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicates on a custom protocol over TCP", "context_left": "The CyberGate RAT", "context_right": ".", "_context_left": "The CyberGate RAT ", "_context_right": ".", "sentence_left": "It also has a wide range of information-stealing abilities including browser credential theft, keylogging, screen capture, and remote enabling of webcams.", "sentence_right": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "CyberGate", "context_left": "", "context_right": "collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "_context_left": "", "_context_right": " collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "sentence_left": "The CyberGate RAT communicates on a custom protocol over TCP.", "sentence_right": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "label": "CyberGateRAT", "label_id": 1358, "label_title": "CyberGateRAT", "label_link": "http://www.bosch.com#node1frhbstcrx4", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "CyberGate collects the info as per the command received from the", "context_right": "server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "_context_left": "CyberGate collects the info as per the command received from the ", "_context_right": " server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "sentence_left": "The CyberGate RAT communicates on a custom protocol over TCP.", "sentence_right": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the", "context_right": "server.", "_context_left": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the ", "_context_right": " server.", "sentence_left": "The CyberGate RAT communicates on a custom protocol over TCP.", "sentence_right": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "CyberGate collects the info as per the command received from the C&C server", "context_left": "", "context_right": ", compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "_context_left": "", "_context_right": ", compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "sentence_left": "The CyberGate RAT communicates on a custom protocol over TCP.", "sentence_right": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "compresses data by ZLib", "context_left": "CyberGate collects the info as per the command received from the C&C server,", "context_right": ", encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "_context_left": "CyberGate collects the info as per the command received from the C&C server, ", "_context_right": ", encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "sentence_left": "The CyberGate RAT communicates on a custom protocol over TCP.", "sentence_right": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "label": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.", "label_id": 162, "label_title": "Data Encoding", "label_link": "https://attack.mitre.org/techniques/T1132", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypts it by RC4", "context_left": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib,", "context_right": "with a hardcoded key, and then sends it to the C&C server.", "_context_left": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, ", "_context_right": " with a hardcoded key, and then sends it to the C&C server.", "sentence_left": "The CyberGate RAT communicates on a custom protocol over TCP.", "sentence_right": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the", "context_right": "server.", "_context_left": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the ", "_context_right": " server.", "sentence_left": "The CyberGate RAT communicates on a custom protocol over TCP.", "sentence_right": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*Fig.14: Compressed and Encrypted data sent to", "context_right": ".*", "_context_left": "*Fig.14: Compressed and Encrypted data sent to ", "_context_right": ".*", "sentence_left": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "sentence_right": "Packets begin with the data length followed by a marker then by a new line delimiter followed by encrypted data.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Encrypted data sent to C&C", "context_left": "*Fig.14: Compressed and", "context_right": ".*", "_context_left": "*Fig.14: Compressed and ", "_context_right": ".*", "sentence_left": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "sentence_right": "Packets begin with the data length followed by a marker then by a new line delimiter followed by encrypted data.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "CyberGate", "context_left": "To flag the", "context_right": "RAT traffic, a combination of data length, marker, and delimiter can be considered.", "_context_left": "To flag the ", "_context_right": " RAT traffic, a combination of data length, marker, and delimiter can be considered.", "sentence_left": "Packets begin with the data length followed by a marker then by a new line delimiter followed by encrypted data.", "sentence_right": "### **NanoCore RAT**", "label": "CyberGateRAT", "label_id": 1358, "label_title": "CyberGateRAT", "label_link": "http://www.bosch.com#node1frhbstcrx4", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "RAT traffic", "context_left": "To flag the CyberGate", "context_right": ", a combination of data length, marker, and delimiter can be considered.", "_context_left": "To flag the CyberGate ", "_context_right": ", a combination of data length, marker, and delimiter can be considered.", "sentence_left": "Packets begin with the data length followed by a marker then by a new line delimiter followed by encrypted data.", "sentence_right": "### **NanoCore RAT**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NanoCore", "context_left": "### **", "context_right": "RAT**", "_context_left": "### **", "_context_right": " RAT**", "sentence_left": "To flag the CyberGate RAT traffic, a combination of data length, marker, and delimiter can be considered.", "sentence_right": "Though NanoCore RAT emerged almost a decade ago, it is still one of the most prevalent RAT families, and multiple versions have appeared since then.", "label": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 865, "label_title": "NanoCore", "label_link": "https://attack.mitre.org/software/S0336", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NanoCore", "context_left": "Though", "context_right": "RAT emerged almost a decade ago, it is still one of the most prevalent RAT families, and multiple versions have appeared since then.", "_context_left": "Though ", "_context_right": " RAT emerged almost a decade ago, it is still one of the most prevalent RAT families, and multiple versions have appeared since then.", "sentence_left": "### **NanoCore RAT**", "sentence_right": "NanoCore RAT is modular malware which comes with plugin support to expand its functionality.", "label": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 865, "label_title": "NanoCore", "label_link": "https://attack.mitre.org/software/S0336", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NanoCore", "context_left": "", "context_right": "RAT is modular malware which comes with plugin support to expand its functionality.", "_context_left": "", "_context_right": " RAT is modular malware which comes with plugin support to expand its functionality.", "sentence_left": "Though NanoCore RAT emerged almost a decade ago, it is still one of the most prevalent RAT families, and multiple versions have appeared since then.", "sentence_right": "Basic plugins feature remote surveillance via remote desktop, monitor webcam, capture audio, etc.", "label": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 865, "label_title": "NanoCore", "label_link": "https://attack.mitre.org/software/S0336", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "monitor webcam", "context_left": "Basic plugins feature remote surveillance via remote desktop,", "context_right": ", capture audio, etc.", "_context_left": "Basic plugins feature remote surveillance via remote desktop, ", "_context_right": ", capture audio, etc.", "sentence_left": "NanoCore RAT is modular malware which comes with plugin support to expand its functionality.", "sentence_right": "Additional plugins have been found to be used for cryptocurrency mining, ransomware attacks, credential stealing, and more.", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "capture audio", "context_left": "Basic plugins feature remote surveillance via remote desktop, monitor webcam,", "context_right": ", etc.", "_context_left": "Basic plugins feature remote surveillance via remote desktop, monitor webcam, ", "_context_right": ", etc.", "sentence_left": "NanoCore RAT is modular malware which comes with plugin support to expand its functionality.", "sentence_right": "Additional plugins have been found to be used for cryptocurrency mining, ransomware attacks, credential stealing, and more.", "label": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.", "label_id": 445, "label_title": "Audio Capture", "label_link": "https://attack.mitre.org/techniques/T1123", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "ransomware", "context_left": "Additional plugins have been found to be used for cryptocurrency mining,", "context_right": "attacks, credential stealing, and more.", "_context_left": "Additional plugins have been found to be used for cryptocurrency mining, ", "_context_right": " attacks, credential stealing, and more.", "sentence_left": "Basic plugins feature remote surveillance via remote desktop, monitor webcam, capture audio, etc.", "sentence_right": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "label": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018) In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) In cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1)", "label_id": 467, "label_title": "Data Encrypted for Impact", "label_link": "https://attack.mitre.org/techniques/T1486", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "cryptocurrency mining,", "context_left": "Additional plugins have been found to be used for", "context_right": "ransomware attacks, credential stealing, and more.", "_context_left": "Additional plugins have been found to be used for ", "_context_right": " ransomware attacks, credential stealing, and more.", "sentence_left": "Basic plugins feature remote surveillance via remote desktop, monitor webcam, capture audio, etc.", "sentence_right": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "label": "Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems which may impact system and/or hosted service availability. One common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based(Citation: CloudSploit - Unused AWS Regions) systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining. Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs) Additionally, some cryptocurrency mining malware kills off processes for competing malware to ensure it’s not competing for resources.(Citation: Trend Micro War of Crypto Miners)", "label_id": 193, "label_title": "Resource Hijacking", "label_link": "https://attack.mitre.org/techniques/T1496", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "credential stealing", "context_left": "Additional plugins have been found to be used for cryptocurrency mining, ransomware attacks,", "context_right": ", and more.", "_context_left": "Additional plugins have been found to be used for cryptocurrency mining, ransomware attacks, ", "_context_right": ", and more.", "sentence_left": "Basic plugins feature remote surveillance via remote desktop, monitor webcam, capture audio, etc.", "sentence_right": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "label": "The adversary is trying to steal data. Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.", "label_id": 583, "label_title": "Exfiltration", "label_link": "https://attack.mitre.org/tactics/TA0010", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NanoCore", "context_left": "", "context_right": "RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "_context_left": "", "_context_right": " RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "sentence_left": "Additional plugins have been found to be used for cryptocurrency mining, ransomware attacks, credential stealing, and more.", "sentence_right": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "label": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 865, "label_title": "NanoCore", "label_link": "https://attack.mitre.org/software/S0336", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NanoCore", "context_left": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a", "context_right": "binary with fileless infection techniques.", "_context_left": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a ", "_context_right": " binary with fileless infection techniques.", "sentence_left": "Additional plugins have been found to be used for cryptocurrency mining, ransomware attacks, credential stealing, and more.", "sentence_right": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "label": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 865, "label_title": "NanoCore", "label_link": "https://attack.mitre.org/software/S0336", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "phishing emails containing .doc macros", "context_left": "NanoCore RAT has been found to be delivered via", "context_right": "that load a NanoCore binary with fileless infection techniques.", "_context_left": "NanoCore RAT has been found to be delivered via ", "_context_right": " that load a NanoCore binary with fileless infection techniques.", "sentence_left": "Additional plugins have been found to be used for cryptocurrency mining, ransomware attacks, credential stealing, and more.", "sentence_right": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "NanoCore", "context_left": "", "context_right": "communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "_context_left": "", "_context_right": " communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "sentence_left": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "sentence_right": "The communication packet begins with a 4-byte data length followed by DES-encrypted data of that length.", "label": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 865, "label_title": "NanoCore", "label_link": "https://attack.mitre.org/software/S0336", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its", "context_right": "server.", "_context_left": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its ", "_context_right": " server.", "sentence_left": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "sentence_right": "The communication packet begins with a 4-byte data length followed by DES-encrypted data of that length.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicates on a custom protocol over TCP and uses the DES algorithm", "context_left": "NanoCore", "context_right": "with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "_context_left": "NanoCore ", "_context_right": " with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "sentence_left": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "sentence_right": "The communication packet begins with a 4-byte data length followed by DES-encrypted data of that length.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypt the communication between bot and its C&C server.", "context_left": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to", "context_right": "", "_context_left": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to ", "_context_right": "", "sentence_left": "NanoCore RAT has been found to be delivered via phishing emails containing .doc macros that load a NanoCore binary with fileless infection techniques.", "sentence_right": "The communication packet begins with a 4-byte data length followed by DES-encrypted data of that length.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "The communication packet begins with a 4-byte data length followed by DES-encrypted data", "context_left": "", "context_right": "of that length.", "_context_left": "", "_context_right": " of that length.", "sentence_left": "NanoCore communicates on a custom protocol over TCP and uses the DES algorithm with hardcoded key and IV value to encrypt the communication between bot and its C&C server.", "sentence_right": "![](https://lh3.googleusercontent.com/Kmhmv9brGs4R-gbEkuKh4W4GdCVsEFslRyxOrVNV9Rdgpc3wGLEf6QQhviCLHNkMet7yfp1Ft7YSbRSXC0v7_1LsEabrZQeWq2he2ZMpANYPyeCF7G6hLH7ZJqvVBNBM54GlQRXJ)", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Fig.15: Encrypted data", "context_right": "communication", "_context_left": "Fig.15: Encrypted data ", "_context_right": " communication", "sentence_left": "![](https://lh3.googleusercontent.com/Kmhmv9brGs4R-gbEkuKh4W4GdCVsEFslRyxOrVNV9Rdgpc3wGLEf6QQhviCLHNkMet7yfp1Ft7YSbRSXC0v7_1LsEabrZQeWq2he2ZMpANYPyeCF7G6hLH7ZJqvVBNBM54GlQRXJ)", "sentence_right": "It is not possible to scan for patterns in DES-encrypted data.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Encrypted data C&C communication", "context_left": "Fig.15:", "context_right": "", "_context_left": "Fig.15: ", "_context_right": "", "sentence_left": "![](https://lh3.googleusercontent.com/Kmhmv9brGs4R-gbEkuKh4W4GdCVsEFslRyxOrVNV9Rdgpc3wGLEf6QQhviCLHNkMet7yfp1Ft7YSbRSXC0v7_1LsEabrZQeWq2he2ZMpANYPyeCF7G6hLH7ZJqvVBNBM54GlQRXJ)", "sentence_right": "It is not possible to scan for patterns in DES-encrypted data.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "DES-encrypted data", "context_left": "It is not possible to scan for patterns in", "context_right": ".", "_context_left": "It is not possible to scan for patterns in ", "_context_right": ".", "sentence_left": "Fig.15: Encrypted data C&C communication", "sentence_right": "However, we observed that the publicly available bot builder does not have an option for configuring the DES key.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypted traffic", "context_left": "This results in some", "context_right": "that will be the same across all bots generated using the publicly available bot-builder.", "_context_left": "This results in some ", "_context_right": " that will be the same across all bots generated using the publicly available bot-builder.", "sentence_left": "Thus, all samples generated from this bot-builder will have the same DES key, which is “722018788C294897”.", "sentence_right": "One such command from the server is “is alive” which is 0x600; when encrypted with a key it will produce “c1 c3 d0 32 43 59 a1 78”.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Fig.16: Fix length first response from", "context_right": "server.", "_context_left": "Fig.16: Fix length first response from ", "_context_right": " server.", "sentence_left": "![](https://lh4.googleusercontent.com/4Az6eIbXS8nGOa0nXeVKw8ahmi2f46MSMsDp0IkUkhyeNdlLIAlDODx-tlGFKh6z6WLf8H18JFnWJAj8mOsAYP2jfo1Hg65SSyPvAJ-ANHCOwMS05rZ5D2LLb-qDoDDvJvnn1Z-w)", "sentence_right": "### **Gh0st RAT**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "Fig.16: Fix length first response from", "context_right": "server.", "_context_left": "Fig.16: Fix length first response from ", "_context_right": " server.", "sentence_left": "![](https://lh4.googleusercontent.com/4Az6eIbXS8nGOa0nXeVKw8ahmi2f46MSMsDp0IkUkhyeNdlLIAlDODx-tlGFKh6z6WLf8H18JFnWJAj8mOsAYP2jfo1Hg65SSyPvAJ-ANHCOwMS05rZ5D2LLb-qDoDDvJvnn1Z-w)", "sentence_right": "### **Gh0st RAT**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Gh0st RAT", "context_left": "### **", "context_right": "**", "_context_left": "### **", "_context_right": "**", "sentence_left": "Fig.16: Fix length first response from C&C server.", "sentence_right": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "label": "[gh0st RAT](https://attack.mitre.org/software/S0032) is a remote access tool (RAT). The source code is public and it has been used by multiple groups. (Citation: FireEye Hacking Team)(Citation: Arbor Musical Chairs Feb 2018)(Citation: Nccgroup Gh0st April 2018)", "label_id": 929, "label_title": "gh0st RAT", "label_link": "https://attack.mitre.org/software/S0032", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Gh0st", "context_left": "", "context_right": "is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "_context_left": "", "_context_right": " is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "sentence_left": "### **Gh0st RAT**", "sentence_right": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "label": "[gh0st RAT](https://attack.mitre.org/software/S0032) is a remote access tool (RAT). The source code is public and it has been used by multiple groups. (Citation: FireEye Hacking Team)(Citation: Arbor Musical Chairs Feb 2018)(Citation: Nccgroup Gh0st April 2018)", "label_id": 929, "label_title": "gh0st RAT", "label_link": "https://attack.mitre.org/software/S0032", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "TA459", "context_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[", "context_right": "](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "_context_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[", "_context_right": "](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "sentence_left": "### **Gh0st RAT**", "sentence_right": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "label": "[TA459](https://attack.mitre.org/groups/G0062) is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others. (Citation: Proofpoint TA459 April 2017)", "label_id": 1248, "label_title": "TA459", "label_link": "https://attack.mitre.org/groups/G0062", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "APT18", "context_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[", "context_right": "](https://attack.mitre.org/groups/G0026/).\".", "_context_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[", "_context_right": "](https://attack.mitre.org/groups/G0026/).\".", "sentence_left": "### **Gh0st RAT**", "sentence_right": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "label": "[APT18](https://attack.mitre.org/groups/G0026) is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical. (Citation: Dell Lateral Movement)", "label_id": 1244, "label_title": "APT18", "label_link": "https://attack.mitre.org/groups/G0026", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "stealing credentials", "context_left": "Its features include remote desktop, logging keystrokes,", "context_right": ", capturing microphone and webcam, and many more.", "_context_left": "Its features include remote desktop, logging keystrokes, ", "_context_right": ", capturing microphone and webcam, and many more.", "sentence_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "sentence_right": "The source code of the  Gh0stRAT is publicly available and attackers have customized it to suit their needs.", "label": "The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "label_id": 585, "label_title": "Credential Access", "label_link": "https://attack.mitre.org/tactics/TA0006", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "capturing microphone", "context_left": "Its features include remote desktop, logging keystrokes, stealing credentials,", "context_right": "and webcam, and many more.", "_context_left": "Its features include remote desktop, logging keystrokes, stealing credentials, ", "_context_right": " and webcam, and many more.", "sentence_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "sentence_right": "The source code of the  Gh0stRAT is publicly available and attackers have customized it to suit their needs.", "label": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.", "label_id": 445, "label_title": "Audio Capture", "label_link": "https://attack.mitre.org/techniques/T1123", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "remote desktop", "context_left": "Its features include", "context_right": ", logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "_context_left": "Its features include ", "_context_right": ", logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "sentence_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "sentence_right": "The source code of the  Gh0stRAT is publicly available and attackers have customized it to suit their needs.", "label": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user. In an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) Legitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)", "label_id": 203, "label_title": "Remote Services", "label_link": "https://attack.mitre.org/techniques/T1021", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "logging keystrokes", "context_left": "Its features include remote desktop,", "context_right": ", stealing credentials, capturing microphone and webcam, and many more.", "_context_left": "Its features include remote desktop, ", "_context_right": ", stealing credentials, capturing microphone and webcam, and many more.", "sentence_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "sentence_right": "The source code of the  Gh0stRAT is publicly available and attackers have customized it to suit their needs.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "webcam", "context_left": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and", "context_right": ", and many more.", "_context_left": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and ", "_context_right": ", and many more.", "sentence_left": "Gh0st is an open-source RAT that has been observed being used maliciously by cybercriminals and APT actors such as “[TA459](https://attack.mitre.org/groups/G0062/)” and “[APT18](https://attack.mitre.org/groups/G0026/).\".", "sentence_right": "The source code of the  Gh0stRAT is publicly available and attackers have customized it to suit their needs.", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Gh0st", "context_left": "", "context_right": "communicates on a custom protocol over TCP.", "_context_left": "", "_context_right": " communicates on a custom protocol over TCP.", "sentence_left": "Thus, many variants have been discovered.", "sentence_right": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the C&C server.", "label": "[gh0st RAT](https://attack.mitre.org/software/S0032) is a remote access tool (RAT). The source code is public and it has been used by multiple groups. (Citation: FireEye Hacking Team)(Citation: Arbor Musical Chairs Feb 2018)(Citation: Nccgroup Gh0st April 2018)", "label_id": 929, "label_title": "gh0st RAT", "label_link": "https://attack.mitre.org/software/S0032", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the", "context_right": "server.", "_context_left": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the ", "_context_right": " server.", "sentence_left": "Gh0st communicates on a custom protocol over TCP.", "sentence_right": "Upon execution, it collects system data such as system information, version, processor description, installed antivirus, etc.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "encrypt communication with the C&C server", "context_left": "It uses a sequential byte-to-byte encryption algorithm to", "context_right": ".", "_context_left": "It uses a sequential byte-to-byte encryption algorithm to ", "_context_right": ".", "sentence_left": "Gh0st communicates on a custom protocol over TCP.", "sentence_right": "Upon execution, it collects system data such as system information, version, processor description, installed antivirus, etc.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "collects system data", "context_left": "Upon execution, it", "context_right": "such as system information, version, processor description, installed antivirus, etc.", "_context_left": "Upon execution, it ", "_context_right": " such as system information, version, processor description, installed antivirus, etc.", "sentence_left": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the C&C server.", "sentence_right": "Then, a marker and data length are prepended to this data.", "label": "The adversary is trying to figure out your environment. Discovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective.", "label_id": 582, "label_title": "Discovery", "label_link": "https://attack.mitre.org/tactics/TA0007", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "system information", "context_left": "Upon execution, it collects system data such as", "context_right": ", version, processor description, installed antivirus, etc.", "_context_left": "Upon execution, it collects system data such as ", "_context_right": ", version, processor description, installed antivirus, etc.", "sentence_left": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the C&C server.", "sentence_right": "Then, a marker and data length are prepended to this data.", "label": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)", "label_id": 550, "label_title": "System Information Discovery", "label_link": "https://attack.mitre.org/techniques/T1082", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "version", "context_left": "Upon execution, it collects system data such as system information,", "context_right": ", processor description, installed antivirus, etc.", "_context_left": "Upon execution, it collects system data such as system information, ", "_context_right": ", processor description, installed antivirus, etc.", "sentence_left": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the C&C server.", "sentence_right": "Then, a marker and data length are prepended to this data.", "label": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)", "label_id": 550, "label_title": "System Information Discovery", "label_link": "https://attack.mitre.org/techniques/T1082", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "processor description", "context_left": "Upon execution, it collects system data such as system information, version,", "context_right": ", installed antivirus, etc.", "_context_left": "Upon execution, it collects system data such as system information, version, ", "_context_right": ", installed antivirus, etc.", "sentence_left": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the C&C server.", "sentence_right": "Then, a marker and data length are prepended to this data.", "label": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)", "label_id": 550, "label_title": "System Information Discovery", "label_link": "https://attack.mitre.org/techniques/T1082", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "installed antivirus", "context_left": "Upon execution, it collects system data such as system information, version, processor description,", "context_right": ", etc.", "_context_left": "Upon execution, it collects system data such as system information, version, processor description, ", "_context_right": ", etc.", "sentence_left": "It uses a sequential byte-to-byte encryption algorithm to encrypt communication with the C&C server.", "sentence_right": "Then, a marker and data length are prepended to this data.", "label": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).", "label_id": 121, "label_title": "Software Discovery", "label_link": "https://attack.mitre.org/techniques/T1518", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "njRAT", "context_left": "### **", "context_right": "**", "_context_left": "### **", "_context_right": "**", "sentence_left": "*Fig.17: Collected data before encryption and after encryption.*", "sentence_right": "Discovered almost a decade ago, njRAT, also known as Bladabindi, is the most active and prevalent remote access trojan.", "label": "[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)", "label_id": 773, "label_title": "njRAT", "label_link": "https://attack.mitre.org/software/S0385", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "njRAT", "context_left": "Discovered almost a decade ago,", "context_right": ", also known as Bladabindi, is the most active and prevalent remote access trojan.", "_context_left": "Discovered almost a decade ago, ", "_context_right": ", also known as Bladabindi, is the most active and prevalent remote access trojan.", "sentence_left": "### **njRAT**", "sentence_right": "It allows attackers to do surveillance and control the victim's computer.", "label": "[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)", "label_id": 773, "label_title": "njRAT", "label_link": "https://attack.mitre.org/software/S0385", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Bladabindi", "context_left": "Discovered almost a decade ago, njRAT, also known as", "context_right": ", is the most active and prevalent remote access trojan.", "_context_left": "Discovered almost a decade ago, njRAT, also known as ", "_context_right": ", is the most active and prevalent remote access trojan.", "sentence_left": "### **njRAT**", "sentence_right": "It allows attackers to do surveillance and control the victim's computer.", "label": "[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)", "label_id": 773, "label_title": "njRAT", "label_link": "https://attack.mitre.org/software/S0385", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "surveillance", "context_left": "It allows attackers to do", "context_right": "and control the victim's computer.", "_context_left": "It allows attackers to do ", "_context_right": " and control the victim's computer.", "sentence_left": "Discovered almost a decade ago, njRAT, also known as Bladabindi, is the most active and prevalent remote access trojan.", "sentence_right": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "label": "The adversary is trying to gather data of interest to their goal. Collection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "label_id": 589, "label_title": "Collection", "label_link": "https://attack.mitre.org/tactics/TA0009", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "remote desktop", "context_left": "Its features include", "context_right": ", logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "_context_left": "Its features include ", "_context_right": ", logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "sentence_left": "It allows attackers to do surveillance and control the victim's computer.", "sentence_right": "njRAT is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "label": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user. In an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) Legitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)", "label_id": 203, "label_title": "Remote Services", "label_link": "https://attack.mitre.org/techniques/T1021", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "capturing microphone", "context_left": "Its features include remote desktop, logging keystrokes, stealing credentials,", "context_right": "and webcam, and many more.", "_context_left": "Its features include remote desktop, logging keystrokes, stealing credentials, ", "_context_right": " and webcam, and many more.", "sentence_left": "It allows attackers to do surveillance and control the victim's computer.", "sentence_right": "njRAT is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "label": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.", "label_id": 445, "label_title": "Audio Capture", "label_link": "https://attack.mitre.org/techniques/T1123", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "logging keystrokes", "context_left": "Its features include remote desktop,", "context_right": ", stealing credentials, capturing microphone and webcam, and many more.", "_context_left": "Its features include remote desktop, ", "_context_right": ", stealing credentials, capturing microphone and webcam, and many more.", "sentence_left": "It allows attackers to do surveillance and control the victim's computer.", "sentence_right": "njRAT is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "stealing credentials", "context_left": "Its features include remote desktop, logging keystrokes,", "context_right": ", capturing microphone and webcam, and many more.", "_context_left": "Its features include remote desktop, logging keystrokes, ", "_context_right": ", capturing microphone and webcam, and many more.", "sentence_left": "It allows attackers to do surveillance and control the victim's computer.", "sentence_right": "njRAT is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "label": "The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "label_id": 585, "label_title": "Credential Access", "label_link": "https://attack.mitre.org/tactics/TA0006", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "webcam", "context_left": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and", "context_right": ", and many more.", "_context_left": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and ", "_context_right": ", and many more.", "sentence_left": "It allows attackers to do surveillance and control the victim's computer.", "sentence_right": "njRAT is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "njRAT", "context_left": "", "context_right": "is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "_context_left": "", "_context_right": " is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "sentence_left": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "sentence_right": "It is also found to be delivered by masquerading as a legitimate application installer uploaded to file-sharing services and luring victims via drive-by download campaigns.", "label": "[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)", "label_id": 773, "label_title": "njRAT", "label_link": "https://attack.mitre.org/software/S0385", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "delivered via phishing email campaigns containing malicious Word document attachments.", "context_left": "njRAT is mostly found to be", "context_right": "", "_context_left": "njRAT is mostly found to be ", "_context_right": "", "sentence_left": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "sentence_right": "It is also found to be delivered by masquerading as a legitimate application installer uploaded to file-sharing services and luring victims via drive-by download campaigns.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "masquerading as a legitimate application installer", "context_left": "It is also found to be delivered by", "context_right": "uploaded to file-sharing services and luring victims via drive-by download campaigns.", "_context_left": "It is also found to be delivered by ", "_context_right": " uploaded to file-sharing services and luring victims via drive-by download campaigns.", "sentence_left": "njRAT is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "sentence_right": "Since the leak of source code 2013, njRAT has become widely adopted by cybercriminals and APT actors including [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [APT41](https://attack.mitre.org/groups/G0096/).", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "luring victims via drive-by download campaigns.", "context_left": "It is also found to be delivered by masquerading as a legitimate application installer uploaded to file-sharing services and", "context_right": "", "_context_left": "It is also found to be delivered by masquerading as a legitimate application installer uploaded to file-sharing services and ", "_context_right": "", "sentence_left": "njRAT is mostly found to be delivered via phishing email campaigns containing malicious Word document attachments.", "sentence_right": "Since the leak of source code 2013, njRAT has become widely adopted by cybercriminals and APT actors including [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [APT41](https://attack.mitre.org/groups/G0096/).", "label": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Multiple ways of delivering exploit code to a browser exist, including: * A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting. * Malicious ads are paid for and served through legitimate ad providers. * Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content). Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise) Typical drive-by compromise process: 1. A user visits a website that is used to host the adversary controlled content. 2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. * The user may be required to assist in this process by enabling scripting", "label_id": 15, "label_title": "Drive-by Compromise", "label_link": "https://attack.mitre.org/techniques/T1189", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "njRAT", "context_left": "Since the leak of source code 2013,", "context_right": "has become widely adopted by cybercriminals and APT actors including [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [APT41](https://attack.mitre.org/groups/G0096/).", "_context_left": "Since the leak of source code 2013, ", "_context_right": " has become widely adopted by cybercriminals and APT actors including [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [APT41](https://attack.mitre.org/groups/G0096/).", "sentence_left": "It is also found to be delivered by masquerading as a legitimate application installer uploaded to file-sharing services and luring victims via drive-by download campaigns.", "sentence_right": "Numerous variants have been detected over the years.", "label": "[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)", "label_id": 773, "label_title": "njRAT", "label_link": "https://attack.mitre.org/software/S0385", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Gorgon Group", "context_left": "Since the leak of source code 2013, njRAT has become widely adopted by cybercriminals and APT actors including [", "context_right": "](https://attack.mitre.org/groups/G0078/) and [APT41](https://attack.mitre.org/groups/G0096/).", "_context_left": "Since the leak of source code 2013, njRAT has become widely adopted by cybercriminals and APT actors including [", "_context_right": "](https://attack.mitre.org/groups/G0078/) and [APT41](https://attack.mitre.org/groups/G0096/).", "sentence_left": "It is also found to be delivered by masquerading as a legitimate application installer uploaded to file-sharing services and luring victims via drive-by download campaigns.", "sentence_right": "Numerous variants have been detected over the years.", "label": "[Gorgon Group](https://attack.mitre.org/groups/G0078) is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. (Citation: Unit 42 Gorgon Group Aug 2018)", "label_id": 1168, "label_title": "Gorgon Group", "label_link": "https://attack.mitre.org/groups/G0078", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "APT41", "context_left": "Since the leak of source code 2013, njRAT has become widely adopted by cybercriminals and APT actors including [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [", "context_right": "](https://attack.mitre.org/groups/G0096/).", "_context_left": "Since the leak of source code 2013, njRAT has become widely adopted by cybercriminals and APT actors including [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [", "_context_right": "](https://attack.mitre.org/groups/G0096/).", "sentence_left": "It is also found to be delivered by masquerading as a legitimate application installer uploaded to file-sharing services and luring victims via drive-by download campaigns.", "sentence_right": "Numerous variants have been detected over the years.", "label": "[APT41](https://attack.mitre.org/groups/G0096) is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. Active since at least 2012, [APT41](https://attack.mitre.org/groups/G0096) has been observed targeting healthcare, telecom, technology, and video game industries in 14 countries. [APT41](https://attack.mitre.org/groups/G0096) overlaps at least partially with public reporting on groups including BARIUM and [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: FireEye APT41 Aug 2019)(Citation: Group IB APT 41 June 2021)", "label_id": 1193, "label_title": "APT41", "label_link": "https://attack.mitre.org/groups/G0096", "entity_class": "CE", "entity_type": "GROUP", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicating over standard HTTP protocol", "context_left": "Some variants have been found to be", "context_right": "and others were found to be communicating over custom protocols over TCP.", "_context_left": "Some variants have been found to be ", "_context_right": " and others were found to be communicating over custom protocols over TCP.", "sentence_left": "Numerous variants have been detected over the years.", "sentence_right": "The packet begins with data length in a decimal format null-terminated string followed by command and then delimiter followed by exfiltrated data.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicating over custom protocols over TCP", "context_left": "Some variants have been found to be communicating over standard HTTP protocol and others were found to be", "context_right": ".", "_context_left": "Some variants have been found to be communicating over standard HTTP protocol and others were found to be ", "_context_right": ".", "sentence_left": "Numerous variants have been detected over the years.", "sentence_right": "The packet begins with data length in a decimal format null-terminated string followed by command and then delimiter followed by exfiltrated data.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "followed by exfiltrated data", "context_left": "The packet begins with data length in a decimal format null-terminated string followed by command and then delimiter", "context_right": ".", "_context_left": "The packet begins with data length in a decimal format null-terminated string followed by command and then delimiter ", "_context_right": ".", "sentence_left": "Some variants have been found to be communicating over standard HTTP protocol and others were found to be communicating over custom protocols over TCP.", "sentence_right": "![](https://lh6.googleusercontent.com/Q9ONmRNh0G3xnn2RPK3XQs9oRlGKpb8izMFU7exiDBuTNfSuCJxI6FWKlGsCgEN6s3lmozlZapJ3wjin-jZAYFSeQYvJBxvvBpeHe9flzbDgTdAqUeyWDCheWfPpwtyACyfM-rBR)", "label": "The adversary is trying to steal data. Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.", "label_id": 583, "label_title": "Exfiltration", "label_link": "https://attack.mitre.org/tactics/TA0010", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*Fig.18: Fix length first response from", "context_right": "server.*", "_context_left": "*Fig.18: Fix length first response from ", "_context_right": " server.*", "sentence_left": "![](https://lh6.googleusercontent.com/Q9ONmRNh0G3xnn2RPK3XQs9oRlGKpb8izMFU7exiDBuTNfSuCJxI6FWKlGsCgEN6s3lmozlZapJ3wjin-jZAYFSeQYvJBxvvBpeHe9flzbDgTdAqUeyWDCheWfPpwtyACyfM-rBR)", "sentence_right": "### **Coverage:**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "first response from C&C server", "context_left": "*Fig.18: Fix length", "context_right": ".*", "_context_left": "*Fig.18: Fix length ", "_context_right": ".*", "sentence_left": "![](https://lh6.googleusercontent.com/Q9ONmRNh0G3xnn2RPK3XQs9oRlGKpb8izMFU7exiDBuTNfSuCJxI6FWKlGsCgEN6s3lmozlZapJ3wjin-jZAYFSeQYvJBxvvBpeHe9flzbDgTdAqUeyWDCheWfPpwtyACyfM-rBR)", "sentence_right": "### **Coverage:**", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communicating on custom and encrypted protocols over TCP", "context_left": "All of the above-discussed RATs are", "context_right": ".", "_context_left": "All of the above-discussed RATs are ", "_context_right": ".", "sentence_left": "### **Conclusion**", "sentence_right": "When communication is encrypted, it is more difficult to scan for their signature patterns in network traffic.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "communication is encrypted", "context_left": "When", "context_right": ", it is more difficult to scan for their signature patterns in network traffic.", "_context_left": "When ", "_context_right": ", it is more difficult to scan for their signature patterns in network traffic.", "sentence_left": "All of the above-discussed RATs are communicating on custom and encrypted protocols over TCP.", "sentence_right": "However, we have discussed alternative ways to flag RAT traffic based on the heuristics of encrypted data.", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "RAT traffic based on the heuristics of encrypted data.", "context_left": "However, we have discussed alternative ways to flag", "context_right": "", "_context_left": "However, we have discussed alternative ways to flag ", "_context_right": "", "sentence_left": "When communication is encrypted, it is more difficult to scan for their signature patterns in network traffic.", "sentence_right": "Four properties that are common to most RAT traffic on non-HTTP/S are:", "label": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "label_id": 376, "label_title": "Encrypted Channel", "label_link": "https://attack.mitre.org/techniques/T1573", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "RAT traffic", "context_left": "Four properties that are common to most", "context_right": "on non-HTTP/S are:", "_context_left": "Four properties that are common to most ", "_context_right": " on non-HTTP/S are:", "sentence_left": "However, we have discussed alternative ways to flag RAT traffic based on the heuristics of encrypted data.", "sentence_right": "1.Packets start with a length of encrypted data.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "3.The", "context_right": "server responds in the same packet format as the client.", "_context_left": "3.The ", "_context_right": " server responds in the same packet format as the client.", "sentence_left": "2.Entropy of data followed after data length is high.", "sentence_right": "4.Often, server responses have lengths in specific ranges as they send only commands.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "3.The", "context_right": "server responds in the same packet format as the client.", "_context_left": "3.The ", "_context_right": " server responds in the same packet format as the client.", "sentence_left": "2.Entropy of data followed after data length is high.", "sentence_right": "4.Often, server responses have lengths in specific ranges as they send only commands.", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\", "context_right": "any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.CrimsonRat - CNC command\"; flow:established,to\\_client; content:\"|00 00 00 00|\"; offset: 1; depth: 4; pcre:\"/\\x00\\x00\\x00\\x00(thumb|filsz|rupth|dowf|endpo|scrsz|cscreen|dirs|stops|scren|cnls|udlt|delt|afile|listf|file|info|runf|fles|dowr|info|fldr)+=/\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\", "_context_right": " any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.CrimsonRat - CNC command\"; flow:established,to\\_client; content:\"|00 00 00 00|\"; offset: 1; depth: 4; pcre:\"/\\x00\\x00\\x00\\x00(thumb|filsz|rupth|dowf|endpo|scrsz|cscreen|dirs|stops|scren|cnls|udlt|delt|afile|listf|file|info|runf|fles|dowr|info|fldr)+=/\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)* ", "sentence_left": "-----------", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.CrimsonRat - CNC command\"; flow:established,to\\_client; content:\"|00 00 00 00|\"; offset: 1; depth: 4; pcre:\"/\\x00\\x00\\x00\\x00(thumb|filsz|rupth|dowf|endpo|scrsz|cscreen|dirs|stops|scren|cnls|udlt|delt|afile|listf|file|info|runf|fles|dowr|info|fldr)+=/\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.CrimsonRat - CNC command\"; flow:established,to\\_client; content:\"|00 00 00 00|\"; offset: 1; depth: 4; pcre:\"/\\x00\\x00\\x00\\x00(thumb|filsz|rupth|dowf|endpo|scrsz|cscreen|dirs|stops|scren|cnls|udlt|delt|afile|listf|file|info|runf|fles|dowr|info|fldr)+=/\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)* ", "sentence_left": "-----------", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.CrimsonRat - CNC command\"; flow:established,to\\_client; content:\"|00 00 00 00|\"; offset: 1; depth: 4; pcre:\"/\\x00\\x00\\x00\\x00(thumb|filsz|rupth|dowf|endpo|scrsz|cscreen|dirs|stops|scren|cnls|udlt|delt|afile|listf|file|info|runf|fles|dowr|info|fldr)+=/\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.CrimsonRat - CNC command\"; flow:established,to\\_client; content:\"|00 00 00 00|\"; offset: 1; depth: 4; pcre:\"/\\x00\\x00\\x00\\x00(thumb|filsz|rupth|dowf|endpo|scrsz|cscreen|dirs|stops|scren|cnls|udlt|delt|afile|listf|file|info|runf|fles|dowr|info|fldr)+=/\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in request\"; flow:established,to\\_server; dsize:69; content:\"|41 00 00 00 99|\"; offset:0; depth:5; flowbits:set,ZS.NetwireRAT.Client; flowbits:noalert; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "AsyncRAT", "context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"", "context_right": "\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"", "_context_right": "\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "AsyncRAT", "label_id": 1338, "label_title": "AsyncRAT", "label_link": "http://www.bosch.com#node1frhbstcrx3", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\", "context_right": "any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\", "_context_right": " any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NetWiredRC - Check-in response\"; flow:established,to\\_server; dsize:5; content:\"|3f 00 00 00 9b|\"; flowbits:isset,ZS.NetwireRAT.Client; metadata: classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\", "context_right": "any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\", "_context_right": " any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.AgentTesla CNC via FTP/SMTP\"; flow:established,to\\_server; content:\"|3C|html|3E|Time|3A|\"; content:\"|3C|br|3E|User Name|3A|\"; content:\"|3C|br|3E|Computer Name|3A|\"; distance: 0; content: \"|3C|br|3E|OSFullName|3A|\"; distance: 0; content:\"CPU|3A|\"; distance: 0; content:\"|3C|br|3E|RAM|3A|\"; distance: 0; content: \"URL|3A|\"; distance: 0; content: \"Application|3A|\"; distance: 0; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.AsyncRAT - Malicious SSL Cert\"; flow:established,to\\_client; content:\"|16 03 01|\"; offset:0; depth:3; content:\"AsyncRAT\"; distance:0; fast\\_pattern; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.AgentTesla CNC via FTP/SMTP\"; flow:established,to\\_server; content:\"|3C|html|3E|Time|3A|\"; content:\"|3C|br|3E|User Name|3A|\"; content:\"|3C|br|3E|Computer Name|3A|\"; distance: 0; content: \"|3C|br|3E|OSFullName|3A|\"; distance: 0; content:\"CPU|3A|\"; distance: 0; content:\"|3C|br|3E|RAM|3A|\"; distance: 0; content: \"URL|3A|\"; distance: 0; content: \"Application|3A|\"; distance: 0; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.AgentTesla CNC via FTP/SMTP\"; flow:established,to\\_server; content:\"|3C|html|3E|Time|3A|\"; content:\"|3C|br|3E|User Name|3A|\"; content:\"|3C|br|3E|Computer Name|3A|\"; distance: 0; content: \"|3C|br|3E|OSFullName|3A|\"; distance: 0; content:\"CPU|3A|\"; distance: 0; content:\"|3C|br|3E|RAM|3A|\"; distance: 0; content: \"URL|3A|\"; distance: 0; content: \"Application|3A|\"; distance: 0; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.AgentTesla CNC via FTP/SMTP\"; flow:established,to\\_server; content:\"|3C|html|3E|Time|3A|\"; content:\"|3C|br|3E|User Name|3A|\"; content:\"|3C|br|3E|Computer Name|3A|\"; distance: 0; content: \"|3C|br|3E|OSFullName|3A|\"; distance: 0; content:\"CPU|3A|\"; distance: 0; content:\"|3C|br|3E|RAM|3A|\"; distance: 0; content: \"URL|3A|\"; distance: 0; content: \"Application|3A|\"; distance: 0; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> any any (msg:\"Zscaler Win32.Backdoor.CyberGate - Data Exfiltration\"; flow:established,to\\_server; dsize:40<>300; pcre:\"/\\d{2,3}[#$]{4,6}\\x0d\\x0a/\"; content:\"|23 23 24 23 23 0d 0a|\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.AgentTesla CNC via FTP/SMTP\"; flow:established,to\\_server; content:\"|3C|html|3E|Time|3A|\"; content:\"|3C|br|3E|User Name|3A|\"; content:\"|3C|br|3E|Computer Name|3A|\"; distance: 0; content: \"|3C|br|3E|OSFullName|3A|\"; distance: 0; content:\"CPU|3A|\"; distance: 0; content:\"|3C|br|3E|RAM|3A|\"; distance: 0; content: \"URL|3A|\"; distance: 0; content: \"Application|3A|\"; distance: 0; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.AgentTesla CNC via FTP/SMTP\"; flow:established,to\\_server; content:\"|3C|html|3E|Time|3A|\"; content:\"|3C|br|3E|User Name|3A|\"; content:\"|3C|br|3E|Computer Name|3A|\"; distance: 0; content: \"|3C|br|3E|OSFullName|3A|\"; distance: 0; content:\"CPU|3A|\"; distance: 0; content:\"|3C|br|3E|RAM|3A|\"; distance: 0; content: \"URL|3A|\"; distance: 0; content: \"Application|3A|\"; distance: 0; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.QuasarRAT - CNC response header\"; flow:established,to\\_client; dsize:68; content:\"|40 00 00 00|\"; offset: 0; depth: 4; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> any any (msg:\"Zscaler Win32.Backdoor.CyberGate - Data Exfiltration\"; flow:established,to\\_server; dsize:40<>300; pcre:\"/\\d{2,3}[#$]{4,6}\\x0d\\x0a/\"; content:\"|23 23 24 23 23 0d 0a|\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> any any (msg:\"Zscaler Win32.Backdoor.CyberGate - Data Exfiltration\"; flow:established,to\\_server; dsize:40<>300; pcre:\"/\\d{2,3}[#$]{4,6}\\x0d\\x0a/\"; content:\"|23 23 24 23 23 0d 0a|\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> any any (msg:\"Zscaler Win32.Backdoor.CyberGate - Data Exfiltration\"; flow:established,to\\_server; dsize:40<>300; pcre:\"/\\d{2,3}[#$]{4,6}\\x0d\\x0a/\"; content:\"|23 23 24 23 23 0d 0a|\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.AgentTesla CNC via FTP/SMTP\"; flow:established,to\\_server; content:\"|3C|html|3E|Time|3A|\"; content:\"|3C|br|3E|User Name|3A|\"; content:\"|3C|br|3E|Computer Name|3A|\"; distance: 0; content: \"|3C|br|3E|OSFullName|3A|\"; distance: 0; content:\"CPU|3A|\"; distance: 0; content:\"|3C|br|3E|RAM|3A|\"; distance: 0; content: \"URL|3A|\"; distance: 0; content: \"Application|3A|\"; distance: 0; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> any any (msg:\"Zscaler Win32.Backdoor.CyberGate - Data Exfiltration\"; flow:established,to\\_server; dsize:40<>300; pcre:\"/\\d{2,3}[#$]{4,6}\\x0d\\x0a/\"; content:\"|23 23 24 23 23 0d 0a|\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> any any (msg:\"Zscaler Win32.Backdoor.CyberGate - Data Exfiltration\"; flow:established,to\\_server; dsize:40<>300; pcre:\"/\\d{2,3}[#$]{4,6}\\x0d\\x0a/\"; content:\"|23 23 24 23 23 0d 0a|\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic", "context_right": "command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic ", "_context_right": " command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic", "context_right": "command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic ", "_context_right": " command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore Pulse check\"; flow:established,to\\_server; dsize:12; content:\"|08 00 00 00|\"; offset: 0; depth: 4; content:\"*/*c1 c3 d0 32  43 59 a1 78|\"; distance:0; within:8; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic", "context_right": "command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic ", "_context_right": " command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_right": "*alert tcp any any -> any any (msg:\"Zscaler Win32.Backdoor.Gh0stRAT - Possible Data Exfil activity\"; flow:to\\_server,established; byte\\_extract:1,10,varbyte; byte\\_test:1,!=,varbyte,11; byte\\_test:1,=,varbyte,12; byte\\_test:1,=,varbyte,13; byte\\_test:1,!=,varbyte,15; byte\\_extract:4,16,vardword; byte\\_test:4,=,vardword,20; byte\\_test:4,=,vardword,24; byte\\_test:4,=,vardword,28; byte\\_test:4,!=,vardword,0; sid:8000031; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\", "context_right": "any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\", "_context_right": " any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_right": "*alert tcp any any -> any any (msg:\"Zscaler Win32.Backdoor.Gh0stRAT - Possible Data Exfil activity\"; flow:to\\_server,established; byte\\_extract:1,10,varbyte; byte\\_test:1,!=,varbyte,11; byte\\_test:1,=,varbyte,12; byte\\_test:1,=,varbyte,13; byte\\_test:1,!=,varbyte,15; byte\\_extract:4,16,vardword; byte\\_test:4,=,vardword,20; byte\\_test:4,=,vardword,24; byte\\_test:4,=,vardword,28; byte\\_test:4,!=,vardword,0; sid:8000031; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_right": "*alert tcp any any -> any any (msg:\"Zscaler Win32.Backdoor.Gh0stRAT - Possible Data Exfil activity\"; flow:to\\_server,established; byte\\_extract:1,10,varbyte; byte\\_test:1,!=,varbyte,11; byte\\_test:1,=,varbyte,12; byte\\_test:1,=,varbyte,13; byte\\_test:1,!=,varbyte,15; byte\\_extract:4,16,vardword; byte\\_test:4,=,vardword,20; byte\\_test:4,=,vardword,24; byte\\_test:4,=,vardword,28; byte\\_test:4,!=,vardword,0; sid:8000031; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "C&C", "context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic", "context_right": "command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "_context_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic ", "_context_right": " command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (request)\"; flow:established,to\\_server; flowbits:isset,ZS.NanocoreGen; dsize:12; content:\"|08 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative;  reference:url,https://zscaler.com;)*", "sentence_right": "*alert tcp any any -> any any (msg:\"Zscaler Win32.Backdoor.Gh0stRAT - Possible Data Exfil activity\"; flow:to\\_server,established; byte\\_extract:1,10,varbyte; byte\\_test:1,!=,varbyte,11; byte\\_test:1,=,varbyte,12; byte\\_test:1,=,varbyte,13; byte\\_test:1,!=,varbyte,15; byte\\_extract:4,16,vardword; byte\\_test:4,=,vardword,20; byte\\_test:4,=,vardword,24; byte\\_test:4,=,vardword,28; byte\\_test:4,!=,vardword,0; sid:8000031; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|inf\"; offset:3; depth:4; pcre:\"/\\d{1,3}\\x00\\w{1,3}/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:isset,ZS.njrat; flowbits:unset,ZS.njrat; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|inf\"; offset:3; depth:4; pcre:\"/\\d{1,3}\\x00\\w{1,3}/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:isset,ZS.njrat; flowbits:unset,ZS.njrat; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp any any -> any any (msg:\"Zscaler Win32.Backdoor.Gh0stRAT - Possible Data Exfil activity\"; flow:to\\_server,established; byte\\_extract:1,10,varbyte; byte\\_test:1,!=,varbyte,11; byte\\_test:1,=,varbyte,12; byte\\_test:1,=,varbyte,13; byte\\_test:1,!=,varbyte,15; byte\\_extract:4,16,vardword; byte\\_test:4,=,vardword,20; byte\\_test:4,=,vardword,24; byte\\_test:4,=,vardword,28; byte\\_test:4,!=,vardword,0; sid:8000031; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|ll\"; offset:3; depth:3; pcre:\"/^\\d{1,3}\\x00/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:set,ZS.njrat; flowbits:noalert; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|inf\"; offset:3; depth:4; pcre:\"/\\d{1,3}\\x00\\w{1,3}/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:isset,ZS.njrat; flowbits:unset,ZS.njrat; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|inf\"; offset:3; depth:4; pcre:\"/\\d{1,3}\\x00\\w{1,3}/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:isset,ZS.njrat; flowbits:unset,ZS.njrat; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp any any -> any any (msg:\"Zscaler Win32.Backdoor.Gh0stRAT - Possible Data Exfil activity\"; flow:to\\_server,established; byte\\_extract:1,10,varbyte; byte\\_test:1,!=,varbyte,11; byte\\_test:1,=,varbyte,12; byte\\_test:1,=,varbyte,13; byte\\_test:1,!=,varbyte,15; byte\\_extract:4,16,vardword; byte\\_test:4,=,vardword,20; byte\\_test:4,=,vardword,24; byte\\_test:4,=,vardword,28; byte\\_test:4,!=,vardword,0; sid:8000031; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|ll\"; offset:3; depth:3; pcre:\"/^\\d{1,3}\\x00/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:set,ZS.njrat; flowbits:noalert; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\", "context_right": "any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|ll\"; offset:3; depth:3; pcre:\"/^\\d{1,3}\\x00/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:set,ZS.njrat; flowbits:noalert; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\", "_context_right": " any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|ll\"; offset:3; depth:3; pcre:\"/^\\d{1,3}\\x00/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:set,ZS.njrat; flowbits:noalert; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|inf\"; offset:3; depth:4; pcre:\"/\\d{1,3}\\x00\\w{1,3}/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:isset,ZS.njrat; flowbits:unset,ZS.njrat; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "_NET", "context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "context_right": "any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|ll\"; offset:3; depth:3; pcre:\"/^\\d{1,3}\\x00/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:set,ZS.njrat; flowbits:noalert; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "_context_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\", "_context_right": " any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|ll\"; offset:3; depth:3; pcre:\"/^\\d{1,3}\\x00/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:set,ZS.njrat; flowbits:noalert; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_left": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|inf\"; offset:3; depth:4; pcre:\"/\\d{1,3}\\x00\\w{1,3}/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:isset,ZS.njrat; flowbits:unset,ZS.njrat; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "sentence_right": "", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "However, we observed that the publicly available bot builder does not have an option for configuring the DES key.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "It is not possible to scan for patterns in DES-encrypted data.", "sentence_right": "Thus, all samples generated from this bot-builder will have the same DES key, which is “722018788C294897”.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "*Fig.17: Collected data before encryption and after encryption.*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "![](https://lh4.googleusercontent.com/4LbGU33qsv7CmoSQurQlSHwWvXM7Ma3GRLeKAxXQbftHAIkXMF6EW5ucgwBdclY84Zq5-ZY0K1vwARPoCUS7fUUK4C1NTdnVBcF_2t6XwK56x9c4TwsdE5tQoKeteaX_lUESl0NS)", "sentence_right": "### **njRAT**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "### **Conclusion**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.NjRat](https://threatlibrary.zscaler.com/threats/5056fbf2-0119-4348-9b26-59feccdd5bb7/)", "sentence_right": "All of the above-discussed RATs are communicating on custom and encrypted protocols over TCP.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "This packet is used to initiate the server/client authentication process.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Specifically, the first 4 bytes can identify the first packet sent from the server to the client following the TCP handshake.", "sentence_right": "The first 4 bytes of the TCP payload contain \"40 00 00 00\" which is the size of the data that follows in little endian.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "The bot responds back to this with 0x12 bytes data, which will always start with the 4-byte stream “08 00 00 00”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This response contains a GUID of plugins that the bot will load.", "sentence_right": "These characteristics can be leveraged for detection.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh3.googleusercontent.com/KYoapIP64WbQl-mIxxYgRLvQSfgBJKwb9u8jg2zaJVJgaaSrRvsgJO3Hau49yWAr9H4VeOfc1l5f_viEFHZkKKUwEEyQc1WufV2JPf5vDBjadrOkgLSp1Wcj9hEJrTJ53a7sHfjA)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The mail subject is generated in format “PW\\_<UserName>/<ComputerName>”.", "sentence_right": "*Fig.13: Exfiltration over SMTP*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh5.googleusercontent.com/Y2YwbsGuKtRdA_tsmpFz6qgeMTmxXwe-zF7sgYpReVYihtEZu9w08FFi-yJ5qzMCnwYd4r6fzrGcDDUroOywVfewZonLRNFxZwPQphavAwcr0ADmVNNUqlNrHIi-rJPmfDqtapIU)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The file name is generated in format “PW\\_<UserName>\\_<OS>\\_<Timestamp>.HTML”", "sentence_right": "*Fig.11: Data to be sent via FTP.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "However, there is scope for heuristics-based detection.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "It is not possible to match signatures in encrypted binary data.", "sentence_right": "Upon execution, Remcos sends system information to its C&C server, and in return the server replies with commands to execute.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.Gh0stRAT](https://threatlibrary.zscaler.com/threats/124cb8b3-bca5-420f-a4c5-71f4450d3ed3)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.Nanocore](https://threatlibrary.zscaler.com/threats/51db83e0-80cf-4760-81a9-db4af507a5d8)", "sentence_right": "[Win32.Backdoor.NjRat](https://threatlibrary.zscaler.com/threats/5056fbf2-0119-4348-9b26-59feccdd5bb7/)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh5.googleusercontent.com/w7yMadYDfy63uAqE1g1xU9jgXCwXmDTdXnlH9nKlKi6vHxwnMVdpW2yTY_Yc0RENUtNHigOp-bqQ9xcdhsLtcU3gza8f2Gl48_C--ecJSnlc4CIvPjpB1geOiwUYVHBwb8S1Vjmj)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "CyberGate collects the info as per the command received from the C&C server, compresses data by ZLib, encrypts it by RC4 with a hardcoded key, and then sends it to the C&C server.", "sentence_right": "*Fig.14: Compressed and Encrypted data sent to C&C.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh4.googleusercontent.com/4Az6eIbXS8nGOa0nXeVKw8ahmi2f46MSMsDp0IkUkhyeNdlLIAlDODx-tlGFKh6z6WLf8H18JFnWJAj8mOsAYP2jfo1Hg65SSyPvAJ-ANHCOwMS05rZ5D2LLb-qDoDDvJvnn1Z-w)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "These characteristics can be leveraged for detection.", "sentence_right": "Fig.16: Fix length first response from C&C server.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Each packet begins with a length of data followed by one byte for the command and then followed by data.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "NetWire communicates with custom protocols over TCP and communication is encrypted with AES encryption.", "sentence_right": "The initial packet sends a 32-byte seed value along with 16-byte IV value and hardcoded password specified in the binary to generate the AES key.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.NetwiredRC](https://threatlibrary.zscaler.com/threats/8e9bd46b-2820-4f49-8b11-8712761e366d)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.RemcosRAT](https://threatlibrary.zscaler.com/threats/4461cfa5-4155-499b-a1b5-e866cd05df97)", "sentence_right": "[Win32.Backdoor.CrimsonRAT](https://threatlibrary.zscaler.com/threats/1d5c6832-d582-41cd-a050-e51251663138)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh5.googleusercontent.com/aYzD50PDgdfzxXZyjeGnZ1rFbL-b7dYT3UQCAZqIIgf8MAI3Adj4MziWl0n-AuYx6tISUTHpur-YwI9J7Z2s7gKMRX_eLqMUMoDEdQ1NcJYgiHUZNj6taGB_E-S9p0XZ7MhBSPR1)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Below are statistical representations of traffic that Zscaler blocked for non-HTTP/S C&C communication, as well as the most active RAT families that we observed over a three-month period.", "sentence_right": "*Fig.1: Hits of top threats communicating over non-HTTP/S in the last quarter.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "The first response from the server will be always 0x24 bytes in length, and the first 4 bytes will always be “20 00 00 00”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "For a more generic detection, we need to check for heuristics of data length value against TCP packet size and entropy of data.", "sentence_right": "This response contains a GUID of plugins that the bot will load.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "1.Packets start with a length of encrypted data.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Four properties that are common to most RAT traffic on non-HTTP/S are:", "sentence_right": "Adding 4 to the little endian value of the first 4 should give the total length of TCP data.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh5.googleusercontent.com/vd-LhD9lYGPqT3Yl_ABwdyq2A0yN5YasLtqsvF_hSua6QkxIMi9MZ0zgtZfpRDpSgUfZmxbCKOcB4G9mUh7VY5uSDjYzUwHl8wjZzk102ApFqJeabOokBoYv0Z3nSZ2b2pOTZZ3d)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*Fig.3: Encrypted configuration in resource.*", "sentence_right": "*Fig.4: Decrypted configuration*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.AsyncRAT](https://threatlibrary.zscaler.com/threats/2a3c4fd0-57d3-4816-8ffe-400f95ba6f37)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.CrimsonRAT](https://threatlibrary.zscaler.com/threats/1d5c6832-d582-41cd-a050-e51251663138)", "sentence_right": "[Win32.Backdoor.QuasarRAT](https://threatlibrary.zscaler.com/threats/3e8d15d9-287b-4ed2-ab16-fa58f7446a59)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "May 05, 2021", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Catching RATs Over Custom Protocols", "sentence_right": "Adversaries generally use Standard Application Layer Protocols for communication between malware and command and control (C&C) servers.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Also, it was found to be delivered via [exploit kits](/blogs/security-research/sundown-chronicles-observations-exploit-kits-evolution).", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Typically, the NetWire RAT is downloaded as a second-stage payload to systems that have been compromised using other malware such as GuLoader.", "sentence_right": "NetWire communicates with custom protocols over TCP and communication is encrypted with AES encryption.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "These characteristics can be leveraged for detection.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The bot responds back to this with 0x12 bytes data, which will always start with the 4-byte stream “08 00 00 00”.", "sentence_right": "![](https://lh4.googleusercontent.com/4Az6eIbXS8nGOa0nXeVKw8ahmi2f46MSMsDp0IkUkhyeNdlLIAlDODx-tlGFKh6z6WLf8H18JFnWJAj8mOsAYP2jfo1Hg65SSyPvAJ-ANHCOwMS05rZ5D2LLb-qDoDDvJvnn1Z-w)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "*![](https://lh5.googleusercontent.com/PriwwYlpzpsb-E89vgyjWguBklqQvrw8j4DN9ttZ_LaIShbiWvvvyVjUw-MgUxV6X-JU_DTOWtl5VGU06GqCY83AsXDuBJee6_cx0egzqKtIVxD7TnkT1-z_frrKimsVbb7Z9ApG)*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*Fig.1: Hits of top threats communicating over non-HTTP/S in the last quarter.*", "sentence_right": "*Fig.2: Hits of top non-HTTP/S based RAT families in last quarter.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "However, such custom certificates can be filtered out and communication can be blocked by other preventing controls.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "As the custom certificate is carried in the binary itself and matched against the C&C certificate, it is not possible to strip the TLS layer at the proxy/gateway level.", "sentence_right": "![](https://lh6.googleusercontent.com/BNgh3pB-hE3i75fI2LSr9VK7ePZZBZCsiph1M5US6SA0Bbpxa16uuoyrATQTg3bxHjUbU7Ioe65psbtZBq0_Wt9JzweADaAdhdmck0S9UAt6ildONREL6uTwxoyARwUHLznCo48P)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "-----------", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Snort Rules", "sentence_right": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.CrimsonRat - CNC command\"; flow:established,to\\_client; content:\"|00 00 00 00|\"; offset: 1; depth: 4; pcre:\"/\\x00\\x00\\x00\\x00(thumb|filsz|rupth|dowf|endpo|scrsz|cscreen|dirs|stops|scren|cnls|udlt|delt|afile|listf|file|info|runf|fles|dowr|info|fldr)+=/\"; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Thus, many variants have been discovered.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The source code of the  Gh0stRAT is publicly available and attackers have customized it to suit their needs.", "sentence_right": "Gh0st communicates on a custom protocol over TCP.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "As an example, it can be seen in the above image, a binary stream of bytes “08 b4 de f6 84 27 70 9a 57 17 5e” has taken place of the header “[DataStart]”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*Fig.6: Data sent to C&C server as RC4 encrypted.*", "sentence_right": "The repeated stream pattern of 11 bytes in requests and responses—plus a combination of other heuristics such as entropy and data length limits—can be considered for flagging RC4 encrypted Remcos traffic.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "### **Coverage:**", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*Fig.18: Fix length first response from C&C server.*", "sentence_right": "Zscaler’s multilayered cloud security platform detects indicators at various levels.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.Cybergate](https://threatlibrary.zscaler.com/threats/6430f34a-aece-42ef-9435-c1bcc45a7f4b)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.AgentTesla](https://threatlibrary.zscaler.com/threats/35372622-693c-4166-8b6e-ccbf7f669cb5)", "sentence_right": "[Win32.Backdoor.Nanocore](https://threatlibrary.zscaler.com/threats/51db83e0-80cf-4760-81a9-db4af507a5d8)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Finally, collected data is encrypted with single-byte operation of XOR and SUB on each byte.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Then, a marker and data length are prepended to this data.", "sentence_right": "![](https://lh4.googleusercontent.com/4LbGU33qsv7CmoSQurQlSHwWvXM7Ma3GRLeKAxXQbftHAIkXMF6EW5ucgwBdclY84Zq5-ZY0K1vwARPoCUS7fUUK4C1NTdnVBcF_2t6XwK56x9c4TwsdE5tQoKeteaX_lUESl0NS)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "However, there are other customized bot-builders available underground that allow the user to configure the key.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "One such command from the server is “is alive” which is 0x600; when encrypted with a key it will produce “c1 c3 d0 32 43 59 a1 78”.", "sentence_right": "For a more generic detection, we need to check for heuristics of data length value against TCP packet size and entropy of data.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh3.googleusercontent.com/c7KKJMQxQbwMWpqvZ_pJkOGJ6PmWkAp4tsVV3p2Bz3q0URqeSGgeSN9pxCx23208FoGOV4FeHCC6KDY3foKhvH9u1izFykL4QfoUi2Hxgs4rA_Wgtnzh6arhGnzXhGB3hG65-euh)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Crimson is typically delivered to the victim via a phishing email containing a malicious .doc file or link to a malicious executable.", "sentence_right": "*Fig.7: Data sent to C&C server*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "The file name is generated in format “PW\\_<UserName>\\_<OS>\\_<Timestamp>.HTML”", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "For communication over FTP, the HTML page is sent as a file to an FTP C&C server.", "sentence_right": "![](https://lh5.googleusercontent.com/Y2YwbsGuKtRdA_tsmpFz6qgeMTmxXwe-zF7sgYpReVYihtEZu9w08FFi-yJ5qzMCnwYd4r6fzrGcDDUroOywVfewZonLRNFxZwPQphavAwcr0ADmVNNUqlNrHIi-rJPmfDqtapIU)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "The mail subject is generated in format “PW\\_<UserName>/<ComputerName>”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "For communication over SMTP, the HTML page is sent as a mail body to the C&C server.", "sentence_right": "![](https://lh3.googleusercontent.com/KYoapIP64WbQl-mIxxYgRLvQSfgBJKwb9u8jg2zaJVJgaaSrRvsgJO3Hau49yWAr9H4VeOfc1l5f_viEFHZkKKUwEEyQc1WufV2JPf5vDBjadrOkgLSp1Wcj9hEJrTJ53a7sHfjA)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Numerous variants have been detected over the years.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Since the leak of source code 2013, njRAT has become widely adopted by cybercriminals and APT actors including [Gorgon Group](https://attack.mitre.org/groups/G0078/) and [APT41](https://attack.mitre.org/groups/G0096/).", "sentence_right": "Some variants have been found to be communicating over standard HTTP protocol and others were found to be communicating over custom protocols over TCP.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "4.Often, server responses have lengths in specific ranges as they send only commands.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "3.The C&C server responds in the same packet format as the client.", "sentence_right": "Snort Rules", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Thus, all samples generated from this bot-builder will have the same DES key, which is “722018788C294897”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "However, we observed that the publicly available bot builder does not have an option for configuring the DES key.", "sentence_right": "This results in some encrypted traffic that will be the same across all bots generated using the publicly available bot-builder.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Snort Rules", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "4.Often, server responses have lengths in specific ranges as they send only commands.", "sentence_right": "-----------", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh3.googleusercontent.com/McWJS_eN_K5qholLoB9qdc8ov8DeRV38MG1uGZ-_1F4rRmCrKiFUKo1rrV5YHo4yI1xUPFtw8z-h2sc7F-8C9_bIH8vW1FWxdKL2FVKRXBox2vL71qJsAnhSI4GDRslj74o8f3gI)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "However, the distinctive characteristics of encrypted data packets can be leveraged to flag Quasar's AES encrypted traffic.", "sentence_right": "*Fig.10: Data sent to C&C server as AES encrypted.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh6.googleusercontent.com/BNgh3pB-hE3i75fI2LSr9VK7ePZZBZCsiph1M5US6SA0Bbpxa16uuoyrATQTg3bxHjUbU7Ioe65psbtZBq0_Wt9JzweADaAdhdmck0S9UAt6ildONREL6uTwxoyARwUHLznCo48P)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "However, such custom certificates can be filtered out and communication can be blocked by other preventing controls.", "sentence_right": "*Fig.9: Server certificate having subject and issuer name as “AsyncRAT Server”*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh6.googleusercontent.com/Q9ONmRNh0G3xnn2RPK3XQs9oRlGKpb8izMFU7exiDBuTNfSuCJxI6FWKlGsCgEN6s3lmozlZapJ3wjin-jZAYFSeQYvJBxvvBpeHe9flzbDgTdAqUeyWDCheWfPpwtyACyfM-rBR)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The packet begins with data length in a decimal format null-terminated string followed by command and then delimiter followed by exfiltrated data.", "sentence_right": "*Fig.18: Fix length first response from C&C server.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh5.googleusercontent.com/ueaF5gjccOqVQVXS2sRGsLoQin-mq3xSkD-SwxC7XZRlQLqmidAWsItAJKXAALu_LIsYjNqovbDiRsM3DRRqSg6lvtdZ9s4SvOJuxehAqyQA6pj0uhLjIdNuwNvOZlUXBinfRIsI)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "As this request and response is encrypted with the same symmetric key, the header “[DataStart]” will generate the same encrypted stream of bytes in place of the header for all communication generated by the executable.", "sentence_right": "*Fig.6: Data sent to C&C server as RC4 encrypted.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "2.Entropy of data followed after data length is high.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Adding 4 to the little endian value of the first 4 should give the total length of TCP data.", "sentence_right": "3.The C&C server responds in the same packet format as the client.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh4.googleusercontent.com/usA4f2R1PIROH6JL8hvC6FHrb_GuwbBcM3LO2F6hudKGMeEyRfB3Waea5wyfE3nSlk6MyqzXj0SE6t05M4etgOhBwOGYJ_pa2Akv4hN8S34D4S3CRVALYkQwBGqdRCThxlk9ZHrk)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The C&C server generates a session key for this information.", "sentence_right": "*Fig.8: Data sent to C&C server as AES encrypted.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh5.googleusercontent.com/7wLs8lUEMdYFPShrSwZR0DS-dWkSEznyb1LzuiirRBrwkx_aOfRHBBA9IZi6M3wA_tZ8wmTxQ-nVQQRAXBqHX1bUn9QziriO_-34JLECbcWR-OTBtiG6WhFF2EQQxOYd8qQz_vnB)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The custom protocol contains the header “[DataStart]” followed by the size of data and then followed by the exfiltrated data.", "sentence_right": "*Fig.5: Data sent to C&C server in plain text.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Then, a marker and data length are prepended to this data.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Upon execution, it collects system data such as system information, version, processor description, installed antivirus, etc.", "sentence_right": "Finally, collected data is encrypted with single-byte operation of XOR and SUB on each byte.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "It is not possible to scan for signature patterns on AES-encrypted traffic.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Quasar encrypts communications using an AES algorithm with a pre-shared key hardcoded in the client binary.", "sentence_right": "However, the distinctive characteristics of encrypted data packets can be leveraged to flag Quasar's AES encrypted traffic.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.Nanocore](https://threatlibrary.zscaler.com/threats/51db83e0-80cf-4760-81a9-db4af507a5d8)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.Cybergate](https://threatlibrary.zscaler.com/threats/6430f34a-aece-42ef-9435-c1bcc45a7f4b)", "sentence_right": "[Win32.Backdoor.Gh0stRAT](https://threatlibrary.zscaler.com/threats/124cb8b3-bca5-420f-a4c5-71f4450d3ed3)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "One such command from the server is “is alive” which is 0x600; when encrypted with a key it will produce “c1 c3 d0 32 43 59 a1 78”.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "This results in some encrypted traffic that will be the same across all bots generated using the publicly available bot-builder.", "sentence_right": "However, there are other customized bot-builders available underground that allow the user to configure the key.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "Packets begin with the data length followed by a marker then by a new line delimiter followed by encrypted data.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*Fig.14: Compressed and Encrypted data sent to C&C.*", "sentence_right": "To flag the CyberGate RAT traffic, a combination of data length, marker, and delimiter can be considered.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "And by knowing the protocol, scan engines using heuristics or machine-learning techniques can more easily differentiate between malicious and legitimate traffic, giving security teams an advantage.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "For those that do inspect their encrypted traffic, modern network security proxies, gateways, and firewalls are evolved enough to conveniently parse application protocols and strip the SSL layer to scan the underlying data.", "sentence_right": "These trends have led some adversaries to turn to custom protocols.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.RemcosRAT](https://threatlibrary.zscaler.com/threats/4461cfa5-4155-499b-a1b5-e866cd05df97)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The following are the Cloud IPS (non-HTTP/S) signatures that enable detection of the above RATs:", "sentence_right": "[Win32.Backdoor.NetwiredRC](https://threatlibrary.zscaler.com/threats/8e9bd46b-2820-4f49-8b11-8712761e366d)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "This response contains a GUID of plugins that the bot will load.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The first response from the server will be always 0x24 bytes in length, and the first 4 bytes will always be “20 00 00 00”.", "sentence_right": "The bot responds back to this with 0x12 bytes data, which will always start with the 4-byte stream “08 00 00 00”.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "*alert tcp any any -> any any (msg:\"Zscaler Win32.Backdoor.Gh0stRAT - Possible Data Exfil activity\"; flow:to\\_server,established; byte\\_extract:1,10,varbyte; byte\\_test:1,!=,varbyte,11; byte\\_test:1,=,varbyte,12; byte\\_test:1,=,varbyte,13; byte\\_test:1,!=,varbyte,15; byte\\_extract:4,16,vardword; byte\\_test:4,=,vardword,20; byte\\_test:4,=,vardword,24; byte\\_test:4,=,vardword,28; byte\\_test:4,!=,vardword,0; sid:8000031; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*alert tcp $EXTERNAL\\_NET any -> $HOME\\_NET any (msg:\"Zscaler Win32.Backdoor.Nanocore - Generic C&C command (response)\"; flow:established,to\\_client; flowbits:noalert; flowbits:set,ZS.NanocoreGen; content:\"|20 00 00 00|\"; offset:0; depth:4; byte\\_test:1,!=,0,5,relative; dsize:36; reference:url,https://zscaler.com;)*", "sentence_right": "*alert tcp $HOME\\_NET any -> $EXTERNAL\\_NET any (msg:\"Zscaler Win32.Backdoor.NjRat - Data Exfil activity\"; flow:to\\_server,established; content:\"|00|inf\"; offset:3; depth:4; pcre:\"/\\d{1,3}\\x00\\w{1,3}/\"; pcre:\"/(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?/\"; flowbits:isset,ZS.njrat; flowbits:unset,ZS.njrat; classtype:trojan-activity; reference:url,https://research.zscaler.com;)*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "The source code of the  Gh0stRAT is publicly available and attackers have customized it to suit their needs.", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Its features include remote desktop, logging keystrokes, stealing credentials, capturing microphone and webcam, and many more.", "sentence_right": "Thus, many variants have been discovered.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.QuasarRAT](https://threatlibrary.zscaler.com/threats/3e8d15d9-287b-4ed2-ab16-fa58f7446a59)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.AsyncRAT](https://threatlibrary.zscaler.com/threats/2a3c4fd0-57d3-4816-8ffe-400f95ba6f37)", "sentence_right": "[Win32.Backdoor.AgentTesla](https://threatlibrary.zscaler.com/threats/35372622-693c-4166-8b6e-ccbf7f669cb5)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh4.googleusercontent.com/4LbGU33qsv7CmoSQurQlSHwWvXM7Ma3GRLeKAxXQbftHAIkXMF6EW5ucgwBdclY84Zq5-ZY0K1vwARPoCUS7fUUK4C1NTdnVBcF_2t6XwK56x9c4TwsdE5tQoKeteaX_lUESl0NS)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "Finally, collected data is encrypted with single-byte operation of XOR and SUB on each byte.", "sentence_right": "*Fig.17: Collected data before encryption and after encryption.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.NjRat](https://threatlibrary.zscaler.com/threats/5056fbf2-0119-4348-9b26-59feccdd5bb7/)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.Gh0stRAT](https://threatlibrary.zscaler.com/threats/124cb8b3-bca5-420f-a4c5-71f4450d3ed3)", "sentence_right": "### **Conclusion**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh3.googleusercontent.com/Kmhmv9brGs4R-gbEkuKh4W4GdCVsEFslRyxOrVNV9Rdgpc3wGLEf6QQhviCLHNkMet7yfp1Ft7YSbRSXC0v7_1LsEabrZQeWq2he2ZMpANYPyeCF7G6hLH7ZJqvVBNBM54GlQRXJ)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The communication packet begins with a 4-byte data length followed by DES-encrypted data of that length.", "sentence_right": "Fig.15: Encrypted data C&C communication", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh3.googleusercontent.com/8F2MVgT3zx-6rcHGYEHNkJp9wj610xCU0yscksACAnADDhWCNdNZ7sBkzjHrsY1PLAGurtUGTjlBBf4TQTK-P4Jxq42mm0_1A0-LpwsP373wrC6lYZOS9sgarmgIl3Auq8CzRQy0)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "*Fig.11: Data to be sent via FTP.*", "sentence_right": "*Fig.12: Exfiltration over FTP*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.CrimsonRAT](https://threatlibrary.zscaler.com/threats/1d5c6832-d582-41cd-a050-e51251663138)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.NetwiredRC](https://threatlibrary.zscaler.com/threats/8e9bd46b-2820-4f49-8b11-8712761e366d)", "sentence_right": "[Win32.Backdoor.AsyncRAT](https://threatlibrary.zscaler.com/threats/2a3c4fd0-57d3-4816-8ffe-400f95ba6f37)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "![](https://lh6.googleusercontent.com/zN7waqVzJ7bcYrfOAkgqH-_czg5hvNth-DIU6ll956XT3r7e49_4CLHbjXWxlnc7D4fCrNd_UIXEW3hKz8K4Wt7lGVLzCuIsbBTcUhFu4JP0n4f4zFXterYWG-HxAva4QI_S5gIo)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "The configuration contains the C&C address, port, mutex name, and encryption key for C&C communication.", "sentence_right": "*Fig.3: Encrypted configuration in resource.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}
{"mention": "[Win32.Backdoor.AgentTesla](https://threatlibrary.zscaler.com/threats/35372622-693c-4166-8b6e-ccbf7f669cb5)", "context_left": "", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.QuasarRAT](https://threatlibrary.zscaler.com/threats/3e8d15d9-287b-4ed2-ab16-fa58f7446a59)", "sentence_right": "[Win32.Backdoor.Cybergate](https://threatlibrary.zscaler.com/threats/6430f34a-aece-42ef-9435-c1bcc45a7f4b)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2021-05-05_catching-rats-over-custom-protocols"}