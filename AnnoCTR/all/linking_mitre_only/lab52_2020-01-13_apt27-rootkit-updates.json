{"mention": "APT27", "context_left": "", "context_right": "ZxShell RootKit module updates", "_context_left": "", "_context_right": " ZxShell RootKit module updates", "sentence_left": "", "sentence_right": "January 13, 2020", "label": "Emissary Panda", "label_id": 1335, "label_title": "Emissary Panda", "label_link": "http://www.bosch.com#node1fvup9pj1x44", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "ZxShell", "context_left": "APT27", "context_right": "RootKit module updates", "_context_left": "APT27 ", "_context_right": " RootKit module updates", "sentence_left": "", "sentence_right": "January 13, 2020", "label": "[ZxShell](https://attack.mitre.org/software/S0412) is a remote administration tool and backdoor that can be downloaded from the Internet, particularly from Chinese hacker websites. It has been used since at least 2004.(Citation: FireEye APT41 Aug 2019)(Citation: Talos ZxShell Oct 2014 )", "label_id": 1001, "label_title": "ZxShell", "label_link": "https://attack.mitre.org/software/S0412", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "RootKit", "context_left": "APT27 ZxShell", "context_right": "module updates", "_context_left": "APT27 ZxShell ", "_context_right": " module updates", "sentence_left": "", "sentence_right": "January 13, 2020", "label": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)", "label_id": 57, "label_title": "Rootkit", "label_link": "https://attack.mitre.org/techniques/T1014", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "RootKit", "context_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally", "context_right": "/Bootkit type threats that act with the maximum level of privileges.", "_context_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally ", "_context_right": "/Bootkit type threats that act with the maximum level of privileges.", "sentence_left": "January 13, 2020", "sentence_right": "An example of this type of threats is the RootKit module of ZxShell RAT used by Emissary Panda (APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "label": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)", "label_id": 57, "label_title": "Rootkit", "label_link": "https://attack.mitre.org/techniques/T1014", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "Bootkit", "context_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally RootKit/", "context_right": "type threats that act with the maximum level of privileges.", "_context_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally RootKit/", "_context_right": " type threats that act with the maximum level of privileges.", "sentence_left": "January 13, 2020", "sentence_right": "An example of this type of threats is the RootKit module of ZxShell RAT used by Emissary Panda (APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "label": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting) Adversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.", "label_id": 311, "label_title": "Pre-OS Boot", "label_link": "https://attack.mitre.org/techniques/T1542", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "RootKit", "context_left": "An example of this type of threats is the", "context_right": "module of ZxShell RAT used by Emissary Panda (APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "_context_left": "An example of this type of threats is the ", "_context_right": " module of ZxShell RAT used by Emissary Panda (APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "sentence_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally RootKit/Bootkit type threats that act with the maximum level of privileges.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-11-32-47.png)", "label": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)", "label_id": 57, "label_title": "Rootkit", "label_link": "https://attack.mitre.org/techniques/T1014", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "ZxShell", "context_left": "An example of this type of threats is the RootKit module of", "context_right": "RAT used by Emissary Panda (APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "_context_left": "An example of this type of threats is the RootKit module of ", "_context_right": " RAT used by Emissary Panda (APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "sentence_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally RootKit/Bootkit type threats that act with the maximum level of privileges.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-11-32-47.png)", "label": "[ZxShell](https://attack.mitre.org/software/S0412) is a remote administration tool and backdoor that can be downloaded from the Internet, particularly from Chinese hacker websites. It has been used since at least 2004.(Citation: FireEye APT41 Aug 2019)(Citation: Talos ZxShell Oct 2014 )", "label_id": 1001, "label_title": "ZxShell", "label_link": "https://attack.mitre.org/software/S0412", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "Emissary Panda", "context_left": "An example of this type of threats is the RootKit module of ZxShell RAT used by", "context_right": "(APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "_context_left": "An example of this type of threats is the RootKit module of ZxShell RAT used by ", "_context_right": " (APT27), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "sentence_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally RootKit/Bootkit type threats that act with the maximum level of privileges.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-11-32-47.png)", "label": "Emissary Panda", "label_id": 1335, "label_title": "Emissary Panda", "label_link": "http://www.bosch.com#node1fvup9pj1x44", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "APT27", "context_left": "An example of this type of threats is the RootKit module of ZxShell RAT used by Emissary Panda (", "context_right": "), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "_context_left": "An example of this type of threats is the RootKit module of ZxShell RAT used by Emissary Panda (", "_context_right": "), of which there is a relatively recent sample (Uploaded to Virustotal since 2019-09-21 17:59:39) that is also correctly signed, so it can be loaded in the latest version of Windows 10 and is perfectly functional as far as we have been able to check.", "sentence_left": "Within the toolset of the different APT groups, one of the most interesting elements and the one that generally worries the most, are their capabilities in Ring0, generally RootKit/Bootkit type threats that act with the maximum level of privileges.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-11-32-47.png)", "label": "Emissary Panda", "label_id": 1335, "label_title": "Emissary Panda", "label_link": "http://www.bosch.com#node1fvup9pj1x44", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "Rootkit", "context_left": "As he describes in his blog, the capabilities of this", "context_right": "are basically the following:", "_context_left": "As he describes in his blog, the capabilities of this ", "_context_right": " are basically the following:", "sentence_left": "After analyzing this threat and describing its capabilities, he has rewritten the source code from a sample of this threat uploaded in 2018 to Virustotal, and published it in GitHub, which greatly facilitates the analysis of newer versions.", "sentence_right": "* **File Redirection**", "label": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)", "label_id": 57, "label_title": "Rootkit", "label_link": "https://attack.mitre.org/techniques/T1014", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "Redirect malicious files to benign files", "context_left": "–", "context_right": ".", "_context_left": "– ", "_context_right": ".", "sentence_left": "* **File Redirection**", "sentence_right": "If you try to call CreateFile() to open a malicious file you’ll get a handle to a benign file.", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "you try to call CreateFile() to open a malicious file you’ll get a handle to a benign file.", "context_left": "If", "context_right": "", "_context_left": "If ", "_context_right": "", "sentence_left": "– Redirect malicious files to benign files.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-11-39-50_arrows-1024x435.png)", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "Network Connection Hiding", "context_left": "* **", "context_right": "**", "_context_left": "* **", "_context_right": "**", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-11-39-50_arrows-1024x435.png)", "sentence_right": "– Hide network connections from tools like netstat,proceshacker…", "label": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015) Adversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)", "label_id": 486, "label_title": "Hide Artifacts", "label_link": "https://attack.mitre.org/techniques/T1564", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "Hide network connections", "context_left": "–", "context_right": "from tools like netstat,proceshacker…", "_context_left": "– ", "_context_right": " from tools like netstat,proceshacker…", "sentence_left": "* **Network Connection Hiding**", "sentence_right": "We found interesting to analyze the differences between the 2018 version and the most recent 2019 version in order to try to identify new capabilities or changes in its capabilities.", "label": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015) Adversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)", "label_id": 486, "label_title": "Hide Artifacts", "label_link": "https://attack.mitre.org/techniques/T1564", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "focused on avoiding detections by slightly “obfuscating” some IOCs hardcoded as strings and code modification without impact in the capabilities on the driver", "context_left": "After analyzing the differences between this 5 funtcions, we have been able to observe that all the changes are", "context_right": "…", "_context_left": "After analyzing the differences between this 5 funtcions, we have been able to observe that all the changes are ", "_context_right": "…", "sentence_left": "Different functions", "sentence_right": "In total, there are three notable changes between the two versions:", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "flips the strings before passing them to the function that hides the files", "context_left": "At code level, the impact this has had is that the function that redirects these files, now uses the “wcrev” function that", "context_right": ":", "_context_left": "At code level, the impact this has had is that the function that redirects these files, now uses the “wcrev” function that ", "_context_right": ":", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-12-48-53.png)Old and New list of file names", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2020/01/Captura-de-pantalla-de-2020-01-13-11-19-52Arrows-1024x346.png)", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}
{"mention": "Finally, they have moved part of the logic of some functions to another point, maintaining the same functionality", "context_left": "*", "context_right": ".", "_context_left": "* ", "_context_right": ".", "sentence_left": "*New code (Red) and old code (Green)*", "sentence_right": "An example is the end of the driver entry function, where untill now, at the end they only called two functions that initialized the logic of hiding connections and redirecting files, and now, they have extracted part of the logic of these functions and moved it right after each one of them, but without any impact on the capabilities and behavior of the Driver:", "label": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. Portions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016) Adversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017)", "label_id": 544, "label_title": "Obfuscated Files or Information", "label_link": "https://attack.mitre.org/techniques/T1027", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-01-13_apt27-rootkit-updates"}