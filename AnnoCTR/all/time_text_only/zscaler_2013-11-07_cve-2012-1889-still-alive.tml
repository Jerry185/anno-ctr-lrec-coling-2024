<?xml version="1.0"?>
<TimeML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://timeml.org/timeMLdocs/TimeML_1.2.1.xsd">
<DCT><TIMEX3 functionInDocument="CREATION_TIME" temporalFunction="false" tid="t0" type="DATE" value="2013-11-07">2013-11-07</TIMEX3></DCT>
<TEXT>
CVE-2012-1889 Is Still Alive!   November 07, 2013       In  Zscaler’s dailyscanning, we identified an instance where CVE-2012-1889 (MSXML Uninitialized Memory Corruption Vulnerability) is still alive.  Lets take a look.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-11Tciw1fvh4/UnyA7XMpOiI/AAAAAAAAAFE/BSwzEnmOTQU/s1600/sitepic.png)](/sites/default/files/images/blogs/-11Tciw1fvh4/UnyA7XMpOiI/AAAAAAAAAFE/BSwzEnmOTQU/s1600/sitepic.png)  The site hxxp://wm.17wan.info:9999/zx/zip.html?mag.fznews.com.cn is a Chinese site, which targets online gamers by serving malicious code which exploits Microsoft XML Core Services.  This attack allows  a remote attacker to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site.  The site serves highly obfuscated code to evade antivirus solutions.  **VirusTotal lookup**  [https://www.virustotal.com/en/file/3eaf208c67ec268b969f260f55ef7d70fd06f3b086a6dcc9fdfb57758dd62240/analysis/1380076165/](https://www.virustotal.com/#/file/3eaf208c67ec268b969f260f55ef7d70fd06f3b086a6dcc9fdfb57758dd62240/analysis/1380076165/)  You can see the highly obfuscated code served by the malicious site in the screen shot below.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-96CnyNP_8S8/UnyA1lFQIdI/AAAAAAAAADc/5Fbmlw_t2jc/s1600/1.png)](/sites/default/files/images/blogs/-96CnyNP_8S8/UnyA1lFQIdI/AAAAAAAAADc/5Fbmlw_t2jc/s1600/1.png)  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-0523gRwAUu0/UnyA1ttRfhI/AAAAAAAAADg/rjQGdY0rLOs/s1600/2.png)](/sites/default/files/images/blogs/-0523gRwAUu0/UnyA1ttRfhI/AAAAAAAAADg/rjQGdY0rLOs/s1600/2.png)   The highlighted code shows that the a CLSID object is being used, which is exploited by parsing long strings of the letter “A”.  This CLSID object is related to the vulnerability detailed in CVE-2012-1889.  Lets take a look at a beautified version of this code.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-bw6BgkhblSM/UnyA6o2zFlI/AAAAAAAAAFA/QWDgfVvF1_c/s1600/blog1.png)](/sites/default/files/images/blogs/-bw6BgkhblSM/UnyA6o2zFlI/AAAAAAAAAFA/QWDgfVvF1_c/s1600/blog1.png)  This highlighted section shows the suspicious function, which leverages the shell code for exploiting the vulnerability.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-t3UkS3Jj6yI/UnyA3X6kKAI/AAAAAAAAAEE/CVSsGBOaswk/s1600/2013-10-04+20_55_03-urlquery.net+-+Free+url+scanner.png)](/sites/default/files/images/blogs/-t3UkS3Jj6yI/UnyA3X6kKAI/AAAAAAAAAEE/CVSsGBOaswk/s1600/2013-10-04+20_55_03-urlquery.net+-+Free+url+scanner.png)  Here function heapLib() performs a heap spray.  You can see the complete series of functions utilized in the full attack.  Let's decode the script which is shown in first screen shot   [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-jSOGAUJRbv4/UnyA2tzW9NI/AAAAAAAAAD4/iuLCD_X0TwQ/s1600/2013-10-04+20_34_44-urlquery.net+-+Free+url+scanner.png)](/sites/default/files/images/blogs/-jSOGAUJRbv4/UnyA2tzW9NI/AAAAAAAAAD4/iuLCD_X0TwQ/s1600/2013-10-04+20_34_44-urlquery.net+-+Free+url+scanner.png)        [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-6qHx-3bC7PE/UnyA3PvaL5I/AAAAAAAAAEA/V-lAxLMpEp8/s1600/2013-10-04+20_46_42-urlquery.net+-+Free+url+scanner.png)](/sites/default/files/images/blogs/-6qHx-3bC7PE/UnyA3PvaL5I/AAAAAAAAAEA/V-lAxLMpEp8/s1600/2013-10-04+20_46_42-urlquery.net+-+Free+url+scanner.png)  The decrypted source code shows that random named parameters are used for obfuscation of the original code.  The chunks of code are combined into a final code snippet, which is then decoded again for making the actual shell code.  Here you can see that the variable “t” is using the “MYKEY” parameter and “MYKEY” is using the “MY” parameter to construct the final chunk.  This final chunk is again decoded by the function utf8to6() and nbcode(), which are defined in the source code for the final payload and that is used by the window object.  At the end of the code the “t” variable generates the final javascript snippet which executes the shellcode.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-husFTSxquAc/UnyA6FgyirI/AAAAAAAAAE4/P16teOvcFVc/s1600/2013-10-14+15_09_37-Windows+XP+-+VMware+Workstation.png)](/sites/default/files/images/blogs/-husFTSxquAc/UnyA6FgyirI/AAAAAAAAAE4/P16teOvcFVc/s1600/2013-10-14+15_09_37-Windows+XP+-+VMware+Workstation.png)    This is the javascript which is generated at variable “t”.  Again, this script is obfuscated.  Obfuscation is primarily used by malware authors to avoid antivirus detection.  It should be noted that malware authors do not always leverage 0-days, in fact most technical attacks utilize known vulnerabilities as attackers know that a large percentage of PC users have not applied the latest patches.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-Y9crymgErb4/UnyA6zmJGUI/AAAAAAAAAFU/CV64UKq6DWQ/s1600/crash.png)](/sites/default/files/images/blogs/-Y9crymgErb4/UnyA6zmJGUI/AAAAAAAAAFU/CV64UKq6DWQ/s1600/crash.png)   An interesting observation is that the javascript is written in such a way that it only works on IE. It avoids delivering an unnecessary heap spray when loaded in another browser.  That’s why when you open this site with IE it crashes IE and while opening with any other browser it works fine.  It does however attempt to serve alternate malicious files to other browser users such as the samples described below.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-4o6dXVofMzA/UnyA4eJMYmI/AAAAAAAAAEU/D8PWSpBlzsI/s1600/2013-10-04+21_12_36-Analyze+_+SigsWeb.png)](/sites/default/files/images/blogs/-4o6dXVofMzA/UnyA4eJMYmI/AAAAAAAAAEU/D8PWSpBlzsI/s1600/2013-10-04+21_12_36-Analyze+_+SigsWeb.png)   Here you can see the sourcode contains a link which drops a malicious Rar file.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-8MtnxqDxhNQ/UnyA4ME6T0I/AAAAAAAAAEQ/7sM3PwxRLTw/s1600/2013-10-04+21_07_24-BT+-+VMware+Workstation.png)](/sites/default/files/images/blogs/-8MtnxqDxhNQ/UnyA4ME6T0I/AAAAAAAAAEQ/7sM3PwxRLTw/s1600/2013-10-04+21_07_24-BT+-+VMware+Workstation.png)   **VirusTotal lookup**     [https://www.virustotal.com/en/file/b732b09a6cacd78a8c6a789e8ee17b8c741de2c0234886decf6ce1807808c305/analysis/](https://www.virustotal.com/#/file/b732b09a6cacd78a8c6a789e8ee17b8c741de2c0234886decf6ce1807808c305/analysis/)     **HTTP Transactions**   [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-bLKDeH__oAw/UnyA5mNvqII/AAAAAAAAAEs/_R78AnY52Gg/s1600/2013-10-14+14_15_24-Windows+XP+-+VMware+Workstation.png)](/sites/default/files/images/blogs/-bLKDeH__oAw/UnyA5mNvqII/AAAAAAAAAEs/_R78AnY52Gg/s1600/2013-10-14+14_15_24-Windows+XP+-+VMware+Workstation.png)  This site makes a connection with following sites  * Js.users.51.la  * Web1.51.la:82  Zscaler provides complete protection for these threats.  
</TEXT>
</TimeML>