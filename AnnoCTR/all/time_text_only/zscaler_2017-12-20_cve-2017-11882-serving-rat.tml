<?xml version="1.0"?>
<TimeML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://timeml.org/timeMLdocs/TimeML_1.2.1.xsd">
<DCT><TIMEX3 functionInDocument="CREATION_TIME" temporalFunction="false" tid="t0" type="DATE" value="2017-12-20">2017-12-20</TIMEX3></DCT>
<TEXT>
CVE-2017-11882 serving RAT and encrypted phishing campaign   December 20, 2017       Introduction  Malicious documents remain one of the most popular vectors for cybercriminals to deliver malware payloads on a user's system.  While we continue to see many types of VBA macro-based malware, there has been an increasing trend in malicious documents using the DDE protocol for delivering malware executables, which [we wrote about last month](/blogs/research/microsoft-dde-protocol-based-malware-attacks).  Microsoft released a security update last week that should significantly reduce the number of DDE-based attacks:  *"Microsoft has released an update for Microsoft Office that provides enhanced security as a defense-in-depth measure.  The update disables the Dynamic Update Exchange protocol (DDE) in all supported editions of Microsoft Word.  - [Microsoft Security Advisory](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/ADV170021)*  Zscaler ThreatLabZ has been tracking a new vector involving malicious RTF document files weaponized with the recently disclosed Microsoft memory corruption vulnerability, CVE-2017-11882.  In this blog, we will review a recent campaign leveraging this exploit and also share insights on encrypted phishing campaigns.  **Infection cycle**  In our research into this new exploit, we encountered spam phishing emails containing a malicious document attachment that leads to a Remote Access Trojan (RAT) and an encrypted phishing page.  The complete workflow of this campaign is shown below:  ![](/cdn-cgi/image/format=auto/sites/default/files/images/workflow_new_1513750060.png)  Fig 1: Workflow  The malware is received by the victim in a phishing email with a password-protected archive as the attachment.  An example of one such phishing email can be seen below:  ![](/cdn-cgi/image/format=auto/sites/default/files/images/image_1513798025.png)  Fig 2: Phishing scam email  The attachment is a password-protected ZIP file, which prevents auto-analysis systems from extracting and analyzing malicious files.  After the extraction of the  ZIP file with the password given in the email, we are presented with an RTF document file.  This RTF file exploits the CVE-2017-11882 vulnerability in Microsoft Office software to execute malicious code.  Using this vulnerability, the attacker can install malware, access data, or create a new account with full access rights.  Once the document is opened, it shows a plain document to the user.  However, in the background it downloads and executes a RAT; as it does, it shows the phishing email content to the user, which leads to a phishing site.  The malicious RTF document file is shown below.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/image_1513798077.png)  Fig 3: After HEX-to-ASCII conversion.  The RTF file contains the link to "note,"' which is an HTML application that is remotely executed by mshta.exe.  In the header section of **note.hta**, there is VBScript code that is executed when the file is loaded.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/note_snap_1513275982.png)  Fig 4: Header section of **note.hta**  After decoding, the code looks like this.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/note_decode_snap_1513276187.JPG)  Fig 5: Decoded PowerShell code inside VBScript of **note.hta**  The VBScript in **note.hta** creates a hidden PowerShell process, which downloads malware named clear.exe, stores it in %TEMP% directory with the name clear.exe, and executes it.  [Clear.exe](https://www.virustotal.com/#/file/9ee275f27d6489840244ec29ad03276a8a5e8e46e838850f30659d8652c01999/) is inherently a Python module that is converted from Python to EXE.  After the reverse engineering of clear.exe, we get the malicious Python script, which looks like a RAT client.  The RAT client connects with the Command & Control (C&C) server IP 197.200.145[.]178 on port 2016.  It has a couple of tasks that will be executed when the C&C server sends a command request.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/c2commands_1513276432.JPG)  Fig 6: RAT commands (clear.exe)  RAT C&C commands supported:  1.Kill – kill client connection  2.Selfdestruct – kill client connection and remove traces of exploit  3.Quit – close socket and connection  4.Persistence – make RAT client persistent in system  5.Scan – scan TCP ports  6.Survey – run a system survey  7.Cat <action> – output file on screen  8.Execute <action> – execute a command  9.Ls – list files in current directory  10.Pwd – get working directory  11.Unzip <action> – unzip a file  12.Wget <action> – download a file from web  In addition to downloading this RAT executable, the malware will display a phishing email body pretending to come from the UK Government.  When **note.hta** is executed, it will display the following screen:  ![](/cdn-cgi/image/format=auto/sites/default/files/images/image_1513798190.png)  Fig 7: **note.hta** on execution  The hyperlink shown in Fig 7 leads to a phishing site as shown below.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/image_1513798690.png)  Fig 8: Tax refund phishing site  The source code of this phishing site appears as follows:  ![](/cdn-cgi/image/format=auto/sites/default/files/images/aes_enc_phish_1513276840.JPG)  Fig 9: AES-encrypted phishing site  The source code of this phishing site is encrypted using AES-256.  It decrypts itself when the page loads using the Aes.Ctr.decrypt function.  The aim of this encrypted site is to avoid detection by automated site crawlers, web security systems, IDS/IPS systems, and so on.  This phishing site asks for personal information, including credit card details, and sends it to the attacker.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/enc_tax_more_1513276920.PNG)  Fig 10: The phishing site steals the victim's personal information  **Encrypted phishing campaigns**  The AES-encrypted phishing campaign is an old tactic, with sites that are difficult to identify and difficult to catch by a crawler, which is why attackers are moving towards the encrypted phishing sites.  In the past few weeks, we've found many similar encrypted phishing sites that are designed to look like the homepages of a UK government agency, Apple, PayPal, Netflix, AOL, and others.  ![](/cdn-cgi/image/format=auto/sites/default/files/images/chart5_1513278100.JPG)  Fig 11: Encrypted phishing sites hits during Nov-17 and Dec-17  ![](/cdn-cgi/image/format=auto/sites/default/files/images/enc_phish_netflix_1513278226.PNG)  Fig 12: Phishing site posing as Netflix homepage  ![](/cdn-cgi/image/format=auto/sites/default/files/images/enc_apple_phish_1513278300.PNG)  Fig 13: Phishing site posing as Apple homepage  ![](/cdn-cgi/image/format=auto/sites/default/files/images/enc_phish_aol_1513278349.PNG)  Fig 14: Phishing site posing as AOL homepage  **Zscaler protections:**  CVE-2017-11882 :  Microsoft has provided the [update](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882) for this memory corruption vulnerability.  Zscaler threatname – “Microsoft CVE-2017-11882”  Malicious HTML application (note.hta):  Zscaler threatname – “VBS.TrojanDownloader.Gen”  Remote Access Trojan (RAT):  Zscaler threatname – “Win32.Trojan.RAT”  Encrypted phishing websites:  Zscaler threatname – “Phishing.Encrypted.Gen”  
</TEXT>
</TimeML>