<?xml version="1.0"?>
<TimeML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://timeml.org/timeMLdocs/TimeML_1.2.1.xsd">
<DCT><TIMEX3 functionInDocument="CREATION_TIME" temporalFunction="false" tid="t0" type="DATE" value="2013-12-17">2013-12-17</TIMEX3></DCT>
<TEXT>
Aurora Exploit Still Floating ...   December 17, 2013       It's been around two years since Microsoft released a patch for the IE 0day famously known as the Aurora exploit ([CVE-2010-0249](http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0249)).  We had [blogged](/blogs/research/ie-0-day-govcn) about this in the past when it was first seen in the wild on the 'GOV.CN' domain.  This vulnerability targets IE version 6.  Despite the passage of time, we continue to find live exploits for this vulnerability.  Recently, we found a new URL which is serving the Aurora exploit code.  **Exploit URL:** hxxp://www.artbridal.com/bizcodi/gm/news.html   Let's take a look at the exploit code being delivered.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-jqTcDYgWgwI/UrBTWYh7bZI/AAAAAAAABMY/AEeX25a97IA/s1600/Src-code.png)](/sites/default/files/images/blogs/-jqTcDYgWgwI/UrBTWYh7bZI/AAAAAAAABMY/AEeX25a97IA/s1600/Src-code.png)    The exploit is delivered via obfuscated JavaScript code, although the level of obfuscation is not very high.  Some of the strings and JavaScript function names are been obfuscated.  The following is a snapshot of the de-obfuscated code.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-H-8Qm0AvzQo/Uq89BjurOSI/AAAAAAAABL4/07OTQOh-fv8/s1600/de-obfu.png)](/sites/default/files/images/blogs/-H-8Qm0AvzQo/Uq89BjurOSI/AAAAAAAABL4/07OTQOh-fv8/s1600/de-obfu.png)   If you observe the first image, the SPAN tag holds an IMG tag on which the '*onload*' event calls an event handler  function '*eve*'.  This in turn creates an event object called '*e1*', using the '*document.createEventObject*' method.  Then, by using an '*.innerHTML*' property, it assigns a null string to SPAN object '*sp1*', but instead, the '*sp1*' object is removed.  In the function '*eve*', the freed object is referenced, causing memory corruption in the form of an access violation in IE.   To exploit this condition, the exploit code uses a typical [heap spray](http://en.wikipedia.org/wiki/Heap_spraying) techniqueto load the shellcode into memory for the execution.  When the shellcode is executed, it tries to download a malicious file from the URL '*hxxp://fly-tld.ru/w.php?f=47&e=3*'.  For a more detailed analysis, you can refer to this [blog](http://www.symantec.com/connect/blogs/trojanhydraq-incident-analysis-aurora-0-day-exploit).  To obtain the aforementioned URL, the PE executable file was formed and extracted from the shell code in the exploit.  The EXE was then examined using a debugger to extract the URL as can be seen below.  [![](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/-4vATTPHe95s/Uq9FYX8LWiI/AAAAAAAABMI/d-kw1mXCjuo/s1600/troj-url.png)](/sites/default/files/images/blogs/-4vATTPHe95s/Uq9FYX8LWiI/AAAAAAAABMI/d-kw1mXCjuo/s1600/troj-url.png)   This URL is down at the moment, so further post exploitation analysis was not possible.  **Reports:**  VT URL Scan on found URL : [4/51 detections](https://www.virustotal.com/en/url/08b678dee932fb0e09b1694ee651c23e765d4844b328ec9fa2ee2aa76fda52b8/analysis/1387219025/).  VT File Scan on EXE formed from Shellcode: [27/41 detections.](https://www.virustotal.com/#/file/eea9309bc2ab7e4afd80d89f0f876ead0ed6851668b51fd14dedab8fb975e5c5/analysis/)   Various other URLs that have been seen in the past with similar patterns - '*/w.php?f=(\d){2}&e=(\d){1,2}*' include:    *hxxp://synergyledlighting.net/w.php?f=56&e=4*    *hxxp://nicesextubes.co/w.php?f=18&e=6*    *hxxp://iplaecrcocee.com/w.php?f=26&e=2*    *hxxp://iplaecrcocee.com/w.php?f=26&e=2    hxxp://examine.arsb.co.uk/w.php?f=20&e=2    hxxp://exciting.simssocialcheat.com/w.php?f=22&e=2    hxxp://oyacromifh.com/w.php?f=26&e=2    hxxp://eteaescopr.com/w.php?f=26&e=2*     The obvious reason behind attacking old CVE's is the belief of attackers, that there are still un-patched and outdated browser's out there on end user machines.  Sadly, they're correct.  To avoid such attacks we suggest updating browsers with latest patches and migrating to the most recent version of the browser.  Stay updated, Stay Safe.  Pradeep
</TEXT>
</TimeML>