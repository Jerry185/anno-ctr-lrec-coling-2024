{"mention": "Mustang Panda", "context_left": "", "context_right": "Recent Activity: Dll-Sideloading trojans with temporal C2 servers June 02, 2020", "_context_left": "", "_context_right": " Recent Activity: Dll-Sideloading trojans with temporal C2 servers", "sentence_left": "", "sentence_right": "June 02, 2020", "label": "[Mustang Panda](https://attack.mitre.org/groups/G0129) is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. [Mustang Panda](https://attack.mitre.org/groups/G0129) has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Germany, Mongolia, Myanmar, Pakistan, and Vietnam, among others.(Citation: Crowdstrike MUSTANG PANDA June 2018)(Citation: Anomali MUSTANG PANDA October 2019)(Citation: Secureworks BRONZE PRESIDENT December 2019)", "label_id": 1139, "label_title": "Mustang Panda", "label_link": "https://attack.mitre.org/groups/G0129", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Dll-Sideloading trojans", "context_left": "Mustang Panda Recent Activity:", "context_right": "with temporal C2 servers June 02, 2020", "_context_left": "Mustang Panda Recent Activity: ", "_context_right": " with temporal C2 servers", "sentence_left": "", "sentence_right": "June 02, 2020", "label": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution. There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "label_id": 185, "label_title": "Hijack Execution Flow", "label_link": "https://attack.mitre.org/techniques/T1574", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "C2", "context_left": "Mustang Panda Recent Activity: Dll-Sideloading trojans with temporal", "context_right": "servers June 02, 2020", "_context_left": "Mustang Panda Recent Activity: Dll-Sideloading trojans with temporal ", "_context_right": " servers", "sentence_left": "", "sentence_right": "June 02, 2020", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Lab52", "context_left": "June 02, 2020 Recently, from", "context_right": "we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat. This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "_context_left": "Recently, from ", "_context_right": " we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat.", "sentence_left": "June 02, 2020", "sentence_right": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Dll-Sideload technique with a legitimate binary, to load a threat", "context_left": "June 02, 2020 Recently, from Lab52 we have detected a recent malware sample, using the", "context_right": ". This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "_context_left": "Recently, from Lab52 we have detected a recent malware sample, using the ", "_context_right": ".", "sentence_left": "June 02, 2020", "sentence_right": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "label": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution. There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "label_id": 185, "label_title": "Hijack Execution Flow", "label_link": "https://attack.mitre.org/techniques/T1574", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "with a legitimate binary", "context_left": "June 02, 2020 Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique", "context_right": ", to load a threat. This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "_context_left": "Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique ", "_context_right": ", to load a threat.", "sentence_left": "June 02, 2020", "sentence_right": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "label": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. Renaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "label_id": 142, "label_title": "Masquerading", "label_link": "https://attack.mitre.org/techniques/T1036", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "PlugX", "context_left": "Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat. This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the", "context_right": "Trojan. This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and Mustang Panda.", "_context_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the ", "_context_right": " Trojan.", "sentence_left": "Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat.", "sentence_right": "This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and Mustang Panda.", "label": "[PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) that uses modular plugins. It has been used by multiple threat groups. (Citation: Lastline PlugX Analysis) (Citation: FireEye Clandestine Fox Part 2) (Citation: New DragonOK) (Citation: Dell TG-3390)", "label_id": 861, "label_title": "PlugX", "label_link": "https://attack.mitre.org/software/S0013", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "very small DLL, that loads an encrypted file", "context_left": "Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat. This particular sample has a", "context_right": ", which after being decrypted consists of a sample of the PlugX Trojan. This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and Mustang Panda.", "_context_left": "This particular sample has a ", "_context_right": ", which after being decrypted consists of a sample of the PlugX Trojan.", "sentence_left": "Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat.", "sentence_right": "This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and Mustang Panda.", "label": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution. There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "label_id": 185, "label_title": "Hijack Execution Flow", "label_link": "https://attack.mitre.org/techniques/T1574", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "after being decrypted", "context_left": "Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat. This particular sample has a very small DLL, that loads an encrypted file, which", "context_right": "consists of a sample of the PlugX Trojan. This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and Mustang Panda.", "_context_left": "This particular sample has a very small DLL, that loads an encrypted file, which ", "_context_right": " consists of a sample of the PlugX Trojan.", "sentence_left": "Recently, from Lab52 we have detected a recent malware sample, using the Dll-Sideload technique with a legitimate binary, to load a threat.", "sentence_right": "This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and Mustang Panda.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Chinese", "context_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan. This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of", "context_right": "origin such as APT1, APT27 and Mustang Panda. The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "_context_left": "This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of ", "_context_right": " origin such as APT1, APT27 and Mustang Panda.", "sentence_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "sentence_right": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "label": "China (; lit. \"Middle Kingdom\"), officially the People's Republic of China (PRC), is a country in East Asia and the world's most populous country, with a population of around /1e9 round 3 billion. Covering approximately , it is the fourth largest country by total area. Governed by the Communist Party of China, the state exercises jurisdiction over 22 provinces, five autonomous regions, four direct-controlled municipalities (Beijing, Tianjin, Shanghai, and Chongqing), and the special administrative regions of Hong Kong and Macau.  China emerged as one of the world's earliest civilizations, in the fertile basin of the Yellow River in the North China Plain. For millennia, China's political system was based on hereditary monarchies, or dynasties, beginning with the semi-legendary Xia dynasty in 21st century BCE. Since then, China has expanded, fractured, and re-unified numerous times. In the 3rd century BCE, the Qin reunited core China and established the first Chinese empire. The succeeding Han dynasty, which ruled from 206 BC until 220 AD, saw some of the most advanced technology at that time, including papermaking and the compass, along with agricultural and medical improvements. The invention of gunpowder and movable type in the Tang dynasty (618–907) and Northern Song (960–1127) completed the Four Great Inventions. Tang culture spread widely in Asia, as the new Silk Route brought traders to as far as Mesopotamia and the Horn of Africa. Dynastic rule ended in 1912 with the Xinhai Revolution, when the republic replaced the Qing dynasty. China as a whole was ravaged by Japan during World War II,", "label_id": 2397, "label_title": "China", "label_link": "https://en.wikipedia.org/wiki?curid=5405", "entity_class": "NE", "entity_type": "LOC", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "APT", "context_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan. This technique, and final threat together, consists of one of the most common TTPs among some", "context_right": "groups generally of Chinese origin such as APT1, APT27 and Mustang Panda. The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "_context_left": "This technique, and final threat together, consists of one of the most common TTPs among some ", "_context_right": " groups generally of Chinese origin such as APT1, APT27 and Mustang Panda.", "sentence_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "sentence_right": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "label": "An advanced persistent threat (APT) is a stealthy computer network attack in which a person or group gains unauthorized access to a network and remains undetected for an extended period. The term's definition was traditionally associated with state sponsorship, but over the last few years there have been multiple examples of non-state sponsored groups conducting large-scale targeted intrusions for specific goals.  An APT may have either business or political motives. APT processes require a high degree of covertness over a long period of time. The \"advanced\" process signifies sophisticated techniques using malware to exploit vulnerabilities in systems. The \"persistent\" process suggests that an external command and control system is continuously monitoring and extracting data from a specific target. The \"threat\" process indicates human involvement in orchestrating the attack.  APT usually refers to a group, such as a government, with both the capability and the intent to target, persistently and effectively, a specific entity. The term is commonly used to refer to cyber threats, in particular that of Internet-enabled espionage using a variety of intelligence gathering techniques to access sensitive information, but applies equally to other threats such as that of traditional espionage or attacks. Other recognized attack vectors include infected media, supply chain compromise, and human intelligence and deception. The purpose of these attacks is to place custom malicious code on one or multiple computers for specific tasks and to remain undetected for the longest possible period. Knowing the attacker artifacts, such as file names, can help a professional make a network-wide search", "label_id": 3008833, "label_title": "Advanced persistent threat", "label_link": "https://en.wikipedia.org/wiki?curid=25874360", "entity_class": "CE", "entity_type": "CON", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "APT1", "context_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan. This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as", "context_right": ", APT27 and Mustang Panda. The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "_context_left": "This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as ", "_context_right": ", APT27 and Mustang Panda.", "sentence_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "sentence_right": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "label": "[APT1](https://attack.mitre.org/groups/G0006) is a Chinese threat group that has been attributed to the 2nd Bureau of the People’s Liberation Army (PLA) General Staff Department’s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398. (Citation: Mandiant APT1)", "label_id": 1174, "label_title": "APT1", "label_link": "https://attack.mitre.org/groups/G0006", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "APT27", "context_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan. This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1,", "context_right": "and Mustang Panda. The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "_context_left": "This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, ", "_context_right": " and Mustang Panda.", "sentence_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "sentence_right": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "label": "Emissary Panda", "label_id": 1335, "label_title": "Emissary Panda", "label_link": "http://www.bosch.com#node1fvup9pj1x44", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Mustang Panda", "context_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan. This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and", "context_right": ". The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "_context_left": "This technique, and final threat together, consists of one of the most common TTPs among some APT groups generally of Chinese origin such as APT1, APT27 and ", "_context_right": ".", "sentence_left": "This particular sample has a very small DLL, that loads an encrypted file, which after being decrypted consists of a sample of the PlugX Trojan.", "sentence_right": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "label": "[Mustang Panda](https://attack.mitre.org/groups/G0129) is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. [Mustang Panda](https://attack.mitre.org/groups/G0129) has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Germany, Mongolia, Myanmar, Pakistan, and Vietnam, among others.(Citation: Crowdstrike MUSTANG PANDA June 2018)(Citation: Anomali MUSTANG PANDA October 2019)(Citation: Secureworks BRONZE PRESIDENT December 2019)", "label_id": 1139, "label_title": "Mustang Panda", "label_link": "https://attack.mitre.org/groups/G0129", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "PlugX", "context_left": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”. The binary consists of an installer, which drops in the folder “C:\\ProgramData\\AAM Updatesnnk” the legitimate binary vulnerable to dll sideload, the small dll that acts as a loader for the final threat, and the binary file, which consists of the encrypted", "context_right": "sample. ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png)", "_context_left": "The binary consists of an installer, which drops in the folder “C:\\ProgramData\\AAM Updatesnnk” the legitimate binary vulnerable to dll sideload, the small dll that acts as a loader for the final threat, and the binary file, which consists of the encrypted ", "_context_right": " sample.", "sentence_left": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png)", "label": "[PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) that uses modular plugins. It has been used by multiple threat groups. (Citation: Lastline PlugX Analysis) (Citation: FireEye Clandestine Fox Part 2) (Citation: New DragonOK) (Citation: Dell TG-3390)", "label_id": 861, "label_title": "PlugX", "label_link": "https://attack.mitre.org/software/S0013", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "binary vulnerable to dll sideload, the small dll that acts as a loader for the final threat", "context_left": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”. The binary consists of an installer, which drops in the folder “C:\\ProgramData\\AAM Updatesnnk” the legitimate", "context_right": ", and the binary file, which consists of the encrypted PlugX sample. ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png)", "_context_left": "The binary consists of an installer, which drops in the folder “C:\\ProgramData\\AAM Updatesnnk” the legitimate ", "_context_right": ", and the binary file, which consists of the encrypted PlugX sample.", "sentence_left": "The sample in question is downloaded from the following link “http://miandfish.]store/player/install\\_flash\\_player.exe” and although in previous months, it had another hash, currently the sample hosted under that name has the following hash “c56ac01b3af452fedc0447d9e0fe184d093d3fd3c6631aa8182c752463de570c”.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png)", "label": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution. There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "label_id": 185, "label_title": "Hijack Execution Flow", "label_link": "https://attack.mitre.org/techniques/T1574", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "lab52", "context_left": "The binary consists of an installer, which drops in the folder “C:\\ProgramData\\AAM Updatesnnk” the legitimate binary vulnerable to dll sideload, the small dll that acts as a loader for the final threat, and the binary file, which consists of the encrypted PlugX sample. ![](https://", "context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png) After deploying the three files, the installer runs the legitimate binary, causing the final PlugX threat to be loaded by it.", "_context_left": "![](https://", "_context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png)", "sentence_left": "The binary consists of an installer, which drops in the folder “C:\\ProgramData\\AAM Updatesnnk” the legitimate binary vulnerable to dll sideload, the small dll that acts as a loader for the final threat, and the binary file, which consists of the encrypted PlugX sample.", "sentence_right": "After deploying the three files, the installer runs the legitimate binary, causing the final PlugX threat to be loaded by it.", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "deploying the three files, the installer runs the legitimate binary", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png) After", "context_right": ", causing the final PlugX threat to be loaded by it. ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "_context_left": "After ", "_context_right": ", causing the final PlugX threat to be loaded by it.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png)", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "label": "The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.", "label_id": 588, "label_title": "Execution", "label_link": "https://attack.mitre.org/tactics/TA0002", "entity_class": "CE", "entity_type": "TACTIC", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "PlugX", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png) After deploying the three files, the installer runs the legitimate binary, causing the final", "context_right": "threat to be loaded by it. ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "_context_left": "After deploying the three files, the installer runs the legitimate binary, causing the final ", "_context_right": " threat to be loaded by it.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-05-20-2.png)", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "label": "[PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) that uses modular plugins. It has been used by multiple threat groups. (Citation: Lastline PlugX Analysis) (Citation: FireEye Clandestine Fox Part 2) (Citation: New DragonOK) (Citation: Dell TG-3390)", "label_id": 861, "label_title": "PlugX", "label_link": "https://attack.mitre.org/software/S0013", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "lab52", "context_left": "After deploying the three files, the installer runs the legitimate binary, causing the final PlugX threat to be loaded by it. ![](https://", "context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png) In this case, the legitimate vulnerable binary is part of Adobe’s Swite which will load any library named “hex.dll” that is next to the executable.", "_context_left": "![](https://", "_context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "sentence_left": "After deploying the three files, the installer runs the legitimate binary, causing the final PlugX threat to be loaded by it.", "sentence_right": "In this case, the legitimate vulnerable binary is part of Adobe’s Swite which will load any library named “hex.dll” that is next to the executable.", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Adobe", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png) In this case, the legitimate vulnerable binary is part of", "context_right": "’s Swite which will load any library named “hex.dll” that is next to the executable. ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png)", "_context_left": "In this case, the legitimate vulnerable binary is part of ", "_context_right": "’s Swite which will load any library named “hex.dll” that is next to the executable.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png)", "label": "Adobe Inc. ( ) is an American multinational computer software company headquartered in San Jose, California. It has historically focused upon the creation of multimedia and creativity software products, with a more recent foray towards digital marketing software. Adobe is best known for its Adobe Flash web software ecosystem, Photoshop image editing software, Acrobat Reader, the Portable Document Format (PDF), and Adobe Creative Suite, as well as its successor Adobe Creative Cloud.  Adobe was founded in December 1982 by John Warnock and Charles Geschke, who established the company after leaving Xerox PARC in order to develop and sell the PostScript page description language. In 1985, Apple Computer licensed PostScript for use in its LaserWriter printers, which helped spark the desktop publishing revolution.  , Adobe has more than 21,000 employees worldwide, about 40% of whom work in San Jose. Adobe also has major development operations in Newton, Massachusetts; New York City, New York; Minneapolis, Minnesota; Lehi, Utah; Seattle, Washington; and San Francisco, California in the United States. It also has major development operations in Noida and Bangalore in India.", "label_id": 738, "label_title": "Adobe Inc.", "label_link": "https://en.wikipedia.org/wiki?curid=1955", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "load any library named “hex.dll” that is next to the executable.", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png) In this case, the legitimate vulnerable binary is part of Adobe’s Swite which will", "context_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png)", "_context_left": "In this case, the legitimate vulnerable binary is part of Adobe’s Swite which will ", "_context_right": "", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png)", "label": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution. There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "label_id": 185, "label_title": "Hijack Execution Flow", "label_link": "https://attack.mitre.org/techniques/T1574", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "legitimate vulnerable binary is part of Adobe’s Swite", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png) In this case, the", "context_right": "which will load any library named “hex.dll” that is next to the executable. ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png)", "_context_left": "In this case, the ", "_context_right": " which will load any library named “hex.dll” that is next to the executable.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-07-14-3.png)", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png)", "label": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility. Several types exist: ### Browser-based Exploitation Web browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed. ### Office Applications Common office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run. ### Common Third-party Applications Other applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash,", "label_id": 549, "label_title": "Exploitation for Client Execution", "label_link": "https://attack.mitre.org/techniques/T1203", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "lab52", "context_left": "In this case, the legitimate vulnerable binary is part of Adobe’s Swite which will load any library named “hex.dll” that is next to the executable. ![](https://", "context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png) That hex.dll, in this case is a very simple and relatively small loader:", "_context_left": "![](https://", "_context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-21-53-2.png)", "sentence_left": "In this case, the legitimate vulnerable binary is part of Adobe’s Swite which will load any library named “hex.dll” that is next to the executable.", "sentence_right": "That hex.dll, in this case is a very simple and relatively small loader:", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "lab52", "context_left": "That hex.dll, in this case is a very simple and relatively small loader: ![](https://", "context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-11-06-2.png) It has 4 exports that return 0 without doing anything, the Main function of the library, on the other hand, calls a function that checks the existence of the .dat file which is hardcoded (adobeupdate.dat in this case), loads it, extracts the first string of the binary and uses it as XOR key to decode the rest of the file, which consists on the final threat.", "_context_left": "![](https://", "_context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-11-06-2.png)", "sentence_left": "That hex.dll, in this case is a very simple and relatively small loader:", "sentence_right": "It has 4 exports that return 0 without doing anything, the Main function of the library, on the other hand, calls a function that checks the existence of the .dat file which is hardcoded (adobeupdate.dat in this case), loads it, extracts the first string of the binary and uses it as XOR key to decode the rest of the file, which consists on the final threat.", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "function that checks the existence of the .dat file", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-11-06-2.png) It has 4 exports that return 0 without doing anything, the Main function of the library, on the other hand, calls a", "context_right": "which is hardcoded (adobeupdate.dat in this case), loads it, extracts the first string of the binary and uses it as XOR key to decode the rest of the file, which consists on the final threat. The [following code](https://raw.githubusercontent.com/Bondey/PlugxScripts/master/PlugDecoder.py) in python imitates the logic of decoding:", "_context_left": "It has 4 exports that return 0 without doing anything, the Main function of the library, on the other hand, calls a ", "_context_right": " which is hardcoded (adobeupdate.dat in this case), loads it, extracts the first string of the binary and uses it as XOR key to decode the rest of the file, which consists on the final threat.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-11-06-2.png)", "sentence_right": "The [following code](https://raw.githubusercontent.com/Bondey/PlugxScripts/master/PlugDecoder.py) in python imitates the logic of decoding:", "label": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).", "label_id": 75, "label_title": "File and Directory Discovery", "label_link": "https://attack.mitre.org/techniques/T1083", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "extracts the first string of the binary and uses it as XOR key to decode the rest of the file", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-11-06-2.png) It has 4 exports that return 0 without doing anything, the Main function of the library, on the other hand, calls a function that checks the existence of the .dat file which is hardcoded (adobeupdate.dat in this case), loads it,", "context_right": ", which consists on the final threat. The [following code](https://raw.githubusercontent.com/Bondey/PlugxScripts/master/PlugDecoder.py) in python imitates the logic of decoding:", "_context_left": "It has 4 exports that return 0 without doing anything, the Main function of the library, on the other hand, calls a function that checks the existence of the .dat file which is hardcoded (adobeupdate.dat in this case), loads it, ", "_context_right": ", which consists on the final threat.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-11-06-2.png)", "sentence_right": "The [following code](https://raw.githubusercontent.com/Bondey/PlugxScripts/master/PlugDecoder.py) in python imitates the logic of decoding:", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "lab52", "context_left": "The [following code](https://raw.githubusercontent.com/Bondey/PlugxScripts/master/PlugDecoder.py) in python imitates the logic of decoding: ![](https://", "context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-27-10-2.png) When it finishes deciphering it, it loads the malware into memory, makes a “Memprotect” to make it executable and launches its logic from the byte 0 of the binary.", "_context_left": "![](https://", "_context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-27-10-2.png)", "sentence_left": "The [following code](https://raw.githubusercontent.com/Bondey/PlugxScripts/master/PlugDecoder.py) in python imitates the logic of decoding:", "sentence_right": "When it finishes deciphering it, it loads the malware into memory, makes a “Memprotect” to make it executable and launches its logic from the byte 0 of the binary.", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "finishes deciphering it,", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-27-10-2.png) When it", "context_right": "it loads the malware into memory, makes a “Memprotect” to make it executable and launches its logic from the byte 0 of the binary. It is a functional PE, so this should not work, since it starts with the “MZ” header of a normal binary:", "_context_left": "When it ", "_context_right": " it loads the malware into memory, makes a “Memprotect” to make it executable and launches its logic from the byte 0 of the binary.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-27-10-2.png)", "sentence_right": "It is a functional PE, so this should not work, since it starts with the “MZ” header of a normal binary:", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "It is a functional PE", "context_left": "When it finishes deciphering it, it loads the malware into memory, makes a “Memprotect” to make it executable and launches its logic from the byte 0 of the binary.", "context_right": ", so this should not work, since it starts with the “MZ” header of a normal binary: ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png)", "_context_left": "", "_context_right": ", so this should not work, since it starts with the “MZ” header of a normal binary:", "sentence_left": "When it finishes deciphering it, it loads the malware into memory, makes a “Memprotect” to make it executable and launches its logic from the byte 0 of the binary.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png)", "label": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.", "label_id": 318, "label_title": "Process Injection", "label_link": "https://attack.mitre.org/techniques/T1055", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "lab52", "context_left": "It is a functional PE, so this should not work, since it starts with the “MZ” header of a normal binary: ![](https://", "context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png) But in this case it uses a technique already seen before in tools like the Cobalt Strike Beacon that by modifying some bytes of the MZ header, it becomes meaningful executable code.", "_context_left": "![](https://", "_context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png)", "sentence_left": "It is a functional PE, so this should not work, since it starts with the “MZ” header of a normal binary:", "sentence_right": "But in this case it uses a technique already seen before in tools like the Cobalt Strike Beacon that by modifying some bytes of the MZ header, it becomes meaningful executable code.", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Cobalt Strike", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png) But in this case it uses a technique already seen before in tools like the", "context_right": "Beacon that by modifying some bytes of the MZ header, it becomes meaningful executable code. If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader:", "_context_left": "But in this case it uses a technique already seen before in tools like the ", "_context_right": " Beacon that by modifying some bytes of the MZ header, it becomes meaningful executable code.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png)", "sentence_right": "If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader:", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Beacon", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png) But in this case it uses a technique already seen before in tools like the Cobalt Strike", "context_right": "that by modifying some bytes of the MZ header, it becomes meaningful executable code. If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader:", "_context_left": "But in this case it uses a technique already seen before in tools like the Cobalt Strike ", "_context_right": " that by modifying some bytes of the MZ header, it becomes meaningful executable code.", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png)", "sentence_right": "If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader:", "label": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual) In addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)", "label_id": 1049, "label_title": "Cobalt Strike", "label_link": "https://attack.mitre.org/software/S0154", "entity_class": "CE", "entity_type": "MALWARE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "by modifying some bytes of the MZ header, it becomes meaningful executable code.", "context_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png) But in this case it uses a technique already seen before in tools like the Cobalt Strike Beacon that", "context_right": "If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader:", "_context_left": "But in this case it uses a technique already seen before in tools like the Cobalt Strike Beacon that ", "_context_right": "", "sentence_left": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-29-56-2.png)", "sentence_right": "If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader:", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "consisting of a PE loader", "context_left": "But in this case it uses a technique already seen before in tools like the Cobalt Strike Beacon that by modifying some bytes of the MZ header, it becomes meaningful executable code. If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone,", "context_right": ": ![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-32-07-2.png)", "_context_left": "If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, ", "_context_right": ":", "sentence_left": "But in this case it uses a technique already seen before in tools like the Cobalt Strike Beacon that by modifying some bytes of the MZ header, it becomes meaningful executable code.", "sentence_right": "![](https://lab52.io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-32-07-2.png)", "label": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.", "label_id": 318, "label_title": "Process Injection", "label_link": "https://attack.mitre.org/techniques/T1055", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "lab52", "context_left": "If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader: ![](https://", "context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-32-07-2.png) After loading the IAT and leaving everything ready as a normal executable, this threat decrypts its own config, which is encrypted in XOR in the .data section of the binary.", "_context_left": "![](https://", "_context_right": ".io/blog/wp-content/uploads/2019/08/Captura-de-pantalla-de-2020-05-19-17-32-07-2.png)", "sentence_left": "If we open the binary as a shellcode (de-compiling from byte 0) we see how they have modified the first bytes into a routine that jumps to a code zone, consisting of a PE loader:", "sentence_right": "After loading the IAT and leaving everything ready as a normal executable, this threat decrypts its own config, which is encrypted in XOR in the .data section of the binary.", "label": "A company, abbreviated as co., is a legal entity made up of an association of people, be they natural, legal, or a mixture of both, for carrying on a commercial or industrial enterprise. Company members share a common purpose, and unite to focus their various talents and organize their collectively available skills or resources to achieve specific, declared goals. Companies take various forms, such as:   A company or association of persons can be created at law as a legal person so that the company in itself can accept limited liability for civil responsibility and taxation incurred as members perform (or fail to discharge) their duty within the publicly declared \"\"birth certificate\"\" or published policy.  Companies as legal persons may associate and register themselves collectively as other companies – often known as a corporate group. When a company closes, it may need a \"\"death certificate\"\" to avoid further legal obligations.", "label_id": 986634, "label_title": "Company", "label_link": "https://en.wikipedia.org/wiki?curid=4918223", "entity_class": "NE", "entity_type": "ORG", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "decrypting its configuration, it contains the folder where the binary must be installed", "context_left": "This time the decryption key is hardcoded in the binary, and is the string “123456789”. After", "context_right": ", a XOR key that will use to encrypt it’s traffic and a list of up to 4 domains or IP addresses of command and control servers together with the port to be used. Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "_context_left": "After ", "_context_right": ", a XOR key that will use to encrypt it’s traffic and a list of up to 4 domains or IP addresses of command and control servers together with the port to be used.", "sentence_left": "This time the decryption key is hardcoded in the binary, and is the string “123456789”.", "sentence_right": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "XOR key that will use to encrypt it’s traffic and a list of up to 4 domains or IP addresses of command and control servers together with the port to be used.", "context_left": "This time the decryption key is hardcoded in the binary, and is the string “123456789”. After decrypting its configuration, it contains the folder where the binary must be installed, a", "context_right": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "_context_left": "After decrypting its configuration, it contains the folder where the binary must be installed, a ", "_context_right": "", "sentence_left": "This time the decryption key is hardcoded in the binary, and is the string “123456789”.", "sentence_right": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "label": "Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols.", "label_id": 415, "label_title": "Data Obfuscation", "label_link": "https://attack.mitre.org/techniques/T1001", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "C2", "context_left": "After decrypting its configuration, it contains the folder where the binary must be installed, a XOR key that will use to encrypt it’s traffic and a list of up to 4 domains or IP addresses of command and control servers together with the port to be used. Generally the 4", "context_right": "elements consists of the same domain repeated 4 times or 2 domains repeated twice each. After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html).", "_context_left": "Generally the 4 ", "_context_right": " elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "sentence_left": "After decrypting its configuration, it contains the folder where the binary must be installed, a XOR key that will use to encrypt it’s traffic and a list of up to 4 domains or IP addresses of command and control servers together with the port to be used.", "sentence_right": "After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html).", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "Mustang Panda", "context_left": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each. After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “", "context_right": "” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html). In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "_context_left": "After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “", "_context_right": "” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html).", "sentence_left": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "sentence_right": "In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "label": "[Mustang Panda](https://attack.mitre.org/groups/G0129) is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. [Mustang Panda](https://attack.mitre.org/groups/G0129) has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Germany, Mongolia, Myanmar, Pakistan, and Vietnam, among others.(Citation: Crowdstrike MUSTANG PANDA June 2018)(Citation: Anomali MUSTANG PANDA October 2019)(Citation: Secureworks BRONZE PRESIDENT December 2019)", "label_id": 1139, "label_title": "Mustang Panda", "label_link": "https://attack.mitre.org/groups/G0129", "entity_class": "CE", "entity_type": "GROUP", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "loader in DLL format", "context_left": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each. After the analysis, both the", "context_right": "and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html). In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "_context_left": "After the analysis, both the ", "_context_right": " and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html).", "sentence_left": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "sentence_right": "In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "label": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution. There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "label_id": 185, "label_title": "Hijack Execution Flow", "label_link": "https://attack.mitre.org/techniques/T1574", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "dll sideload technique", "context_left": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each. After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this", "context_right": ", and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html). In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "_context_left": "After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this ", "_context_right": ", and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html).", "sentence_left": "Generally the 4 C2 elements consists of the same domain repeated 4 times or 2 domains repeated twice each.", "sentence_right": "In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "label": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution. There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "label_id": 185, "label_title": "Hijack Execution Flow", "label_link": "https://attack.mitre.org/techniques/T1574", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "final threat uses exactly the same XOR key to decipher its configuration", "context_left": "After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html). In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the", "context_right": "as the samples in those reports, so there is a high probability that it is a new campaign from this same group. This particular sample has the domains “www.destroy2013.]com” and “www.fitehook.]com” as c2 servers, and we have seen that they have a very characteristic behavior, since most of the day they resolve to 127.0.0.1, but from 1-3 AM (UTC) to 8-9 AM (UTC) it resolves to the IP “107.150.112.]250, except for weekends that it resolves constantly to 127.0.0.1, which could indicate that it is a campaign that is focused on a time zone in which those hours are working hours.", "_context_left": "In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the ", "_context_right": " as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "sentence_left": "After the analysis, both the loader in DLL format and the final encrypted threat (after decryption) have been compared with different campaign samples of groups known to use this dll sideload technique, and it has been possible to verify how both the loader and the final threat coincide in a high percentage with the samples of the “Mustang Panda” group analyzed in the following reports [[1]](https://www.anomali.com/blog/covid-19-themes-are-being-utilized-by-threat-actors-of-varying-sophistication) [[2]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc.html) [[3]](https://blog.vincss.net/2020/03/re012-phan-tich-ma-doc-loi-dung-dich-COVID-19-de-phat-tan-gia-mao-chi-thi-cua-thu-tuong-Nguyen-Xuan-Phuc-phan2.html).", "sentence_right": "This particular sample has the domains “www.destroy2013.]com” and “www.fitehook.]com” as c2 servers, and we have seen that they have a very characteristic behavior, since most of the day they resolve to 127.0.0.1, but from 1-3 AM (UTC) to 8-9 AM (UTC) it resolves to the IP “107.150.112.]250, except for weekends that it resolves constantly to 127.0.0.1, which could indicate that it is a campaign that is focused on a time zone in which those hours are working hours.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}
{"mention": "sample has the domains “www.destroy2013.]com” and “www.fitehook.]com” as c2 servers", "context_left": "In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group. This particular", "context_right": ", and we have seen that they have a very characteristic behavior, since most of the day they resolve to 127.0.0.1, but from 1-3 AM (UTC) to 8-9 AM (UTC) it resolves to the IP “107.150.112.]250, except for weekends that it resolves constantly to 127.0.0.1, which could indicate that it is a campaign that is focused on a time zone in which those hours are working hours. | IP | 81.16.28.]30 |", "_context_left": "This particular ", "_context_right": ", and we have seen that they have a very characteristic behavior, since most of the day they resolve to 127.0.0.1, but from 1-3 AM (UTC) to 8-9 AM (UTC) it resolves to the IP “107.150.112.]250, except for weekends that it resolves constantly to 127.0.0.1, which could indicate that it is a campaign that is focused on a time zone in which those hours are working hours.", "sentence_left": "In fact, the loader of this campaign is able to load and run the samples of the campaigns analyzed in those reports, and the final threat uses exactly the same XOR key to decipher its configuration as the samples in those reports, so there is a high probability that it is a new campaign from this same group.", "sentence_right": "| IP | 81.16.28.]30 |", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "lab52_2020-06-02_mustang-panda-recent-activity-dll"}