{"mention": "M00nD3V", "context_left": "Deep Dive Into the", "context_right": "Logger July 10, 2020", "_context_left": "Deep Dive Into the ", "_context_right": " Logger", "sentence_left": "", "sentence_right": "July 10, 2020", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "July 10, 2020 ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**", "context_right": "Logger''** that is being dropped by a multistage loader. Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums.", "_context_left": "ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**", "_context_right": " Logger''** that is being dropped by a multistage loader.", "sentence_left": "July 10, 2020", "sentence_right": "Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**M00nD3V Logger''** that is being dropped by a multistage loader. Due to its multiple stealing features, **", "context_right": "Logger** has gradually gained popularity on hacking forums. Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "_context_left": "Due to its multiple stealing features, **", "_context_right": " Logger** has gradually gained popularity on hacking forums.", "sentence_left": "ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**M00nD3V Logger''** that is being dropped by a multistage loader.", "sentence_right": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "stealing features", "context_left": "ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**M00nD3V Logger''** that is being dropped by a multistage loader. Due to its multiple", "context_right": ", **M00nD3V Logger** has gradually gained popularity on hacking forums. Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "_context_left": "Due to its multiple ", "_context_right": ", **M00nD3V Logger** has gradually gained popularity on hacking forums.", "sentence_left": "ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**M00nD3V Logger''** that is being dropped by a multistage loader.", "sentence_right": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "label": "The adversary is trying to steal data. Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.", "label_id": 583, "label_title": "Exfiltration", "label_link": "https://attack.mitre.org/tactics/TA0010", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums. Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of", "context_right": "with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "_context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of ", "_context_right": " with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_left": "Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums.", "sentence_right": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "HawkEye", "context_left": "Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums. Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the", "context_right": "stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "_context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the ", "_context_right": " stealer, along with information about the bad actor selling M00nD3V.", "sentence_left": "Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums.", "sentence_right": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "label": "HawkEye", "label_id": 1330, "label_title": "HawkEye", "label_link": "http://www.bosch.com#node1fvup9pj1x8", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums. Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling", "context_right": ". Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "_context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling ", "_context_right": ".", "sentence_left": "Due to its multiple stealing features, **M00nD3V Logger** has gradually gained popularity on hacking forums.", "sentence_right": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "capture Windows Keystrokes", "context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and", "context_right": ", as well as gain access to the webcam and hook the clipboard. In all, it has the ability to steal passwords from 42 applications.", "_context_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and ", "_context_right": ", as well as gain access to the webcam and hook the clipboard.", "sentence_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_right": "In all, it has the ability to steal passwords from 42 applications.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "keystroke logging", "context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from", "context_right": ", the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard. In all, it has the ability to steal passwords from 42 applications.", "_context_left": "Aside from ", "_context_right": ", the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "sentence_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_right": "In all, it has the ability to steal passwords from 42 applications.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "steal confidential information", "context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to", "context_right": "such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard. In all, it has the ability to steal passwords from 42 applications.", "_context_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to ", "_context_right": " such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "sentence_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_right": "In all, it has the ability to steal passwords from 42 applications.", "label": "The adversary is trying to gather data of interest to their goal. Collection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "label_id": 589, "label_title": "Collection", "label_link": "https://attack.mitre.org/tactics/TA0009", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "browser passwords", "context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as", "context_right": ", FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard. In all, it has the ability to steal passwords from 42 applications.", "_context_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as ", "_context_right": ", FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "sentence_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_right": "In all, it has the ability to steal passwords from 42 applications.", "label": "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.", "label_id": 18, "label_title": "Credentials from Password Stores", "label_link": "https://attack.mitre.org/techniques/T1555", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials", "context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords,", "context_right": "and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard. In all, it has the ability to steal passwords from 42 applications.", "_context_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, ", "_context_right": " and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "sentence_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_right": "In all, it has the ability to steal passwords from 42 applications.", "label": "The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "label_id": 585, "label_title": "Credential Access", "label_link": "https://attack.mitre.org/tactics/TA0006", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "access to the webcam", "context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain", "context_right": "and hook the clipboard. In all, it has the ability to steal passwords from 42 applications.", "_context_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain ", "_context_right": " and hook the clipboard.", "sentence_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_right": "In all, it has the ability to steal passwords from 42 applications.", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "hook the clipboard", "context_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V. Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and", "context_right": ". In all, it has the ability to steal passwords from 42 applications.", "_context_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and ", "_context_right": ".", "sentence_left": "Recently [Blueliv](https://www.blueliv.com/cyber-security-and-cyber-threat-intelligence-blog-blueliv/covid-19-cybercrime-m00nd3v-hawkeye-malware-threat-actor/) published a blog discussing the relationship of M00nD3V with the HawkEye stealer, along with information about the bad actor selling M00nD3V.", "sentence_right": "In all, it has the ability to steal passwords from 42 applications.", "label": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. In Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)", "label_id": 346, "label_title": "Clipboard Data", "label_link": "https://attack.mitre.org/techniques/T1115", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "ability to steal passwords from 42 applications.", "context_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard. In all, it has the", "context_right": "M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package.", "_context_left": "In all, it has the ", "_context_right": "", "sentence_left": "Aside from keystroke logging, the M00nD3VLoggerhas the ability to steal confidential information such as browser passwords, FTP client passwords, email client passwords, DynDNS credentials, JDownloader credentials and capture Windows Keystrokes, as well as gain access to the webcam and hook the clipboard.", "sentence_right": "M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package.", "label": "The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "label_id": 585, "label_title": "Credential Access", "label_link": "https://attack.mitre.org/tactics/TA0006", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3VLogger", "context_left": "In all, it has the ability to steal passwords from 42 applications.", "context_right": "is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package. These mechanisms makes this logger unique and popular on hacking forums.", "_context_left": "", "_context_right": " is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package.", "sentence_left": "In all, it has the ability to steal passwords from 42 applications.", "sentence_right": "These mechanisms makes this logger unique and popular on hacking forums.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "antivirus killer", "context_left": "In all, it has the ability to steal passwords from 42 applications. M00nD3VLogger is also equipped with other major functionality, including a botkiller, an", "context_right": ", communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package. These mechanisms makes this logger unique and popular on hacking forums.", "_context_left": "M00nD3VLogger is also equipped with other major functionality, including a botkiller, an ", "_context_right": ", communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package.", "sentence_left": "In all, it has the ability to steal passwords from 42 applications.", "sentence_right": "These mechanisms makes this logger unique and popular on hacking forums.", "label": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.", "label_id": 147, "label_title": "Impair Defenses", "label_link": "https://attack.mitre.org/techniques/T1562", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "communicating over SMTP/FTP", "context_left": "In all, it has the ability to steal passwords from 42 applications. M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer,", "context_right": "/proxy, downloading additional plugins, and the BouncyCastle crypto package. These mechanisms makes this logger unique and popular on hacking forums.", "_context_left": "M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer, ", "_context_right": "/proxy, downloading additional plugins, and the BouncyCastle crypto package.", "sentence_left": "In all, it has the ability to steal passwords from 42 applications.", "sentence_right": "These mechanisms makes this logger unique and popular on hacking forums.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "downloading additional plugins", "context_left": "In all, it has the ability to steal passwords from 42 applications. M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy,", "context_right": ", and the BouncyCastle crypto package. These mechanisms makes this logger unique and popular on hacking forums.", "_context_left": "M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy, ", "_context_right": ", and the BouncyCastle crypto package.", "sentence_left": "In all, it has the ability to steal passwords from 42 applications.", "sentence_right": "These mechanisms makes this logger unique and popular on hacking forums.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "**Delivery mechanism** During our research, we found", "context_right": "was delivered via spam mail or through a compromised website that drops a payload on the victim's machine. One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "_context_left": "During our research, we found ", "_context_right": " was delivered via spam mail or through a compromised website that drops a payload on the victim's machine.", "sentence_left": "**Delivery mechanism**", "sentence_right": "One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "payload", "context_left": "**Delivery mechanism** During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a", "context_right": "on the victim's machine. One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "_context_left": "During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a ", "_context_right": " on the victim's machine.", "sentence_left": "**Delivery mechanism**", "sentence_right": "One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "label": "Payload is the carrying capacity of an aircraft or launch vehicle, usually measured in terms of weight. Depending on the nature of the flight or mission, the payload of a vehicle may include cargo, passengers, flight crew, munitions, scientific instruments or experiments, or other equipment. Extra fuel, when optionally carried, is also considered part of the payload. In a commercial context (i.e., an airline or air freight carrier), payload may refer only to revenue-generating cargo or paying passengers.  For a rocket, the payload can be a satellite, space probe, or spacecraft carrying humans, animals, or cargo. For a ballistic missile, the payload is one or more warheads and related systems; the total weight of these systems is referred to as the throw-weight.  The fraction of payload to the total liftoff weight of the air or spacecraft is known as the \"payload fraction\". When the weight of the payload and fuel are considered together, it is known as the \"useful load fraction\". In spacecraft, \"mass fraction\" is normally used, which is the ratio of payload to everything else, including the rocket structure.", "label_id": 21301, "label_title": "Payload", "label_link": "https://en.wikipedia.org/wiki?curid=41495", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "delivered via spam mail or through a compromised website that drops a payload on the victim's machine.", "context_left": "**Delivery mechanism** During our research, we found M00nD3V was", "context_right": "One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "_context_left": "During our research, we found M00nD3V was ", "_context_right": "", "sentence_left": "**Delivery mechanism**", "sentence_right": "One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "label": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Multiple ways of delivering exploit code to a browser exist, including: * A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting. * Malicious ads are paid for and served through legitimate ad providers. * Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content). Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise) Typical drive-by compromise process: 1. A user visits a website that is used to host the adversary controlled content. 2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. * The user may be required to assist in this process by enabling scripting", "label_id": 15, "label_title": "Drive-by Compromise", "label_link": "https://attack.mitre.org/techniques/T1189", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Hyundai Heavy Industries Co., Ltd", "context_left": "During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a payload on the victim's machine. One such spam mail claims to be from \"", "context_right": "\" regarding a bid on a project for Qatargas. The spam mail includes zip attachments that contain malicious executables.", "_context_left": "One such spam mail claims to be from \"", "_context_right": "\" regarding a bid on a project for Qatargas.", "sentence_left": "During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a payload on the victim's machine.", "sentence_right": "The spam mail includes zip attachments that contain malicious executables.", "label": "Hyundai Heavy Industries Co., Ltd. (or HHI) is the world's largest shipbuilding company. Its headquarters are in Ulsan, South Korea. HHI was founded in 1972 by Chung Ju-yung as a division of the Hyundai Group, and in 1974, completed building its first ships. In 2002, the company was spun-off from its parent company. HHI has four core business divisions: Shipbuilding, Offshore & Engineering, Industrial Plant & Engineering, and Engine & Machinery. HHI also has five non-core related subsidiaries: Hyundai Electric & Energy Systems, Hyundai Construction Equipment, Hyundai Robotics, Hyundai Heavy Industries Green Energy, and Hyundai Global Service.  The Hyundai Group started as a small South Korean construction firm in 1947, headed by its founder, Korean entrepreneur Chung Ju-Yung. Another widely known and closely related Korean company, the Hyundai Motor Company, was founded in 1967, five years prior to the founding of the Heavy Industry Group. The motor company was also founded by Chung.  The name is an informal romanisation of the Korean (\"hyeondae\") meaning \"contemporary\", which was Chung's vision for the group of companies that he founded.", "label_id": 188640, "label_title": "Hyundai Heavy Industries", "label_link": "https://en.wikipedia.org/wiki?curid=454249", "entity_class": "NE", "entity_type": "ORG", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "spam mail", "context_left": "During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a payload on the victim's machine. One such", "context_right": "claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas. The spam mail includes zip attachments that contain malicious executables.", "_context_left": "One such ", "_context_right": " claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "sentence_left": "During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a payload on the victim's machine.", "sentence_right": "The spam mail includes zip attachments that contain malicious executables.", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "spam mail includes zip attachments that contain malicious executables.", "context_left": "One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas. The", "context_right": "![spam](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/spam_mail.JPG)", "_context_left": "The ", "_context_right": "", "sentence_left": "One such spam mail claims to be from \"Hyundai Heavy Industries Co., Ltd\" regarding a bid on a project for Qatargas.", "sentence_right": "![spam](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/spam_mail.JPG)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Spam Mail", "context_left": "![spam](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/spam_mail.JPG) *Figure 2:", "context_right": "* ![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Package%20detail.JPG)", "_context_left": "*Figure 2: ", "_context_right": "*", "sentence_left": "![spam](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/spam_mail.JPG)", "sentence_right": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Package%20detail.JPG)", "label": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source.", "label_id": 161, "label_title": "Phishing", "label_link": "https://attack.mitre.org/techniques/T1566", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/payment_method.JPG) *Figure 3:", "context_right": "Logger subscription and payment method pages.* In this blog, we will provide a detailed technical analysis of commercial M00nD3V Logger malware.", "_context_left": "*Figure 3: ", "_context_right": " Logger subscription and payment method pages.*", "sentence_left": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/payment_method.JPG)", "sentence_right": "In this blog, we will provide a detailed technical analysis of commercial M00nD3V Logger malware.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "*Figure 3: M00nD3V Logger subscription and payment method pages.* In this blog, we will provide a detailed technical analysis of commercial", "context_right": "Logger malware. **Technical analysis**", "_context_left": "In this blog, we will provide a detailed technical analysis of commercial ", "_context_right": " Logger malware.", "sentence_left": "*Figure 3: M00nD3V Logger subscription and payment method pages.*", "sentence_right": "**Technical analysis**", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 3: M00nD3V Logger subscription and payment method pages.* In this blog, we will provide a detailed technical analysis of commercial M00nD3V Logger", "context_right": ". **Technical analysis**", "_context_left": "In this blog, we will provide a detailed technical analysis of commercial M00nD3V Logger ", "_context_right": ".", "sentence_left": "*Figure 3: M00nD3V Logger subscription and payment method pages.*", "sentence_right": "**Technical analysis**", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "- bf8801bcd5a196744ccd0f863f84df71 - Final Payload (.Net) Delivering", "context_right": "without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder. Here, the M00nD3V malware does one such trick to deliver its payload without getting easily noticed.", "_context_left": "Delivering ", "_context_right": " without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder.", "sentence_left": "- bf8801bcd5a196744ccd0f863f84df71 - Final Payload (.Net)", "sentence_right": "Here, the M00nD3V malware does one such trick to deliver its payload without getting easily noticed.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "while blending into an existing benign Windows process makes detection a bit harder", "context_left": "- bf8801bcd5a196744ccd0f863f84df71 - Final Payload (.Net) Delivering malware without triggering any suspicious activity", "context_right": ". Here, the M00nD3V malware does one such trick to deliver its payload without getting easily noticed.", "_context_left": "Delivering malware without triggering any suspicious activity ", "_context_right": ".", "sentence_left": "- bf8801bcd5a196744ccd0f863f84df71 - Final Payload (.Net)", "sentence_right": "Here, the M00nD3V malware does one such trick to deliver its payload without getting easily noticed.", "label": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.", "label_id": 318, "label_title": "Process Injection", "label_link": "https://attack.mitre.org/techniques/T1055", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder. Here, the", "context_right": "malware does one such trick to deliver its payload without getting easily noticed. ![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "_context_left": "Here, the ", "_context_right": " malware does one such trick to deliver its payload without getting easily noticed.", "sentence_left": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder.", "sentence_right": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder. Here, the M00nD3V", "context_right": "does one such trick to deliver its payload without getting easily noticed. ![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "_context_left": "Here, the M00nD3V ", "_context_right": " does one such trick to deliver its payload without getting easily noticed.", "sentence_left": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder.", "sentence_right": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "payload", "context_left": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder. Here, the M00nD3V malware does one such trick to deliver its", "context_right": "without getting easily noticed. ![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "_context_left": "Here, the M00nD3V malware does one such trick to deliver its ", "_context_right": " without getting easily noticed.", "sentence_left": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder.", "sentence_right": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "label": "Payload is the carrying capacity of an aircraft or launch vehicle, usually measured in terms of weight. Depending on the nature of the flight or mission, the payload of a vehicle may include cargo, passengers, flight crew, munitions, scientific instruments or experiments, or other equipment. Extra fuel, when optionally carried, is also considered part of the payload. In a commercial context (i.e., an airline or air freight carrier), payload may refer only to revenue-generating cargo or paying passengers.  For a rocket, the payload can be a satellite, space probe, or spacecraft carrying humans, animals, or cargo. For a ballistic missile, the payload is one or more warheads and related systems; the total weight of these systems is referred to as the throw-weight.  The fraction of payload to the total liftoff weight of the air or spacecraft is known as the \"payload fraction\". When the weight of the payload and fuel are considered together, it is known as the \"useful load fraction\". In spacecraft, \"mass fraction\" is normally used, which is the ratio of payload to everything else, including the rocket structure.", "label_id": 21301, "label_title": "Payload", "label_link": "https://en.wikipedia.org/wiki?curid=41495", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Microsoft", "context_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG) *Figure 4: The M00nD3V malware register running with RegAsm.exe* - *", "context_right": "utility.* Figure 4 shows the post execution of the malware.", "_context_left": "*Figure 4: The M00nD3V malware register running with RegAsm.exe* - *", "_context_right": " utility.*", "sentence_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "sentence_right": "Figure 4 shows the post execution of the malware.", "label": "Microsoft Corporation is an American multinational technology company with headquarters in Redmond, Washington. It develops, manufactures, licenses, supports and sells computer software, consumer electronics, personal computers, and related services. Its best known software products are the Microsoft Windows line of operating systems, the Microsoft Office suite, and the Internet Explorer and Edge Web browsers. Its flagship hardware products are the Xbox video game consoles and the Microsoft Surface lineup of touchscreen personal computers. As of 2016, it is the world's largest software maker by revenue, and one of the world's most valuable companies. The word \"Microsoft\" is a portmanteau of \"microcomputer\" and \"software\". Microsoft is ranked No. 30 in the 2018 Fortune 500 rankings of the largest United States corporations by total revenue.  Microsoft was founded by Bill Gates and Paul Allen on April 4, 1975, to develop and sell BASIC interpreters for the Altair 8800. It rose to dominate the personal computer operating system market with MS-DOS in the mid-1980s, followed by Microsoft Windows. The company's 1986 initial public offering (IPO), and subsequent rise in its share price, created three billionaires and an estimated 12,000 millionaires among Microsoft employees. Since the 1990s, it has increasingly diversified from the operating system market and has made a number of corporate acquisitions, their largest being the acquisition of LinkedIn for $26.2 billion in December 2016, followed by their acquisition of Skype Technologies for $8.5 billion in May 2011.  , Microsoft is market-dominant in the IBM PC compatible operating system market and the office software suite", "label_id": 9231, "label_title": "Microsoft", "label_link": "https://en.wikipedia.org/wiki?curid=19001", "entity_class": "NE", "entity_type": "ORG", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG) *Figure 4: The", "context_right": "malware register running with RegAsm.exe* - *Microsoft utility.* Figure 4 shows the post execution of the malware.", "_context_left": "*Figure 4: The ", "_context_right": " malware register running with RegAsm.exe* - *Microsoft utility.*", "sentence_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "sentence_right": "Figure 4 shows the post execution of the malware.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG) *Figure 4: The M00nD3V", "context_right": "register running with RegAsm.exe* - *Microsoft utility.* Figure 4 shows the post execution of the malware.", "_context_left": "*Figure 4: The M00nD3V ", "_context_right": " register running with RegAsm.exe* - *Microsoft utility.*", "sentence_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "sentence_right": "Figure 4 shows the post execution of the malware.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware register running with RegAsm.exe* -", "context_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG) *Figure 4: The M00nD3V", "context_right": "*Microsoft utility.* Figure 4 shows the post execution of the malware.", "_context_left": "*Figure 4: The M00nD3V ", "_context_right": " *Microsoft utility.*", "sentence_left": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "sentence_right": "Figure 4 shows the post execution of the malware.", "label": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files.", "label_id": 385, "label_title": "Signed Binary Proxy Execution", "label_link": "https://attack.mitre.org/techniques/T1218", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 4: The M00nD3V malware register running with RegAsm.exe* - *Microsoft utility.* Figure 4 shows the post execution of the", "context_right": ". In case of a whitelisted application, the endpoint antivirus will not trigger any malicious activity.", "_context_left": "Figure 4 shows the post execution of the ", "_context_right": ".", "sentence_left": "*Figure 4: The M00nD3V malware register running with RegAsm.exe* - *Microsoft utility.*", "sentence_right": "In case of a whitelisted application, the endpoint antivirus will not trigger any malicious activity.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "In case of a whitelisted application, the endpoint antivirus will not trigger any malicious activity. Hence, the", "context_right": "can do its job on the fly without getting caught. The malware also runs by elevating its own privileges.", "_context_left": "Hence, the ", "_context_right": " can do its job on the fly without getting caught.", "sentence_left": "In case of a whitelisted application, the endpoint antivirus will not trigger any malicious activity.", "sentence_right": "The malware also runs by elevating its own privileges.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "Hence, the malware can do its job on the fly without getting caught. The", "context_right": "also runs by elevating its own privileges. **Unpacking routine**", "_context_left": "The ", "_context_right": " also runs by elevating its own privileges.", "sentence_left": "Hence, the malware can do its job on the fly without getting caught.", "sentence_right": "**Unpacking routine**", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "elevating its own privileges.", "context_left": "Hence, the malware can do its job on the fly without getting caught. The malware also runs by", "context_right": "**Unpacking routine**", "_context_left": "The malware also runs by ", "_context_right": "", "sentence_left": "Hence, the malware can do its job on the fly without getting caught.", "sentence_right": "**Unpacking routine**", "label": "The adversary is trying to gain higher-level permissions. Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: * SYSTEM/root level * local administrator * user account with admin-like access * user accounts with access to specific system or perform specific function These techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.", "label_id": 586, "label_title": "Privilege Escalation", "label_link": "https://attack.mitre.org/tactics/TA0004", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "**Unpacking routine** The", "context_right": "unpacks the encrypted payload using multibyte XOR decryption. While unpacking, the malware also uses null bytes in the XOR key.", "_context_left": "The ", "_context_right": " unpacks the encrypted payload using multibyte XOR decryption.", "sentence_left": "**Unpacking routine**", "sentence_right": "While unpacking, the malware also uses null bytes in the XOR key.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "payload", "context_left": "**Unpacking routine** The malware unpacks the encrypted", "context_right": "using multibyte XOR decryption. While unpacking, the malware also uses null bytes in the XOR key.", "_context_left": "The malware unpacks the encrypted ", "_context_right": " using multibyte XOR decryption.", "sentence_left": "**Unpacking routine**", "sentence_right": "While unpacking, the malware also uses null bytes in the XOR key.", "label": "Payload is the carrying capacity of an aircraft or launch vehicle, usually measured in terms of weight. Depending on the nature of the flight or mission, the payload of a vehicle may include cargo, passengers, flight crew, munitions, scientific instruments or experiments, or other equipment. Extra fuel, when optionally carried, is also considered part of the payload. In a commercial context (i.e., an airline or air freight carrier), payload may refer only to revenue-generating cargo or paying passengers.  For a rocket, the payload can be a satellite, space probe, or spacecraft carrying humans, animals, or cargo. For a ballistic missile, the payload is one or more warheads and related systems; the total weight of these systems is referred to as the throw-weight.  The fraction of payload to the total liftoff weight of the air or spacecraft is known as the \"payload fraction\". When the weight of the payload and fuel are considered together, it is known as the \"useful load fraction\". In spacecraft, \"mass fraction\" is normally used, which is the ratio of payload to everything else, including the rocket structure.", "label_id": 21301, "label_title": "Payload", "label_link": "https://en.wikipedia.org/wiki?curid=41495", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware unpacks the encrypted payload using multibyte XOR decryption", "context_left": "**Unpacking routine** The", "context_right": ". While unpacking, the malware also uses null bytes in the XOR key.", "_context_left": "The ", "_context_right": ".", "sentence_left": "**Unpacking routine**", "sentence_right": "While unpacking, the malware also uses null bytes in the XOR key.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "The malware unpacks the encrypted payload using multibyte XOR decryption. While unpacking, the", "context_right": "also uses null bytes in the XOR key. Hence, a few bytes are not actually ciphered.", "_context_left": "While unpacking, the ", "_context_right": " also uses null bytes in the XOR key.", "sentence_left": "The malware unpacks the encrypted payload using multibyte XOR decryption.", "sentence_right": "Hence, a few bytes are not actually ciphered.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "unpacking, the malware also uses null bytes in the XOR key", "context_left": "The malware unpacks the encrypted payload using multibyte XOR decryption. While", "context_right": ". Hence, a few bytes are not actually ciphered.", "_context_left": "While ", "_context_right": ".", "sentence_left": "The malware unpacks the encrypted payload using multibyte XOR decryption.", "sentence_right": "Hence, a few bytes are not actually ciphered.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "decryption using multibyte XOR", "context_left": "![xor](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/xorFirstLayer.JPG) *Figure 5: First-level", "context_right": ".* Even though key length is 24, the malware uses only the first 16 bytes to decrypt the resource section of the encrypted data.", "_context_left": "*Figure 5: First-level ", "_context_right": ".*", "sentence_left": "![xor](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/xorFirstLayer.JPG)", "sentence_right": "Even though key length is 24, the malware uses only the first 16 bytes to decrypt the resource section of the encrypted data.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 5: First-level decryption using multibyte XOR.* Even though key length is 24, the", "context_right": "uses only the first 16 bytes to decrypt the resource section of the encrypted data. The above decryption routine results in a .NET PE file.", "_context_left": "Even though key length is 24, the ", "_context_right": " uses only the first 16 bytes to decrypt the resource section of the encrypted data.", "sentence_left": "*Figure 5: First-level decryption using multibyte XOR.*", "sentence_right": "The above decryption routine results in a .NET PE file.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "uses only the first 16 bytes to decrypt the resource section of the encrypted data.", "context_left": "*Figure 5: First-level decryption using multibyte XOR.* Even though key length is 24, the malware", "context_right": "The above decryption routine results in a .NET PE file.", "_context_left": "Even though key length is 24, the malware ", "_context_right": "", "sentence_left": "*Figure 5: First-level decryption using multibyte XOR.*", "sentence_right": "The above decryption routine results in a .NET PE file.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "decryption routine", "context_left": "Even though key length is 24, the malware uses only the first 16 bytes to decrypt the resource section of the encrypted data. The above", "context_right": "results in a .NET PE file. In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final payload.", "_context_left": "The above ", "_context_right": " results in a .NET PE file.", "sentence_left": "Even though key length is 24, the malware uses only the first 16 bytes to decrypt the resource section of the encrypted data.", "sentence_right": "In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final payload.", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": ".NET", "context_left": "Even though key length is 24, the malware uses only the first 16 bytes to decrypt the resource section of the encrypted data. The above decryption routine results in a", "context_right": "PE file. In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final payload.", "_context_left": "The above decryption routine results in a ", "_context_right": " PE file.", "sentence_left": "Even though key length is 24, the malware uses only the first 16 bytes to decrypt the resource section of the encrypted data.", "sentence_right": "In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final payload.", "label": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005). Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "label_id": 368, "label_title": "Command and Scripting Interpreter", "label_link": "https://attack.mitre.org/techniques/T1059", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "payload", "context_left": "The above decryption routine results in a .NET PE file. In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final", "context_right": ". **Second layer decryption**", "_context_left": "In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final ", "_context_right": ".", "sentence_left": "The above decryption routine results in a .NET PE file.", "sentence_right": "**Second layer decryption**", "label": "Payload is the carrying capacity of an aircraft or launch vehicle, usually measured in terms of weight. Depending on the nature of the flight or mission, the payload of a vehicle may include cargo, passengers, flight crew, munitions, scientific instruments or experiments, or other equipment. Extra fuel, when optionally carried, is also considered part of the payload. In a commercial context (i.e., an airline or air freight carrier), payload may refer only to revenue-generating cargo or paying passengers.  For a rocket, the payload can be a satellite, space probe, or spacecraft carrying humans, animals, or cargo. For a ballistic missile, the payload is one or more warheads and related systems; the total weight of these systems is referred to as the throw-weight.  The fraction of payload to the total liftoff weight of the air or spacecraft is known as the \"payload fraction\". When the weight of the payload and fuel are considered together, it is known as the \"useful load fraction\". In spacecraft, \"mass fraction\" is normally used, which is the ratio of payload to everything else, including the rocket structure.", "label_id": 21301, "label_title": "Payload", "label_link": "https://en.wikipedia.org/wiki?curid=41495", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "XOR routine to decrypt the data", "context_left": "The above decryption routine results in a .NET PE file. In this dumped file, there is also a similar", "context_right": "but with a different key to run the final payload. **Second layer decryption**", "_context_left": "In this dumped file, there is also a similar ", "_context_right": " but with a different key to run the final payload.", "sentence_left": "The above decryption routine results in a .NET PE file.", "sentence_right": "**Second layer decryption**", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "payload", "context_left": "When converted to Unicode string, the same pas variable is: \"*W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s\\x00g\\x00T\\x00U\\x00a\\x00j\\x00*\". We have written a Python script to decrypt the encrypted", "context_right": ", which can be found in Appendix I and Appendix II. **Payload analysis**", "_context_left": "We have written a Python script to decrypt the encrypted ", "_context_right": ", which can be found in Appendix I and Appendix II.", "sentence_left": "When converted to Unicode string, the same pas variable is: \"*W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s\\x00g\\x00T\\x00U\\x00a\\x00j\\x00*\".", "sentence_right": "**Payload analysis**", "label": "Payload is the carrying capacity of an aircraft or launch vehicle, usually measured in terms of weight. Depending on the nature of the flight or mission, the payload of a vehicle may include cargo, passengers, flight crew, munitions, scientific instruments or experiments, or other equipment. Extra fuel, when optionally carried, is also considered part of the payload. In a commercial context (i.e., an airline or air freight carrier), payload may refer only to revenue-generating cargo or paying passengers.  For a rocket, the payload can be a satellite, space probe, or spacecraft carrying humans, animals, or cargo. For a ballistic missile, the payload is one or more warheads and related systems; the total weight of these systems is referred to as the throw-weight.  The fraction of payload to the total liftoff weight of the air or spacecraft is known as the \"payload fraction\". When the weight of the payload and fuel are considered together, it is known as the \"useful load fraction\". In spacecraft, \"mass fraction\" is normally used, which is the ratio of payload to everything else, including the rocket structure.", "label_id": 21301, "label_title": "Payload", "label_link": "https://en.wikipedia.org/wiki?curid=41495", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "initialized with Base64 values", "context_left": "**Payload analysis** StubConfig Class contains the configuration details - some of them are", "context_right": "while others are hardcoded. ![stubcinfig](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stub_config.JPG)", "_context_left": "StubConfig Class contains the configuration details - some of them are ", "_context_right": " while others are hardcoded.", "sentence_left": "**Payload analysis**", "sentence_right": "![stubcinfig](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stub_config.JPG)", "label": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. One such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016) Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)", "label_id": 514, "label_title": "Deobfuscate/Decode Files or Information", "label_link": "https://attack.mitre.org/techniques/T1140", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "*Figure 6: StubConfig details.* Before starting to log user data, the", "context_right": "Logger initializes its configuration. The initialization phase includes several checks, such as an anti-debugger, a bot killer, an antivirus killer, and more.", "_context_left": "Before starting to log user data, the ", "_context_right": " Logger initializes its configuration.", "sentence_left": "*Figure 6: StubConfig details.*", "sentence_right": "The initialization phase includes several checks, such as an anti-debugger, a bot killer, an antivirus killer, and more.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "log user data", "context_left": "*Figure 6: StubConfig details.* Before starting to", "context_right": ", the M00nD3V Logger initializes its configuration. The initialization phase includes several checks, such as an anti-debugger, a bot killer, an antivirus killer, and more.", "_context_left": "Before starting to ", "_context_right": ", the M00nD3V Logger initializes its configuration.", "sentence_left": "*Figure 6: StubConfig details.*", "sentence_right": "The initialization phase includes several checks, such as an anti-debugger, a bot killer, an antivirus killer, and more.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "anti-debugger", "context_left": "Before starting to log user data, the M00nD3V Logger initializes its configuration. The initialization phase includes several checks, such as an", "context_right": ", a bot killer, an antivirus killer, and more. **Figure 7** shows the initialization module.", "_context_left": "The initialization phase includes several checks, such as an ", "_context_right": ", a bot killer, an antivirus killer, and more.", "sentence_left": "Before starting to log user data, the M00nD3V Logger initializes its configuration.", "sentence_right": "**Figure 7** shows the initialization module.", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "antivirus killer", "context_left": "Before starting to log user data, the M00nD3V Logger initializes its configuration. The initialization phase includes several checks, such as an anti-debugger, a bot killer, an", "context_right": ", and more. **Figure 7** shows the initialization module.", "_context_left": "The initialization phase includes several checks, such as an anti-debugger, a bot killer, an ", "_context_right": ", and more.", "sentence_left": "Before starting to log user data, the M00nD3V Logger initializes its configuration.", "sentence_right": "**Figure 7** shows the initialization module.", "label": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.", "label_id": 147, "label_title": "Impair Defenses", "label_link": "https://attack.mitre.org/techniques/T1562", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "DependencyLoader - Downloads the DLL from m00nd3v", "context_left": "Initialization details: *", "context_right": "[.]com/M00nD3v/Decryption/BouncyCastle[.]Crypto.dll and loads it in memory. * ExecutionDelay - Sleeps for 5000 milliseconds before executing.", "_context_left": "* ", "_context_right": "[.]com/M00nD3v/Decryption/BouncyCastle[.]Crypto.dll and loads it in memory.", "sentence_left": "Initialization details:", "sentence_right": "* ExecutionDelay - Sleeps for 5000 milliseconds before executing.", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Persistence", "context_left": "*Figure 8: The decrypt credential.* *", "context_right": "- Copies the parent file to AppData directory and begins the startup entry [SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run]. * Antidebugger - Checks to see if any of the following processes are running: SbieDll.dll, Wireshark, Winsock Packet Editor.", "_context_left": "* ", "_context_right": " - Copies the parent file to AppData directory and begins the startup entry [SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run].", "sentence_left": "*Figure 8: The decrypt credential.*", "sentence_right": "* Antidebugger - Checks to see if any of the following processes are running: SbieDll.dll, Wireshark, Winsock Packet Editor.", "label": "The adversary is trying to maintain their foothold. Persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code.", "label_id": 579, "label_title": "Persistence", "label_link": "https://attack.mitre.org/tactics/TA0003", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Copies the parent file to AppData directory and begins the startup entry", "context_left": "*Figure 8: The decrypt credential.* * Persistence -", "context_right": "[SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run]. * Antidebugger - Checks to see if any of the following processes are running: SbieDll.dll, Wireshark, Winsock Packet Editor.", "_context_left": "* Persistence - ", "_context_right": " [SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run].", "sentence_left": "*Figure 8: The decrypt credential.*", "sentence_right": "* Antidebugger - Checks to see if any of the following processes are running: SbieDll.dll, Wireshark, Winsock Packet Editor.", "label": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely. Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. An adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.", "label_id": 417, "label_title": "Boot or Logon Initialization Scripts", "label_link": "https://attack.mitre.org/techniques/T1037", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Antidebugger - Checks to see if any of the following processes are running: SbieDll.dll, Wireshark, Winsock Packet Editor.", "context_left": "* Persistence - Copies the parent file to AppData directory and begins the startup entry [SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run]. *", "context_right": "If any are found, the malware terminates.", "_context_left": "* ", "_context_right": "", "sentence_left": "* Persistence - Copies the parent file to AppData directory and begins the startup entry [SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run].", "sentence_right": "If any are found, the malware terminates.", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "* Antidebugger - Checks to see if any of the following processes are running: SbieDll.dll, Wireshark, Winsock Packet Editor. If any are found, the", "context_right": "terminates. ![anit](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/antidebugr.JPG)", "_context_left": "If any are found, the ", "_context_right": " terminates.", "sentence_left": "* Antidebugger - Checks to see if any of the following processes are running: SbieDll.dll, Wireshark, Winsock Packet Editor.", "sentence_right": "![anit](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/antidebugr.JPG)", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Antivirus killer", "context_left": "*Figure 9: AntiDebugger checks during the initialization process.* *", "context_right": "- Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10. By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the malware attaches rundll32.exe as debugger to each of the executables.", "_context_left": "* ", "_context_right": " - Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10.", "sentence_left": "*Figure 9: AntiDebugger checks during the initialization process.*", "sentence_right": "By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the malware attaches rundll32.exe as debugger to each of the executables.", "label": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.", "label_id": 147, "label_title": "Impair Defenses", "label_link": "https://attack.mitre.org/techniques/T1562", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10.", "context_left": "*Figure 9: AntiDebugger checks during the initialization process.* * Antivirus killer -", "context_right": "By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the malware attaches rundll32.exe as debugger to each of the executables.", "_context_left": "* Antivirus killer - ", "_context_right": "", "sentence_left": "*Figure 9: AntiDebugger checks during the initialization process.*", "sentence_right": "By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the malware attaches rundll32.exe as debugger to each of the executables.", "label": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.", "label_id": 147, "label_title": "Impair Defenses", "label_link": "https://attack.mitre.org/techniques/T1562", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "* Antivirus killer - Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10. By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the", "context_right": "attaches rundll32.exe as debugger to each of the executables. This way, it disables all the listed applications to run.", "_context_left": "By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the ", "_context_right": " attaches rundll32.exe as debugger to each of the executables.", "sentence_left": "* Antivirus killer - Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10.", "sentence_right": "This way, it disables all the listed applications to run.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the malware attaches rundll32.exe as debugger to each of the executables.", "context_left": "* Antivirus killer - Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10. By", "context_right": "This way, it disables all the listed applications to run.", "_context_left": "By ", "_context_right": "", "sentence_left": "* Antivirus killer - Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10.", "sentence_right": "This way, it disables all the listed applications to run.", "label": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.", "label_id": 147, "label_title": "Impair Defenses", "label_link": "https://attack.mitre.org/techniques/T1562", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "This way, it disables all the listed applications to run.", "context_left": "By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the malware attaches rundll32.exe as debugger to each of the executables.", "context_right": "![avlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/avlist.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "By modifying the registry entry  [Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\], the malware attaches rundll32.exe as debugger to each of the executables.", "sentence_right": "![avlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/avlist.JPG)", "label": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.", "label_id": 147, "label_title": "Impair Defenses", "label_link": "https://attack.mitre.org/techniques/T1562", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 10: Application list* * Process elevation - As shown in Figure 11, the", "context_right": "contains a process elevation module, which is responsible for elevating the privilege of the malware executable. The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "_context_left": "* Process elevation - As shown in Figure 11, the ", "_context_right": " contains a process elevation module, which is responsible for elevating the privilege of the malware executable.", "sentence_left": "*Figure 10: Application list*", "sentence_right": "The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 10: Application list* * Process elevation - As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the", "context_right": "executable. The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "_context_left": "* Process elevation - As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the ", "_context_right": " executable.", "sentence_left": "*Figure 10: Application list*", "sentence_right": "The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Process elevation", "context_left": "*Figure 10: Application list* *", "context_right": "- As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the malware executable. The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "_context_left": "* ", "_context_right": " - As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the malware executable.", "sentence_left": "*Figure 10: Application list*", "sentence_right": "The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "label": "The adversary is trying to gain higher-level permissions. Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: * SYSTEM/root level * local administrator * user account with admin-like access * user accounts with access to specific system or perform specific function These techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.", "label_id": 586, "label_title": "Privilege Escalation", "label_link": "https://attack.mitre.org/tactics/TA0004", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "process elevation module, which is responsible for elevating the privilege of the malware executable", "context_left": "*Figure 10: Application list* * Process elevation - As shown in Figure 11, the malware contains a", "context_right": ". The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "_context_left": "* Process elevation - As shown in Figure 11, the malware contains a ", "_context_right": ".", "sentence_left": "*Figure 10: Application list*", "sentence_right": "The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "label": "The adversary is trying to gain higher-level permissions. Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: * SYSTEM/root level * local administrator * user account with admin-like access * user accounts with access to specific system or perform specific function These techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.", "label_id": 586, "label_title": "Privilege Escalation", "label_link": "https://attack.mitre.org/tactics/TA0004", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "* Process elevation - As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the malware executable. The", "context_right": "sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied. It is applicable to the \"Everyone\" group, so if anyone attempts to kill the process, it won't be allowed to terminate.", "_context_left": "The ", "_context_right": " sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "sentence_left": "* Process elevation - As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the malware executable.", "sentence_right": "It is applicable to the \"Everyone\" group, so if anyone attempts to kill the process, it won't be allowed to terminate.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 12: Malicious checks of the file.* Before starting to log the stored credentials and other personal data, it checks whether the", "context_right": "was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory. If the file is not present, then it creates and writes Rijndael256 encrypted data, which is a combination of the current executable path and the hardcoded StubConfigEncryptionKey, and then shows a fake message box to fool the victim.", "_context_left": "Before starting to log the stored credentials and other personal data, it checks whether the ", "_context_right": " was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory.", "sentence_left": "*Figure 12: Malicious checks of the file.*", "sentence_right": "If the file is not present, then it creates and writes Rijndael256 encrypted data, which is a combination of the current executable path and the hardcoded StubConfigEncryptionKey, and then shows a fake message box to fool the victim.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "log the stored credentials and other personal data", "context_left": "*Figure 12: Malicious checks of the file.* Before starting to", "context_right": ", it checks whether the malware was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory. If the file is not present, then it creates and writes Rijndael256 encrypted data, which is a combination of the current executable path and the hardcoded StubConfigEncryptionKey, and then shows a fake message box to fool the victim.", "_context_left": "Before starting to ", "_context_right": ", it checks whether the malware was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory.", "sentence_left": "*Figure 12: Malicious checks of the file.*", "sentence_right": "If the file is not present, then it creates and writes Rijndael256 encrypted data, which is a combination of the current executable path and the hardcoded StubConfigEncryptionKey, and then shows a fake message box to fool the victim.", "label": "Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Adversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106), which has functionality to interact with the file system to gather information. Some adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.", "label_id": 326, "label_title": "Data from Local System", "label_link": "https://attack.mitre.org/techniques/T1005", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 13: The Rijndael256 key.* The", "context_right": "has three kinds of communication methods to send logged data: SMTP, FTP, and proxy. But this stub is configured to use only and send data over SMTP only.", "_context_left": "The ", "_context_right": " has three kinds of communication methods to send logged data: SMTP, FTP, and proxy.", "sentence_left": "*Figure 13: The Rijndael256 key.*", "sentence_right": "But this stub is configured to use only and send data over SMTP only.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "communication methods to send logged data: SMTP, FTP, and proxy", "context_left": "*Figure 13: The Rijndael256 key.* The malware has three kinds of", "context_right": ". But this stub is configured to use only and send data over SMTP only.", "_context_left": "The malware has three kinds of ", "_context_right": ".", "sentence_left": "*Figure 13: The Rijndael256 key.*", "sentence_right": "But this stub is configured to use only and send data over SMTP only.", "label": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic. Adversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.", "label_id": 159, "label_title": "Proxy", "label_link": "https://attack.mitre.org/techniques/T1090", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "configured to use only and send data over SMTP only.", "context_left": "The malware has three kinds of communication methods to send logged data: SMTP, FTP, and proxy. But this stub is", "context_right": "Before starting any logging functionality, it checks whether the respective logging functionality variable is set in the Stub config entry or not.", "_context_left": "But this stub is ", "_context_right": "", "sentence_left": "The malware has three kinds of communication methods to send logged data: SMTP, FTP, and proxy.", "sentence_right": "Before starting any logging functionality, it checks whether the respective logging functionality variable is set in the Stub config entry or not.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "keystroke functionality", "context_left": "Before starting any logging functionality, it checks whether the respective logging functionality variable is set in the Stub config entry or not. If the value is not set in config, then it won't execute the \"", "context_right": "\". As shown in Figure 14, the Stub is configured to execute the keystroke but not the webcam as the webcam value is not assigned.", "_context_left": "If the value is not set in config, then it won't execute the \"", "_context_right": "\".", "sentence_left": "Before starting any logging functionality, it checks whether the respective logging functionality variable is set in the Stub config entry or not.", "sentence_right": "As shown in Figure 14, the Stub is configured to execute the keystroke but not the webcam as the webcam value is not assigned.", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "execute the keystroke", "context_left": "If the value is not set in config, then it won't execute the \"keystroke functionality\". As shown in Figure 14, the Stub is configured to", "context_right": "but not the webcam as the webcam value is not assigned. ![web_key](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam%2Bkeystroke.JPG)", "_context_left": "As shown in Figure 14, the Stub is configured to ", "_context_right": " but not the webcam as the webcam value is not assigned.", "sentence_left": "If the value is not set in config, then it won't execute the \"keystroke functionality\".", "sentence_right": "![web_key](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam%2Bkeystroke.JPG)", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "core stealing functionality by sending full victim machine information, as shown in Figure 15**,** to the attacker over SMTP port 587", "context_left": "*Figure 14: Stub configuration.* The Stub starts its", "context_right": "![basic_info](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/basic_info_SMTP.JPG)", "_context_left": "The Stub starts its ", "_context_right": "", "sentence_left": "*Figure 14: Stub configuration.*", "sentence_right": "![basic_info](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/basic_info_SMTP.JPG)", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Basic machine information sent to the attacker", "context_left": "![basic_info](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/basic_info_SMTP.JPG) *Figure 15:", "context_right": ".* **Network communication**", "_context_left": "*Figure 15: ", "_context_right": ".*", "sentence_left": "![basic_info](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/basic_info_SMTP.JPG)", "sentence_right": "**Network communication**", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "***Via SMTP*** The", "context_right": "communicates with the attacker over SMTP using port 587. The malware crafts an email with the captured details shown in Figure 16 and sends it to the attacker.", "_context_left": "The ", "_context_right": " communicates with the attacker over SMTP using port 587.", "sentence_left": "***Via SMTP***", "sentence_right": "The malware crafts an email with the captured details shown in Figure 16 and sends it to the attacker.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware communicates with the attacker over SMTP using port 587.", "context_left": "***Via SMTP*** The", "context_right": "The malware crafts an email with the captured details shown in Figure 16 and sends it to the attacker.", "_context_left": "The ", "_context_right": "", "sentence_left": "***Via SMTP***", "sentence_right": "The malware crafts an email with the captured details shown in Figure 16 and sends it to the attacker.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "The malware communicates with the attacker over SMTP using port 587. The", "context_right": "crafts an email with the captured details shown in Figure 16 and sends it to the attacker. The attackers use \"**smtp.privateemail.com\"** service to transfer the captured data.", "_context_left": "The ", "_context_right": " crafts an email with the captured details shown in Figure 16 and sends it to the attacker.", "sentence_left": "The malware communicates with the attacker over SMTP using port 587.", "sentence_right": "The attackers use \"**smtp.privateemail.com\"** service to transfer the captured data.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware crafts an email with the captured details shown in Figure 16 and sends it to the attacker", "context_left": "The malware communicates with the attacker over SMTP using port 587. The", "context_right": ". The attackers use \"**smtp.privateemail.com\"** service to transfer the captured data.", "_context_left": "The ", "_context_right": ".", "sentence_left": "The malware communicates with the attacker over SMTP using port 587.", "sentence_right": "The attackers use \"**smtp.privateemail.com\"** service to transfer the captured data.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "attackers use \"**smtp.privateemail.com\"** service to transfer the captured data.", "context_left": "The malware crafts an email with the captured details shown in Figure 16 and sends it to the attacker. The", "context_right": "![via_smtp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Via_SMTP.JPG)", "_context_left": "The ", "_context_right": "", "sentence_left": "The malware crafts an email with the captured details shown in Figure 16 and sends it to the attacker.", "sentence_right": "![via_smtp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Via_SMTP.JPG)", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Information sent via SMTP.", "context_left": "![via_smtp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Via_SMTP.JPG) *Figure 16:", "context_right": "* The **LogTypeName** mentioned below is used to tag the data to inform the attacker what module it is running currently.", "_context_left": "*Figure 16: ", "_context_right": "*", "sentence_left": "![via_smtp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Via_SMTP.JPG)", "sentence_right": "The **LogTypeName** mentioned below is used to tag the data to inform the attacker what module it is running currently.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "used to tag the data to inform the attacker what module it is running currently.", "context_left": "*Figure 16: Information sent via SMTP.* The **LogTypeName** mentioned below is", "context_right": "![logtype](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/LogTypename.JPG)", "_context_left": "The **LogTypeName** mentioned below is ", "_context_right": "", "sentence_left": "*Figure 16: Information sent via SMTP.*", "sentence_right": "![logtype](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/LogTypename.JPG)", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CI", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "While uploading data over FTP", "context_left": "***Via FTP***", "context_right": ", it first converts plain text data to bytes and creates FTP requests by configuring all the FTP request fields (i.e., ftp\\_host, credentials, method). The value for all these fields is set from the Stub configuration class.", "_context_left": "", "_context_right": ", it first converts plain text data to bytes and creates FTP requests by configuring all the FTP request fields (i.e., ftp\\_host, credentials, method).", "sentence_left": "***Via FTP***", "sentence_right": "The value for all these fields is set from the Stub configuration class.", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "first converts plain text data to bytes and creates FTP requests by configuring all the FTP request fields", "context_left": "***Via FTP*** While uploading data over FTP, it", "context_right": "(i.e., ftp\\_host, credentials, method). The value for all these fields is set from the Stub configuration class.", "_context_left": "While uploading data over FTP, it ", "_context_right": " (i.e., ftp\\_host, credentials, method).", "sentence_left": "***Via FTP***", "sentence_right": "The value for all these fields is set from the Stub configuration class.", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "FTP method used to upload files is \"STOR\"", "context_left": "The value for all these fields is set from the Stub configuration class. The", "context_right": ". ![viaftp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/ViaFtp.JPG)", "_context_left": "The ", "_context_right": ".", "sentence_left": "The value for all these fields is set from the Stub configuration class.", "sentence_right": "![viaftp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/ViaFtp.JPG)", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Communicaiton via FTP", "context_left": "![viaftp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/ViaFtp.JPG) *Figure 18:", "context_right": ".* **Via proxy**", "_context_left": "*Figure 18: ", "_context_right": ".*", "sentence_left": "![viaftp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/ViaFtp.JPG)", "sentence_right": "**Via proxy**", "label": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.", "label_id": 452, "label_title": "Application Layer Protocol", "label_link": "https://attack.mitre.org/techniques/T1071", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "**Via proxy** The", "context_right": "sets the proxy URL from the config class and uploads the below-mentioned data using the POST method. ![viaProxy](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/viaproxy.JPG)", "_context_left": "The ", "_context_right": " sets the proxy URL from the config class and uploads the below-mentioned data using the POST method.", "sentence_left": "**Via proxy**", "sentence_right": "![viaProxy](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/viaproxy.JPG)", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware sets the proxy URL from the config class and uploads the below-mentioned data using the POST method.", "context_left": "**Via proxy** The", "context_right": "![viaProxy](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/viaproxy.JPG)", "_context_left": "The ", "_context_right": "", "sentence_left": "**Via proxy**", "sentence_right": "![viaProxy](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/viaproxy.JPG)", "label": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic. Adversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.", "label_id": 159, "label_title": "Proxy", "label_link": "https://attack.mitre.org/techniques/T1090", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Communication via proxy", "context_left": "![viaProxy](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/viaproxy.JPG) *Figure 19:", "context_right": ".* The values encrypted with Rijndael256 where the key is the Proxy Key, which is configured in the Stub config class.", "_context_left": "*Figure 19: ", "_context_right": ".*", "sentence_left": "![viaProxy](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/viaproxy.JPG)", "sentence_right": "The values encrypted with Rijndael256 where the key is the Proxy Key, which is configured in the Stub config class.", "label": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic. Adversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.", "label_id": 159, "label_title": "Proxy", "label_link": "https://attack.mitre.org/techniques/T1090", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "*Figure 20: The core modules.* **Password stealer:**", "context_right": "Logger has the capability to steal passwords and cookies from all possible browsers and email clients, as well as FTP clients. Interestingly, the malware has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21.", "_context_left": "**Password stealer:** ", "_context_right": " Logger has the capability to steal passwords and cookies from all possible browsers and email clients, as well as FTP clients.", "sentence_left": "*Figure 20: The core modules.*", "sentence_right": "Interestingly, the malware has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21.", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "steal passwords and cookies from all possible browsers", "context_left": "*Figure 20: The core modules.* **Password stealer:** M00nD3V Logger has the capability to", "context_right": "and email clients, as well as FTP clients. Interestingly, the malware has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21.", "_context_left": "**Password stealer:** M00nD3V Logger has the capability to ", "_context_right": " and email clients, as well as FTP clients.", "sentence_left": "*Figure 20: The core modules.*", "sentence_right": "Interestingly, the malware has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21.", "label": "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.", "label_id": 18, "label_title": "Credentials from Password Stores", "label_link": "https://attack.mitre.org/techniques/T1555", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "**Password stealer:** M00nD3V Logger has the capability to steal passwords and cookies from all possible browsers and email clients, as well as FTP clients. Interestingly, the", "context_right": "has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21. Each provider has a functionality to retrieve and decrypt the password for the application that is assigned to that provider.", "_context_left": "Interestingly, the ", "_context_right": " has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21.", "sentence_left": "**Password stealer:** M00nD3V Logger has the capability to steal passwords and cookies from all possible browsers and email clients, as well as FTP clients.", "sentence_right": "Each provider has a functionality to retrieve and decrypt the password for the application that is assigned to that provider.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 21: Provider list.* The", "context_right": "first tries to decrypt the password with the data protection APT (DPAPI) library. But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the malware downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\".", "_context_left": "The ", "_context_right": " first tries to decrypt the password with the data protection APT (DPAPI) library.", "sentence_left": "*Figure 21: Provider list.*", "sentence_right": "But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the malware downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\".", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "APT", "context_left": "*Figure 21: Provider list.* The malware first tries to decrypt the password with the data protection", "context_right": "(DPAPI) library. But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the malware downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\".", "_context_left": "The malware first tries to decrypt the password with the data protection ", "_context_right": " (DPAPI) library.", "sentence_left": "*Figure 21: Provider list.*", "sentence_right": "But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the malware downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\".", "label": "An advanced persistent threat (APT) is a stealthy computer network attack in which a person or group gains unauthorized access to a network and remains undetected for an extended period. The term's definition was traditionally associated with state sponsorship, but over the last few years there have been multiple examples of non-state sponsored groups conducting large-scale targeted intrusions for specific goals.  An APT may have either business or political motives. APT processes require a high degree of covertness over a long period of time. The \"advanced\" process signifies sophisticated techniques using malware to exploit vulnerabilities in systems. The \"persistent\" process suggests that an external command and control system is continuously monitoring and extracting data from a specific target. The \"threat\" process indicates human involvement in orchestrating the attack.  APT usually refers to a group, such as a government, with both the capability and the intent to target, persistently and effectively, a specific entity. The term is commonly used to refer to cyber threats, in particular that of Internet-enabled espionage using a variety of intelligence gathering techniques to access sensitive information, but applies equally to other threats such as that of traditional espionage or attacks. Other recognized attack vectors include infected media, supply chain compromise, and human intelligence and deception. The purpose of these attacks is to place custom malicious code on one or multiple computers for specific tasks and to remain undetected for the longest possible period. Knowing the attacker artifacts, such as file names, can help a professional make a network-wide search", "label_id": 3008833, "label_title": "Advanced persistent threat", "label_link": "https://en.wikipedia.org/wiki?curid=25874360", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "The malware first tries to decrypt the password with the data protection APT (DPAPI) library. But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the", "context_right": "downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\". It includes \"**GcmBlockCipher**\" and \"**AeadParameters**\" classes, whose instances help the malware decrypt the final password.", "_context_left": "But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the ", "_context_right": " downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\".", "sentence_left": "The malware first tries to decrypt the password with the data protection APT (DPAPI) library.", "sentence_right": "It includes \"**GcmBlockCipher**\" and \"**AeadParameters**\" classes, whose instances help the malware decrypt the final password.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the malware downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\". It includes \"**GcmBlockCipher**\" and \"**AeadParameters**\" classes, whose instances help the", "context_right": "decrypt the final password. ![bouncy_castle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/bouncy_castle.JPG)", "_context_left": "It includes \"**GcmBlockCipher**\" and \"**AeadParameters**\" classes, whose instances help the ", "_context_right": " decrypt the final password.", "sentence_left": "But if it isn't successful, then it attempts to decrypt the passwords using \"**BouncyCastle**\", which the malware downloaded from \"m00nd3v.]com/]M00nD3v/Decryption/BouncyCastle.Crypto.dll\".", "sentence_right": "![bouncy_castle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/bouncy_castle.JPG)", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "The collected passwords are sent to the attacker over SMTP.", "context_left": "*Figure 22: The BouncyCastle code.*", "context_right": "![pass_wteal](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Password_stelaer_format.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 22: The BouncyCastle code.*", "sentence_right": "![pass_wteal](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Password_stelaer_format.JPG)", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "The collected passwords sent over SMTP", "context_left": "![pass_wteal](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Password_stelaer_format.JPG) *Figure 23:", "context_right": ".* **Webcam**", "_context_left": "*Figure 23: ", "_context_right": ".*", "sentence_left": "![pass_wteal](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Password_stelaer_format.JPG)", "sentence_right": "**Webcam**", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "**Webcam** The", "context_right": "has the capability to secretly access the device's webcam and capture the image. The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "_context_left": "The ", "_context_right": " has the capability to secretly access the device's webcam and capture the image.", "sentence_left": "**Webcam**", "sentence_right": "The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "capability to secretly access the device's webcam and capture the image", "context_left": "**Webcam** The malware has the", "context_right": ". The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "_context_left": "The malware has the ", "_context_right": ".", "sentence_left": "**Webcam**", "sentence_right": "The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "The malware has the capability to secretly access the device's webcam and capture the image. The", "context_right": "copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory. To send stolen images over SMTP, it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"**", "_context_left": "The ", "_context_right": " copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "sentence_left": "The malware has the capability to secretly access the device's webcam and capture the image.", "sentence_right": "To send stolen images over SMTP, it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"**", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "context_left": "The malware has the capability to secretly access the device's webcam and capture the image. The", "context_right": "To send stolen images over SMTP, it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"**", "_context_left": "The ", "_context_right": "", "sentence_left": "The malware has the capability to secretly access the device's webcam and capture the image.", "sentence_right": "To send stolen images over SMTP, it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"**", "label": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. In Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)", "label_id": 346, "label_title": "Clipboard Data", "label_link": "https://attack.mitre.org/techniques/T1115", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "send stolen images over SMTP", "context_left": "The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory. To", "context_right": ", it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"** ![web_cam module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam.JPG)", "_context_left": "To ", "_context_right": ", it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"**", "sentence_left": "The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "sentence_right": "![web_cam module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam.JPG)", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": ", it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam", "context_left": "The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory. To send stolen images over SMTP", "context_right": ". Regards M00nD3v\"** ![web_cam module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam.JPG)", "_context_left": "To send stolen images over SMTP", "_context_right": ". Regards M00nD3v\"**", "sentence_left": "The malware copies the captured image onto the clipboard, extracts the image from clipboard, then saves it in the temp directory.", "sentence_right": "![web_cam module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam.JPG)", "label": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "label_id": 195, "label_title": "Exfiltration Over C2 Channel", "label_link": "https://attack.mitre.org/techniques/T1041", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "keystrokes", "context_left": "*Figure 24: The webcam module.* Similarly, the other modules named", "context_right": ", clipboard, and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process. ![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "_context_left": "Similarly, the other modules named ", "_context_right": ", clipboard, and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process.", "sentence_left": "*Figure 24: The webcam module.*", "sentence_right": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "clipboard", "context_left": "*Figure 24: The webcam module.* Similarly, the other modules named keystrokes,", "context_right": ", and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process. ![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "_context_left": "Similarly, the other modules named keystrokes, ", "_context_right": ", and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process.", "sentence_left": "*Figure 24: The webcam module.*", "sentence_right": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "label": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. In Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)", "label_id": 346, "label_title": "Clipboard Data", "label_link": "https://attack.mitre.org/techniques/T1115", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "screen sender", "context_left": "*Figure 24: The webcam module.* Similarly, the other modules named keystrokes, clipboard, and", "context_right": ", execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process. ![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "_context_left": "Similarly, the other modules named keystrokes, clipboard, and ", "_context_right": ", execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process.", "sentence_left": "*Figure 24: The webcam module.*", "sentence_right": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "label": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)", "label_id": 26, "label_title": "Screen Capture", "label_link": "https://attack.mitre.org/techniques/T1113", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "send stolen data to the attacker", "context_left": "*Figure 24: The webcam module.* Similarly, the other modules named keystrokes, clipboard, and screen sender, execute with individual threads and", "context_right": ", then sleep for some period of time before repeating the same stealing process. ![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "_context_left": "Similarly, the other modules named keystrokes, clipboard, and screen sender, execute with individual threads and ", "_context_right": ", then sleep for some period of time before repeating the same stealing process.", "sentence_left": "*Figure 24: The webcam module.*", "sentence_right": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "label": "The adversary is trying to steal data. Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.", "label_id": 583, "label_title": "Exfiltration", "label_link": "https://attack.mitre.org/tactics/TA0010", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Zscaler", "context_left": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG) *Figure 24: The", "context_right": "Cloud Sandbox report for the M00nD3V Logger.* The following is the advanced threat protection signatures released for detecting the malware:", "_context_left": "*Figure 24: The ", "_context_right": " Cloud Sandbox report for the M00nD3V Logger.*", "sentence_left": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "sentence_right": "The following is the advanced threat protection signatures released for detecting the malware:", "label": "Zscaler ((US English)) is a cloud security company, with headquarters in San Jose, California. It offers a platform for businesses that move their data to the cloud, with employees who work remotely.", "label_id": 5903536, "label_title": "Zscaler", "label_link": "https://en.wikipedia.org/wiki?curid=65138718", "entity_class": "NE", "entity_type": "ORG", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "M00nD3V", "context_left": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG) *Figure 24: The Zscaler Cloud Sandbox report for the", "context_right": "Logger.* The following is the advanced threat protection signatures released for detecting the malware:", "_context_left": "*Figure 24: The Zscaler Cloud Sandbox report for the ", "_context_right": " Logger.*", "sentence_left": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "sentence_right": "The following is the advanced threat protection signatures released for detecting the malware:", "label": "M00nD3V", "label_id": 1399, "label_title": "M00nD3V", "label_link": "http://www.bosch.com#node1fvup9pj1x7", "entity_class": "CE", "entity_type": "MALWARE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "malware", "context_left": "*Figure 24: The Zscaler Cloud Sandbox report for the M00nD3V Logger.* The following is the advanced threat protection signatures released for detecting the", "context_right": ": [Win32.Backdoor.M00nD3v](https://threatlibrary.zscaler.com/?keyword=M00nD3v)", "_context_left": "The following is the advanced threat protection signatures released for detecting the ", "_context_right": ":", "sentence_left": "*Figure 24: The Zscaler Cloud Sandbox report for the M00nD3V Logger.*", "sentence_right": "[Win32.Backdoor.M00nD3v](https://threatlibrary.zscaler.com/?keyword=M00nD3v)", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1503 | Credentials from Web Browsers", "context_left": "**[MITRE ATT&CK](https://attack.mitre.org/)™ tactic and technique mapping** |", "context_right": "| | T1112 | Modify Registry |", "_context_left": "| ", "_context_right": " |", "sentence_left": "**[MITRE ATT&CK](https://attack.mitre.org/)™ tactic and technique mapping**", "sentence_right": "| T1112 | Modify Registry |", "label": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers. For example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key. (Citation: Microsoft CryptUnprotectData April 2018) Adversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004). Adversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016) After acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).", "label_id": 563, "label_title": "Credentials from Web Browsers", "label_link": "https://attack.mitre.org/techniques/T1555/003", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1112 | Modify Registry", "context_left": "| T1503 | Credentials from Web Browsers | |", "context_right": "| | T1060 | Persistence |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1503 | Credentials from Web Browsers |", "sentence_right": "| T1060 | Persistence |", "label": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution. Access to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API. Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017) The Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.", "label_id": 238, "label_title": "Modify Registry", "label_link": "https://attack.mitre.org/techniques/T1112", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1060 | Persistence", "context_left": "| T1112 | Modify Registry | |", "context_right": "| | T1057 | Process Discovery |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1112 | Modify Registry |", "sentence_right": "| T1057 | Process Discovery |", "label": "The adversary is trying to maintain their foothold. Persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code.", "label_id": 579, "label_title": "Persistence", "label_link": "https://attack.mitre.org/tactics/TA0003", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1057 | Process Discovery", "context_left": "| T1060 | Persistence | |", "context_right": "| | T1105 | Remote File Copy |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1060 | Persistence |", "sentence_right": "| T1105 | Remote File Copy |", "label": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. In Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.", "label_id": 20, "label_title": "Process Discovery", "label_link": "https://attack.mitre.org/techniques/T1057", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1105 | Remote File Copy", "context_left": "| T1057 | Process Discovery | |", "context_right": "| | T1497 | Defense Evasion, Discovery |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1057 | Process Discovery |", "sentence_right": "| T1497 | Defense Evasion, Discovery |", "label": "Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.", "label_id": 202, "label_title": "Ingress Tool Transfer", "label_link": "https://attack.mitre.org/techniques/T1105", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1497 | Defense Evasion, Discovery", "context_left": "| T1105 | Remote File Copy | |", "context_right": "| | T1083 | File and Directory Discovery |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1105 | Remote File Copy |", "sentence_right": "| T1083 | File and Directory Discovery |", "label": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness) Adversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)", "label_id": 291, "label_title": "Virtualization/Sandbox Evasion", "label_link": "https://attack.mitre.org/techniques/T1497", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1083 | File and Directory Discovery", "context_left": "| T1497 | Defense Evasion, Discovery | |", "context_right": "| | T1089 | Disabling Security Tools |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1497 | Defense Evasion, Discovery |", "sentence_right": "| T1089 | Disabling Security Tools |", "label": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106).", "label_id": 75, "label_title": "File and Directory Discovery", "label_link": "https://attack.mitre.org/techniques/T1083", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1089 | Disabling Security Tools", "context_left": "| T1083 | File and Directory Discovery | |", "context_right": "| | T1055 | Process Injection |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1083 | File and Directory Discovery |", "sentence_right": "| T1055 | Process Injection |", "label": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take the many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls)", "label_id": 493, "label_title": "Disable or Modify Tools", "label_link": "https://attack.mitre.org/techniques/T1562/001", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1055 | Process Injection", "context_left": "| T1089 | Disabling Security Tools | |", "context_right": "| | T1548 | Abuse Elevation Control Mechanism |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1089 | Disabling Security Tools |", "sentence_right": "| T1548 | Abuse Elevation Control Mechanism |", "label": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. There are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. More sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel.", "label_id": 318, "label_title": "Process Injection", "label_link": "https://attack.mitre.org/techniques/T1055", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1548 | Abuse Elevation Control Mechanism", "context_left": "| T1055 | Process Injection | |", "context_right": "| | T1115 | Clipboard Data |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1055 | Process Injection |", "sentence_right": "| T1115 | Clipboard Data |", "label": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.", "label_id": 507, "label_title": "Abuse Elevation Control Mechanism", "label_link": "https://attack.mitre.org/techniques/T1548", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1115 | Clipboard Data", "context_left": "| T1548 | Abuse Elevation Control Mechanism | |", "context_right": "| | T1113 | Screen Capture |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1548 | Abuse Elevation Control Mechanism |", "sentence_right": "| T1113 | Screen Capture |", "label": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. In Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)", "label_id": 346, "label_title": "Clipboard Data", "label_link": "https://attack.mitre.org/techniques/T1115", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1113 | Screen Capture", "context_left": "| T1115 | Clipboard Data | |", "context_right": "| | T1125 | Video Capture |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1115 | Clipboard Data |", "sentence_right": "| T1125 | Video Capture |", "label": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)", "label_id": 26, "label_title": "Screen Capture", "label_link": "https://attack.mitre.org/techniques/T1113", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1125 | Video Capture", "context_left": "| T1113 | Screen Capture | |", "context_right": "| | T1056 | Input Capture |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1113 | Screen Capture |", "sentence_right": "| T1056 | Input Capture |", "label": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files. Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen. In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)", "label_id": 181, "label_title": "Video Capture", "label_link": "https://attack.mitre.org/techniques/T1125", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1056 | Input Capture", "context_left": "| T1125 | Video Capture | |", "context_right": "| | T1048 | Exfiltration Over Alternative Protocol |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1125 | Video Capture |", "sentence_right": "| T1048 | Exfiltration Over Alternative Protocol |", "label": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "label_id": 279, "label_title": "Input Capture", "label_link": "https://attack.mitre.org/techniques/T1056", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1048 | Exfiltration Over Alternative Protocol", "context_left": "| T1056 | Input Capture | |", "context_right": "| | T1183 | Image File Execution Options Injection |", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1056 | Input Capture |", "sentence_right": "| T1183 | Image File Execution Options Injection |", "label": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. Alternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)", "label_id": 48, "label_title": "Exfiltration Over Alternative Protocol", "label_link": "https://attack.mitre.org/techniques/T1048", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "T1183 | Image File Execution Options Injection", "context_left": "| T1048 | Exfiltration Over Alternative Protocol | |", "context_right": "| **IOCs:**", "_context_left": "| ", "_context_right": " |", "sentence_left": "| T1048 | Exfiltration Over Alternative Protocol |", "sentence_right": "**IOCs:**", "label": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010) IFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010) IFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination", "label_id": 27, "label_title": "Image File Execution Options Injection", "label_link": "https://attack.mitre.org/techniques/T1546/012", "entity_class": "CE", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "C&C", "context_left": "bf8801bcd5a196744ccd0f863f84df71  - Final Payload **", "context_right": ":** m00nd3v[.]com", "_context_left": "**", "_context_right": ":**", "sentence_left": "bf8801bcd5a196744ccd0f863f84df71  - Final Payload", "sentence_right": "m00nd3v[.]com", "label": "The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.", "label_id": 581, "label_title": "Command and Control", "label_link": "https://attack.mitre.org/tactics/TA0011", "entity_class": "CE", "entity_type": "TACTIC", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Malware", "context_left": "for i in range(len(cont)):     fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))  #", "context_right": "doesn’t use full key index+=1", "_context_left": "    fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))  #", "_context_right": " doesn’t use full key", "sentence_left": "for i in range(len(cont)):", "sentence_right": "index+=1", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Malware", "context_left": "for i in range(len(cont)):     fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))   #", "context_right": "doesn’t use full key index+=1", "_context_left": "    fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))   #", "_context_right": " doesn’t use full key", "sentence_left": "for i in range(len(cont)):", "sentence_right": "index+=1", "label": "Malware (a portmanteau for malicious software) is any software intentionally designed to cause damage to a computer, server, client, or computer network. Malware does the damage after it is implanted or introduced in some way into a target's computer and can take the form of executable code, scripts, active content, and other software. The code is described as computer viruses, worms, Trojan horses, ransomware, spyware, adware, and scareware, among other terms. Malware has a malicious intent, acting against the interest of the computer user—and so does not include software that causes unintentional harm due to some deficiency, which is typically described as a software bug.  Programs officially supplied by companies can be considered malware if they secretly act against the interests of the computer user. For example, at one point Sony music Compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying; but which also reported on users' listening habits, and unintentionally created extra security vulnerabilities.  One strategy for protecting against malware is to prevent the harmful software from gaining access to the target computer. For this reason, antivirus software, firewalls and other strategies are used to help protect against the introduction of malware, in addition to checking for the presence of malware and malicious activity and recovering from attacks.", "label_id": 10247, "label_title": "Malware", "label_link": "https://en.wikipedia.org/wiki?curid=20901", "entity_class": "CE", "entity_type": "CON", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Via proxy**", "context_left": "*Figure 18: Communicaiton via FTP.*", "context_right": "The malware sets the proxy URL from the config class and uploads the below-mentioned data using the POST method.", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 18: Communicaiton via FTP.*", "sentence_right": "The malware sets the proxy URL from the config class and uploads the below-mentioned data using the POST method.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "temp=temp[2:]", "context_left": "temp=hex(ord(i))", "context_right": "if len(temp) !=2:", "_context_left": "", "_context_right": "", "sentence_left": "temp=hex(ord(i))", "sentence_right": "if len(temp) !=2:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 17: Log type.*", "context_left": "![logtype](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/LogTypename.JPG)", "context_right": "***Via FTP***", "_context_left": "", "_context_right": "", "sentence_left": "![logtype](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/LogTypename.JPG)", "sentence_right": "***Via FTP***", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![avlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/avlist.JPG)", "context_left": "This way, it disables all the listed applications to run.", "context_right": "*Figure 10: Application list*", "_context_left": "", "_context_right": "", "sentence_left": "This way, it disables all the listed applications to run.", "sentence_right": "*Figure 10: Application list*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "hexval.append(temp)", "context_left": "temp='0'+temp", "context_right": "hexva=(\"\".join(hexval))", "_context_left": "", "_context_right": "", "sentence_left": "temp='0'+temp", "sentence_right": "hexva=(\"\".join(hexval))", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![providerlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Provider_list.png)", "context_left": "Each provider has a functionality to retrieve and decrypt the password for the application that is assigned to that provider.", "context_right": "*Figure 21: Provider list.*", "_context_left": "", "_context_right": "", "sentence_left": "Each provider has a functionality to retrieve and decrypt the password for the application that is assigned to that provider.", "sentence_right": "*Figure 21: Provider list.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "The values encrypted with Rijndael256 where the key is the Proxy Key, which is configured in the Stub config class.", "context_left": "*Figure 19: Communication via proxy.*", "context_right": "Each stealing module runs independently with individual threads, as shown in Figure 20.", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 19: Communication via proxy.*", "sentence_right": "Each stealing module runs independently with individual threads, as shown in Figure 20.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "for i in range(len(cont)):", "context_left": "index=0", "context_right": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))   #Malware doesn’t use full key", "_context_left": "", "_context_right": "", "sentence_left": "index=0", "sentence_right": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))   #Malware doesn’t use full key", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![pass_inti](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/password_intial.JPG)", "context_left": "* DecryptCredential - Uses the Rijndael256 algorithm to decrypt the Stub configuration values [cipher data is Base64 encoded value and key is hardcoded mutex value] and set them to their respective variables, as show in Figure 8.", "context_right": "*Figure 8: The decrypt credential.*", "_context_left": "", "_context_right": "", "sentence_left": "* DecryptCredential - Uses the Rijndael256 algorithm to decrypt the Stub configuration values [cipher data is Base64 encoded value and key is hardcoded mutex value] and set them to their respective variables, as show in Figure 8.", "sentence_right": "*Figure 8: The decrypt credential.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "f.write(binstr)", "context_left": "f=open('fixed','wb')", "context_right": "f.close()", "_context_left": "", "_context_right": "", "sentence_left": "f=open('fixed','wb')", "sentence_right": "f.close()", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "for i in range(len(cont)):", "context_left": "index=0", "context_right": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))  #Malware doesn’t use full key", "_context_left": "", "_context_right": "", "sentence_left": "index=0", "sentence_right": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))  #Malware doesn’t use full key", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 21: Provider list.*", "context_left": "![providerlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Provider_list.png)", "context_right": "The malware first tries to decrypt the password with the data protection APT (DPAPI) library.", "_context_left": "", "_context_right": "", "sentence_left": "![providerlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Provider_list.png)", "sentence_right": "The malware first tries to decrypt the password with the data protection APT (DPAPI) library.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "temp='0'+temp", "context_left": "if len(temp) !=2:", "context_right": "hexval.append(temp)", "_context_left": "", "_context_right": "", "sentence_left": "if len(temp) !=2:", "sentence_right": "hexval.append(temp)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Webcam**", "context_left": "*Figure 23: The collected passwords sent over SMTP.*", "context_right": "The malware has the capability to secretly access the device's webcam and capture the image.", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 23: The collected passwords sent over SMTP.*", "sentence_right": "The malware has the capability to secretly access the device's webcam and capture the image.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "***Via FTP***", "context_left": "*Figure 17: Log type.*", "context_right": "While uploading data over FTP, it first converts plain text data to bytes and creates FTP requests by configuring all the FTP request fields (i.e., ftp\\_host, credentials, method).", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 17: Log type.*", "sentence_right": "While uploading data over FTP, it first converts plain text data to bytes and creates FTP requests by configuring all the FTP request fields (i.e., ftp\\_host, credentials, method).", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "m00nd3v[.]com", "context_left": "**C&C:**", "context_right": "***Appendix I :***", "_context_left": "", "_context_right": "", "sentence_left": "**C&C:**", "sentence_right": "***Appendix I :***", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "temp=temp[2:]", "context_left": "temp=hex(ord(i))", "context_right": "if len(temp) !=2:", "_context_left": "", "_context_right": "", "sentence_left": "temp=hex(ord(i))", "sentence_right": "if len(temp) !=2:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Network communication**", "context_left": "*Figure 15: Basic machine information sent to the attacker.*", "context_right": "***Via SMTP***", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 15: Basic machine information sent to the attacker.*", "sentence_right": "***Via SMTP***", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![spam](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/spam_mail.JPG)", "context_left": "The spam mail includes zip attachments that contain malicious executables.", "context_right": "*Figure 2: Spam Mail*", "_context_left": "", "_context_right": "", "sentence_left": "The spam mail includes zip attachments that contain malicious executables.", "sentence_right": "*Figure 2: Spam Mail*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "The key length is 24 bytes.", "context_left": "When converted to Unicode string, the same pass variable is: \"*z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00F\\x00a\\x00s\\x00b\\x00*\".", "context_right": "![xor](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/xorFirstLayer.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "When converted to Unicode string, the same pass variable is: \"*z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00F\\x00a\\x00s\\x00b\\x00*\".", "sentence_right": "![xor](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/xorFirstLayer.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "It is applicable to the \"Everyone\" group, so if anyone attempts to kill the process, it won't be allowed to terminate.", "context_left": "The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "context_right": "![processelv](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/process_elvation.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "The malware sets the security identifier type as \"WorldSid\" with AceQualifier AccessDenied.", "sentence_right": "![processelv](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/process_elvation.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "fl=''", "context_left": "xor\\_key=xor\\_key[0:16]", "context_right": "index=0", "_context_left": "", "_context_right": "", "sentence_left": "xor\\_key=xor\\_key[0:16]", "sentence_right": "index=0", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Here, the hard-coded pass variable \"*WcqqicsgTUaj\"* is used as a key.", "context_left": "**Second layer decryption**", "context_right": "When converted to Unicode string, the same pas variable is: \"*W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s\\x00g\\x00T\\x00U\\x00a\\x00j\\x00*\".", "_context_left": "", "_context_right": "", "sentence_left": "**Second layer decryption**", "sentence_right": "When converted to Unicode string, the same pas variable is: \"*W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s\\x00g\\x00T\\x00U\\x00a\\x00j\\x00*\".", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![stubkey](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stubKey.JPG)", "context_left": "If the file is not present, then it creates and writes Rijndael256 encrypted data, which is a combination of the current executable path and the hardcoded StubConfigEncryptionKey, and then shows a fake message box to fool the victim.", "context_right": "*Figure 13: The Rijndael256 key.*", "_context_left": "", "_context_right": "", "sentence_left": "If the file is not present, then it creates and writes Rijndael256 encrypted data, which is a combination of the current executable path and the hardcoded StubConfigEncryptionKey, and then shows a fake message box to fool the victim.", "sentence_right": "*Figure 13: The Rijndael256 key.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**[MITRE ATT&CK](https://attack.mitre.org/)™ tactic and technique mapping**", "context_left": "[Win32.Backdoor.M00nD3v](https://threatlibrary.zscaler.com/?keyword=M00nD3v)", "context_right": "| T1503 | Credentials from Web Browsers |", "_context_left": "", "_context_right": "", "sentence_left": "[Win32.Backdoor.M00nD3v](https://threatlibrary.zscaler.com/?keyword=M00nD3v)", "sentence_right": "| T1503 | Credentials from Web Browsers |", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Payload analysis**", "context_left": "We have written a Python script to decrypt the encrypted payload, which can be found in Appendix I and Appendix II.", "context_right": "StubConfig Class contains the configuration details - some of them are initialized with Base64 values while others are hardcoded.", "_context_left": "", "_context_right": "", "sentence_left": "We have written a Python script to decrypt the encrypted payload, which can be found in Appendix I and Appendix II.", "sentence_right": "StubConfig Class contains the configuration details - some of them are initialized with Base64 values while others are hardcoded.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "If an app is running with the same mutex, then the loader exits from environment.", "context_left": "* SingleInstance - Checks to see if a single instance is running or not by checking for the hardcoded mutex value {99ed2fc7-0fdc-42ef-8b82-78d1c7c554e3} and sets a flag accordingly.", "context_right": "* DecryptCredential - Uses the Rijndael256 algorithm to decrypt the Stub configuration values [cipher data is Base64 encoded value and key is hardcoded mutex value] and set them to their respective variables, as show in Figure 8.", "_context_left": "", "_context_right": "", "sentence_left": "* SingleInstance - Checks to see if a single instance is running or not by checking for the hardcoded mutex value {99ed2fc7-0fdc-42ef-8b82-78d1c7c554e3} and sets a flag accordingly.", "sentence_right": "* DecryptCredential - Uses the Rijndael256 algorithm to decrypt the Stub configuration values [cipher data is Base64 encoded value and key is hardcoded mutex value] and set them to their respective variables, as show in Figure 8.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "* dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "context_left": "**Technical analysis**", "context_right": "+ e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "_context_left": "", "_context_right": "", "sentence_left": "**Technical analysis**", "sentence_right": "+ e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "hexval=[]", "context_left": "index+=1", "context_right": "for i in fl:", "_context_left": "", "_context_right": "", "sentence_left": "index+=1", "sentence_right": "for i in fl:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "binstr=binascii.unhexlify(hexva)", "context_left": "import binascii", "context_right": "f=open('fixed2','wb')", "_context_left": "", "_context_right": "", "sentence_left": "import binascii", "sentence_right": "f=open('fixed2','wb')", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**First layer decryption**", "context_left": "Hence, a few bytes are not actually ciphered.", "context_right": "The hard-coded pass variable \"*zvjzpeuCFasb*\" is used as a key.", "_context_left": "", "_context_right": "", "sentence_left": "Hence, a few bytes are not actually ciphered.", "sentence_right": "The hard-coded pass variable \"*zvjzpeuCFasb*\" is used as a key.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Unpacking routine**", "context_left": "The malware also runs by elevating its own privileges.", "context_right": "The malware unpacks the encrypted payload using multibyte XOR decryption.", "_context_left": "", "_context_right": "", "sentence_left": "The malware also runs by elevating its own privileges.", "sentence_right": "The malware unpacks the encrypted payload using multibyte XOR decryption.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![stubcinfig](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stub_config.JPG)", "context_left": "StubConfig Class contains the configuration details - some of them are initialized with Base64 values while others are hardcoded.", "context_right": "*Figure 6: StubConfig details.*", "_context_left": "", "_context_right": "", "sentence_left": "StubConfig Class contains the configuration details - some of them are initialized with Base64 values while others are hardcoded.", "sentence_right": "*Figure 6: StubConfig details.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "f=open('fixed2','wb')", "context_left": "binstr=binascii.unhexlify(hexva)", "context_right": "f.write(binstr)", "_context_left": "", "_context_right": "", "sentence_left": "binstr=binascii.unhexlify(hexva)", "sentence_right": "f.write(binstr)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![bouncy_castle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/bouncy_castle.JPG)", "context_left": "It includes \"**GcmBlockCipher**\" and \"**AeadParameters**\" classes, whose instances help the malware decrypt the final password.", "context_right": "*Figure 22: The BouncyCastle code.*", "_context_left": "", "_context_right": "", "sentence_left": "It includes \"**GcmBlockCipher**\" and \"**AeadParameters**\" classes, whose instances help the malware decrypt the final password.", "sentence_right": "*Figure 22: The BouncyCastle code.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "***Via SMTP***", "context_left": "**Network communication**", "context_right": "The malware communicates with the attacker over SMTP using port 587.", "_context_left": "", "_context_right": "", "sentence_left": "**Network communication**", "sentence_right": "The malware communicates with the attacker over SMTP using port 587.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Python script to decrypt second level decryption:", "context_left": "***Appendix II :***", "context_right": "file=open('enc2.bin','rb')", "_context_left": "", "_context_right": "", "sentence_left": "***Appendix II :***", "sentence_right": "file=open('enc2.bin','rb')", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![via_smtp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Via_SMTP.JPG)", "context_left": "The attackers use \"**smtp.privateemail.com\"** service to transfer the captured data.", "context_right": "*Figure 16: Information sent via SMTP.*", "_context_left": "", "_context_right": "", "sentence_left": "The attackers use \"**smtp.privateemail.com\"** service to transfer the captured data.", "sentence_right": "*Figure 16: Information sent via SMTP.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "context_left": "dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "context_right": "bf8801bcd5a196744ccd0f863f84df71  - Final Payload", "_context_left": "", "_context_right": "", "sentence_left": "dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "sentence_right": "bf8801bcd5a196744ccd0f863f84df71  - Final Payload", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 10: Application list*", "context_left": "![avlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/avlist.JPG)", "context_right": "* Process elevation - As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the malware executable.", "_context_left": "", "_context_right": "", "sentence_left": "![avlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/avlist.JPG)", "sentence_right": "* Process elevation - As shown in Figure 11, the malware contains a process elevation module, which is responsible for elevating the privilege of the malware executable.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![logtype](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/LogTypename.JPG)", "context_left": "The **LogTypeName** mentioned below is used to tag the data to inform the attacker what module it is running currently.", "context_right": "*Figure 17: Log type.*", "_context_left": "", "_context_right": "", "sentence_left": "The **LogTypeName** mentioned below is used to tag the data to inform the attacker what module it is running currently.", "sentence_right": "*Figure 17: Log type.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![botkill](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/botkiller1.JPG)", "context_left": "Here, ‘fileloc’ is the full path of the file or process.", "context_right": "*Figure 12: Malicious checks of the file.*", "_context_left": "", "_context_right": "", "sentence_left": "Here, ‘fileloc’ is the full path of the file or process.", "sentence_right": "*Figure 12: Malicious checks of the file.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 14: Stub configuration.*", "context_left": "![web_key](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam%2Bkeystroke.JPG)", "context_right": "The Stub starts its core stealing functionality by sending full victim machine information, as shown in Figure 15**,** to the attacker over SMTP port 587", "_context_left": "", "_context_right": "", "sentence_left": "![web_key](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam%2Bkeystroke.JPG)", "sentence_right": "The Stub starts its core stealing functionality by sending full victim machine information, as shown in Figure 15**,** to the attacker over SMTP port 587", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![steal_module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/separate_thread.JPG)", "context_left": "Each stealing module runs independently with individual threads, as shown in Figure 20.", "context_right": "*Figure 20: The core modules.*", "_context_left": "", "_context_right": "", "sentence_left": "Each stealing module runs independently with individual threads, as shown in Figure 20.", "sentence_right": "*Figure 20: The core modules.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "hexval.append(temp)", "context_left": "temp='0'+temp", "context_right": "hexva=(\"\".join(hexval))", "_context_left": "", "_context_right": "", "sentence_left": "temp='0'+temp", "sentence_right": "hexva=(\"\".join(hexval))", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "When converted to Unicode string, the same pass variable is: \"*z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00F\\x00a\\x00s\\x00b\\x00*\".", "context_left": "The hard-coded pass variable \"*zvjzpeuCFasb*\" is used as a key.", "context_right": "The key length is 24 bytes.", "_context_left": "", "_context_right": "", "sentence_left": "The hard-coded pass variable \"*zvjzpeuCFasb*\" is used as a key.", "sentence_right": "The key length is 24 bytes.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Figure 7** shows the initialization module.", "context_left": "The initialization phase includes several checks, such as an anti-debugger, a bot killer, an antivirus killer, and more.", "context_right": "![initial](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/MoIntilize_phase.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "The initialization phase includes several checks, such as an anti-debugger, a bot killer, an antivirus killer, and more.", "sentence_right": "![initial](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/MoIntilize_phase.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![viaftp](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/ViaFtp.JPG)", "context_left": "The FTP method used to upload files is \"STOR\".", "context_right": "*Figure 18: Communicaiton via FTP.*", "_context_left": "", "_context_right": "", "sentence_left": "The FTP method used to upload files is \"STOR\".", "sentence_right": "*Figure 18: Communicaiton via FTP.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "cont=file.read()", "context_left": "file=open('enc.bin','rb')", "context_right": "file.close()", "_context_left": "", "_context_right": "", "sentence_left": "file=open('enc.bin','rb')", "sentence_right": "file.close()", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Each stealing module runs independently with individual threads, as shown in Figure 20.", "context_left": "The values encrypted with Rijndael256 where the key is the Proxy Key, which is configured in the Stub config class.", "context_right": "![steal_module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/separate_thread.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "The values encrypted with Rijndael256 where the key is the Proxy Key, which is configured in the Stub config class.", "sentence_right": "![steal_module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/separate_thread.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "* ExecutionDelay - Sleeps for 5000 milliseconds before executing.", "context_left": "* DependencyLoader - Downloads the DLL from m00nd3v[.]com/M00nD3v/Decryption/BouncyCastle[.]Crypto.dll and loads it in memory.", "context_right": "* SingleInstance - Checks to see if a single instance is running or not by checking for the hardcoded mutex value {99ed2fc7-0fdc-42ef-8b82-78d1c7c554e3} and sets a flag accordingly.", "_context_left": "", "_context_right": "", "sentence_left": "* DependencyLoader - Downloads the DLL from m00nd3v[.]com/M00nD3v/Decryption/BouncyCastle[.]Crypto.dll and loads it in memory.", "sentence_right": "* SingleInstance - Checks to see if a single instance is running or not by checking for the hardcoded mutex value {99ed2fc7-0fdc-42ef-8b82-78d1c7c554e3} and sets a flag accordingly.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "fl=''", "context_left": "xor\\_key=\"z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00\"", "context_right": "index=0", "_context_left": "", "_context_right": "", "sentence_left": "xor\\_key=\"z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00\"", "sentence_right": "index=0", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 11: Process elevation.*", "context_left": "![processelv](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/process_elvation.JPG)", "context_right": "* Bot killer - Scans all running processes and Windows Startup registry entries [ \\\\Run\\\\ and \\\\RunOnce\\\\ ], then passes the file location path to module **IsFileMalicious()** to tag either the process or file as malicious and delete it accordingly.", "_context_left": "", "_context_right": "", "sentence_left": "![processelv](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/process_elvation.JPG)", "sentence_right": "* Bot killer - Scans all running processes and Windows Startup registry entries [ \\\\Run\\\\ and \\\\RunOnce\\\\ ], then passes the file location path to module **IsFileMalicious()** to tag either the process or file as malicious and delete it accordingly.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![viaProxy](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/viaproxy.JPG)", "context_left": "The malware sets the proxy URL from the config class and uploads the below-mentioned data using the POST method.", "context_right": "*Figure 19: Communication via proxy.*", "_context_left": "", "_context_right": "", "sentence_left": "The malware sets the proxy URL from the config class and uploads the below-mentioned data using the POST method.", "sentence_right": "*Figure 19: Communication via proxy.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 13: The Rijndael256 key.*", "context_left": "![stubkey](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stubKey.JPG)", "context_right": "The malware has three kinds of communication methods to send logged data: SMTP, FTP, and proxy.", "_context_left": "", "_context_right": "", "sentence_left": "![stubkey](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stubKey.JPG)", "sentence_right": "The malware has three kinds of communication methods to send logged data: SMTP, FTP, and proxy.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/payment_method.JPG)", "context_left": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Package%20detail.JPG)", "context_right": "*Figure 3: M00nD3V Logger subscription and payment method pages.*", "_context_left": "", "_context_right": "", "sentence_left": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Package%20detail.JPG)", "sentence_right": "*Figure 3: M00nD3V Logger subscription and payment method pages.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "[Note: In case of a running process, it additionally checks for each process window visibility property.", "context_left": "* Bot killer - Scans all running processes and Windows Startup registry entries [ \\\\Run\\\\ and \\\\RunOnce\\\\ ], then passes the file location path to module **IsFileMalicious()** to tag either the process or file as malicious and delete it accordingly.", "context_right": "If it is set to false, then it is tagged as malicious.", "_context_left": "", "_context_right": "", "sentence_left": "* Bot killer - Scans all running processes and Windows Startup registry entries [ \\\\Run\\\\ and \\\\RunOnce\\\\ ], then passes the file location path to module **IsFileMalicious()** to tag either the process or file as malicious and delete it accordingly.", "sentence_right": "If it is set to false, then it is tagged as malicious.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "if len(temp) !=2:", "context_left": "temp=temp[2:]", "context_right": "temp='0'+temp", "_context_left": "", "_context_right": "", "sentence_left": "temp=temp[2:]", "sentence_right": "temp='0'+temp", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "When converted to Unicode string, the same pas variable is: \"*W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s\\x00g\\x00T\\x00U\\x00a\\x00j\\x00*\".", "context_left": "Here, the hard-coded pass variable \"*WcqqicsgTUaj\"* is used as a key.", "context_right": "We have written a Python script to decrypt the encrypted payload, which can be found in Appendix I and Appendix II.", "_context_left": "", "_context_right": "", "sentence_left": "Here, the hard-coded pass variable \"*WcqqicsgTUaj\"* is used as a key.", "sentence_right": "We have written a Python script to decrypt the encrypted payload, which can be found in Appendix I and Appendix II.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "+ Figure 12 shows the checks used inside IsFileMalicious().", "context_left": "If it is set to false, then it is tagged as malicious.", "context_right": "Here, ‘fileloc’ is the full path of the file or process.", "_context_left": "", "_context_right": "", "sentence_left": "If it is set to false, then it is tagged as malicious.", "sentence_right": "Here, ‘fileloc’ is the full path of the file or process.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "***Appendix II :***", "context_left": "f.close()", "context_right": "Python script to decrypt second level decryption:", "_context_left": "", "_context_right": "", "sentence_left": "f.close()", "sentence_right": "Python script to decrypt second level decryption:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "for i in fl:", "context_left": "hexval=[]", "context_right": "temp=hex(ord(i))", "_context_left": "", "_context_right": "", "sentence_left": "hexval=[]", "sentence_right": "temp=hex(ord(i))", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "temp=hex(ord(i))", "context_left": "for i in fl:", "context_right": "temp=temp[2:]", "_context_left": "", "_context_right": "", "sentence_left": "for i in fl:", "sentence_right": "temp=temp[2:]", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 6: StubConfig details.*", "context_left": "![stubcinfig](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stub_config.JPG)", "context_right": "Before starting to log user data, the M00nD3V Logger initializes its configuration.", "_context_left": "", "_context_right": "", "sentence_left": "![stubcinfig](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stub_config.JPG)", "sentence_right": "Before starting to log user data, the M00nD3V Logger initializes its configuration.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "binstr=binascii.unhexlify(hexva)", "context_left": "import binascii", "context_right": "f=open('fixed','wb')", "_context_left": "", "_context_right": "", "sentence_left": "import binascii", "sentence_right": "f=open('fixed','wb')", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "index=0", "context_left": "fl=''", "context_right": "for i in range(len(cont)):", "_context_left": "", "_context_right": "", "sentence_left": "fl=''", "sentence_right": "for i in range(len(cont)):", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "If the file is not present, then it creates and writes Rijndael256 encrypted data, which is a combination of the current executable path and the hardcoded StubConfigEncryptionKey, and then shows a fake message box to fool the victim.", "context_left": "Before starting to log the stored credentials and other personal data, it checks whether the malware was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory.", "context_right": "![stubkey](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stubKey.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "Before starting to log the stored credentials and other personal data, it checks whether the malware was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory.", "sentence_right": "![stubkey](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/stubKey.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![xor](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/xorFirstLayer.JPG)", "context_left": "The key length is 24 bytes.", "context_right": "*Figure 5: First-level decryption using multibyte XOR.*", "_context_left": "", "_context_right": "", "sentence_left": "The key length is 24 bytes.", "sentence_right": "*Figure 5: First-level decryption using multibyte XOR.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "file.close()", "context_left": "cont=file.read()", "context_right": "xor\\_key=\"z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00\"", "_context_left": "", "_context_right": "", "sentence_left": "cont=file.read()", "sentence_right": "xor\\_key=\"z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00\"", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "July 10, 2020", "context_left": "Deep Dive Into the M00nD3V Logger", "context_right": "ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**M00nD3V Logger''** that is being dropped by a multistage loader.", "_context_left": "", "_context_right": "", "sentence_left": "Deep Dive Into the M00nD3V Logger", "sentence_right": "ThreatLabZ observed a **multifunctional** information-stealing Trojan named \"**M00nD3V Logger''** that is being dropped by a multistage loader.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "bf8801bcd5a196744ccd0f863f84df71  - Final Payload", "context_left": "e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "context_right": "**C&C:**", "_context_left": "", "_context_right": "", "sentence_left": "e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "sentence_right": "**C&C:**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "[Win32.Backdoor.M00nD3v](https://threatlibrary.zscaler.com/?keyword=M00nD3v)", "context_left": "The following is the advanced threat protection signatures released for detecting the malware:", "context_right": "**[MITRE ATT&CK](https://attack.mitre.org/)™ tactic and technique mapping**", "_context_left": "", "_context_right": "", "sentence_left": "The following is the advanced threat protection signatures released for detecting the malware:", "sentence_right": "**[MITRE ATT&CK](https://attack.mitre.org/)™ tactic and technique mapping**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "context_left": "**IOCs:**", "context_right": "e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "_context_left": "", "_context_right": "", "sentence_left": "**IOCs:**", "sentence_right": "e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "* SingleInstance - Checks to see if a single instance is running or not by checking for the hardcoded mutex value {99ed2fc7-0fdc-42ef-8b82-78d1c7c554e3} and sets a flag accordingly.", "context_left": "* ExecutionDelay - Sleeps for 5000 milliseconds before executing.", "context_right": "If an app is running with the same mutex, then the loader exits from environment.", "_context_left": "", "_context_right": "", "sentence_left": "* ExecutionDelay - Sleeps for 5000 milliseconds before executing.", "sentence_right": "If an app is running with the same mutex, then the loader exits from environment.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Technical analysis**", "context_left": "In this blog, we will provide a detailed technical analysis of commercial M00nD3V Logger malware.", "context_right": "* dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "_context_left": "", "_context_right": "", "sentence_left": "In this blog, we will provide a detailed technical analysis of commercial M00nD3V Logger malware.", "sentence_right": "* dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "index+=1", "context_left": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))  #Malware doesn’t use full key", "context_right": "hexval=[]", "_context_left": "", "_context_right": "", "sentence_left": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))  #Malware doesn’t use full key", "sentence_right": "hexval=[]", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "import binascii", "context_left": "hexva=(\"\".join(hexval))", "context_right": "binstr=binascii.unhexlify(hexva)", "_context_left": "", "_context_right": "", "sentence_left": "hexva=(\"\".join(hexval))", "sentence_right": "binstr=binascii.unhexlify(hexva)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "import binascii", "context_left": "hexva=(\"\".join(hexval))", "context_right": "binstr=binascii.unhexlify(hexva)", "_context_left": "", "_context_right": "", "sentence_left": "hexva=(\"\".join(hexval))", "sentence_right": "binstr=binascii.unhexlify(hexva)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 24: The webcam module.*", "context_left": "![web_cam module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam.JPG)", "context_right": "Similarly, the other modules named keystrokes, clipboard, and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process.", "_context_left": "", "_context_right": "", "sentence_left": "![web_cam module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam.JPG)", "sentence_right": "Similarly, the other modules named keystrokes, clipboard, and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "cont=file.read()", "context_left": "file=open('enc2.bin','rb')", "context_right": "file.close()", "_context_left": "", "_context_right": "", "sentence_left": "file=open('enc2.bin','rb')", "sentence_right": "file.close()", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![sandbox](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/zscaler%20report.JPG)", "context_left": "Similarly, the other modules named keystrokes, clipboard, and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process.", "context_right": "*Figure 24: The Zscaler Cloud Sandbox report for the M00nD3V Logger.*", "_context_left": "", "_context_right": "", "sentence_left": "Similarly, the other modules named keystrokes, clipboard, and screen sender, execute with individual threads and send stolen data to the attacker, then sleep for some period of time before repeating the same stealing process.", "sentence_right": "*Figure 24: The Zscaler Cloud Sandbox report for the M00nD3V Logger.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "The value for all these fields is set from the Stub configuration class.", "context_left": "While uploading data over FTP, it first converts plain text data to bytes and creates FTP requests by configuring all the FTP request fields (i.e., ftp\\_host, credentials, method).", "context_right": "The FTP method used to upload files is \"STOR\".", "_context_left": "", "_context_right": "", "sentence_left": "While uploading data over FTP, it first converts plain text data to bytes and creates FTP requests by configuring all the FTP request fields (i.e., ftp\\_host, credentials, method).", "sentence_right": "The FTP method used to upload files is \"STOR\".", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "f.close()", "context_left": "f.write(binstr)", "context_right": "", "_context_left": "", "_context_right": "", "sentence_left": "f.write(binstr)", "sentence_right": "", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Before starting any logging functionality, it checks whether the respective logging functionality variable is set in the Stub config entry or not.", "context_left": "But this stub is configured to use only and send data over SMTP only.", "context_right": "If the value is not set in config, then it won't execute the \"keystroke functionality\".", "_context_left": "", "_context_right": "", "sentence_left": "But this stub is configured to use only and send data over SMTP only.", "sentence_right": "If the value is not set in config, then it won't execute the \"keystroke functionality\".", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 7: Initialization phase*", "context_left": "![initial](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/MoIntilize_phase.JPG)", "context_right": "Initialization details:", "_context_left": "", "_context_right": "", "sentence_left": "![initial](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/MoIntilize_phase.JPG)", "sentence_right": "Initialization details:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "If it is set to false, then it is tagged as malicious.", "context_left": "[Note: In case of a running process, it additionally checks for each process window visibility property.", "context_right": "+ Figure 12 shows the checks used inside IsFileMalicious().", "_context_left": "", "_context_right": "", "sentence_left": "[Note: In case of a running process, it additionally checks for each process window visibility property.", "sentence_right": "+ Figure 12 shows the checks used inside IsFileMalicious().", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![initial](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/MoIntilize_phase.JPG)", "context_left": "**Figure 7** shows the initialization module.", "context_right": "*Figure 7: Initialization phase*", "_context_left": "", "_context_right": "", "sentence_left": "**Figure 7** shows the initialization module.", "sentence_right": "*Figure 7: Initialization phase*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "index=0", "context_left": "fl=''", "context_right": "for i in range(len(cont)):", "_context_left": "", "_context_right": "", "sentence_left": "fl=''", "sentence_right": "for i in range(len(cont)):", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "+ e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "context_left": "* dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "context_right": "- bf8801bcd5a196744ccd0f863f84df71 - Final Payload (.Net)", "_context_left": "", "_context_right": "", "sentence_left": "* dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "sentence_right": "- bf8801bcd5a196744ccd0f863f84df71 - Final Payload (.Net)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "file=open('enc.bin','rb')", "context_left": "Python Script to decrypt first level decryption:", "context_right": "cont=file.read()", "_context_left": "", "_context_right": "", "sentence_left": "Python Script to decrypt first level decryption:", "sentence_right": "cont=file.read()", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "* DecryptCredential - Uses the Rijndael256 algorithm to decrypt the Stub configuration values [cipher data is Base64 encoded value and key is hardcoded mutex value] and set them to their respective variables, as show in Figure 8.", "context_left": "If an app is running with the same mutex, then the loader exits from environment.", "context_right": "![pass_inti](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/password_intial.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "If an app is running with the same mutex, then the loader exits from environment.", "sentence_right": "![pass_inti](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/password_intial.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "file.close()", "context_left": "cont=file.read()", "context_right": "xor\\_key=\"W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s", "_context_left": "", "_context_right": "", "sentence_left": "cont=file.read()", "sentence_right": "xor\\_key=\"W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 8: The decrypt credential.*", "context_left": "![pass_inti](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/password_intial.JPG)", "context_right": "* Persistence - Copies the parent file to AppData directory and begins the startup entry [SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run].", "_context_left": "", "_context_right": "", "sentence_left": "![pass_inti](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/password_intial.JPG)", "sentence_right": "* Persistence - Copies the parent file to AppData directory and begins the startup entry [SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run].", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "xor\\_key=\"z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00\"", "context_left": "file.close()", "context_right": "fl=''", "_context_left": "", "_context_right": "", "sentence_left": "file.close()", "sentence_right": "fl=''", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "f=open('fixed','wb')", "context_left": "binstr=binascii.unhexlify(hexva)", "context_right": "f.write(binstr)", "_context_left": "", "_context_right": "", "sentence_left": "binstr=binascii.unhexlify(hexva)", "sentence_right": "f.write(binstr)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "hexva=(\"\".join(hexval))", "context_left": "hexval.append(temp)", "context_right": "import binascii", "_context_left": "", "_context_right": "", "sentence_left": "hexval.append(temp)", "sentence_right": "import binascii", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![web_key](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam%2Bkeystroke.JPG)", "context_left": "As shown in Figure 14, the Stub is configured to execute the keystroke but not the webcam as the webcam value is not assigned.", "context_right": "*Figure 14: Stub configuration.*", "_context_left": "", "_context_right": "", "sentence_left": "As shown in Figure 14, the Stub is configured to execute the keystroke but not the webcam as the webcam value is not assigned.", "sentence_right": "*Figure 14: Stub configuration.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "In case of a whitelisted application, the endpoint antivirus will not trigger any malicious activity.", "context_left": "Figure 4 shows the post execution of the malware.", "context_right": "Hence, the malware can do its job on the fly without getting caught.", "_context_left": "", "_context_right": "", "sentence_left": "Figure 4 shows the post execution of the malware.", "sentence_right": "Hence, the malware can do its job on the fly without getting caught.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 22: The BouncyCastle code.*", "context_left": "![bouncy_castle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/bouncy_castle.JPG)", "context_right": "The collected passwords are sent to the attacker over SMTP.", "_context_left": "", "_context_right": "", "sentence_left": "![bouncy_castle](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/bouncy_castle.JPG)", "sentence_right": "The collected passwords are sent to the attacker over SMTP.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "***Appendix I :***", "context_left": "m00nd3v[.]com", "context_right": "Python Script to decrypt first level decryption:", "_context_left": "", "_context_right": "", "sentence_left": "m00nd3v[.]com", "sentence_right": "Python Script to decrypt first level decryption:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "temp=hex(ord(i))", "context_left": "for i in fl:", "context_right": "temp=temp[2:]", "_context_left": "", "_context_right": "", "sentence_left": "for i in fl:", "sentence_right": "temp=temp[2:]", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "\\x00g\\x00T\\x00U\\x00a\\x00j\\x00\"", "context_left": "xor\\_key=\"W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s", "context_right": "xor\\_key=xor\\_key[0:16]", "_context_left": "", "_context_right": "", "sentence_left": "xor\\_key=\"W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s", "sentence_right": "xor\\_key=xor\\_key[0:16]", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "The hard-coded pass variable \"*zvjzpeuCFasb*\" is used as a key.", "context_left": "**First layer decryption**", "context_right": "When converted to Unicode string, the same pass variable is: \"*z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00F\\x00a\\x00s\\x00b\\x00*\".", "_context_left": "", "_context_right": "", "sentence_left": "**First layer decryption**", "sentence_right": "When converted to Unicode string, the same pass variable is: \"*z\\x00v\\x00j\\x00z\\x00p\\x00e\\x00u\\x00C\\x00F\\x00a\\x00s\\x00b\\x00*\".", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![pass_wteal](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Password_stelaer_format.JPG)", "context_left": "The collected passwords are sent to the attacker over SMTP.", "context_right": "*Figure 23: The collected passwords sent over SMTP.*", "_context_left": "", "_context_right": "", "sentence_left": "The collected passwords are sent to the attacker over SMTP.", "sentence_right": "*Figure 23: The collected passwords sent over SMTP.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "These mechanisms makes this logger unique and popular on hacking forums.", "context_left": "M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package.", "context_right": "![hk_acnt](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/seller_detail.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "M00nD3VLogger is also equipped with other major functionality, including a botkiller, an antivirus killer, communicating over SMTP/FTP/proxy, downloading additional plugins, and the BouncyCastle crypto package.", "sentence_right": "![hk_acnt](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/seller_detail.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "f.close()", "context_left": "f.write(binstr)", "context_right": "***Appendix II :***", "_context_left": "", "_context_right": "", "sentence_left": "f.write(binstr)", "sentence_right": "***Appendix II :***", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "- bf8801bcd5a196744ccd0f863f84df71 - Final Payload (.Net)", "context_left": "+ e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "context_right": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder.", "_context_left": "", "_context_right": "", "sentence_left": "+ e9cf47f3b0750dd0ee1ca30ea9861cc9 - Loader (.Net)", "sentence_right": "Delivering malware without triggering any suspicious activity while blending into an existing benign Windows process makes detection a bit harder.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Hence, a few bytes are not actually ciphered.", "context_left": "While unpacking, the malware also uses null bytes in the XOR key.", "context_right": "**First layer decryption**", "_context_left": "", "_context_right": "", "sentence_left": "While unpacking, the malware also uses null bytes in the XOR key.", "sentence_right": "**First layer decryption**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![legitprocessinjec](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/regAsm.JPG)", "context_left": "Here, the M00nD3V malware does one such trick to deliver its payload without getting easily noticed.", "context_right": "*Figure 4: The M00nD3V malware register running with RegAsm.exe* - *Microsoft utility.*", "_context_left": "", "_context_right": "", "sentence_left": "Here, the M00nD3V malware does one such trick to deliver its payload without getting easily noticed.", "sentence_right": "*Figure 4: The M00nD3V malware register running with RegAsm.exe* - *Microsoft utility.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Here, ‘fileloc’ is the full path of the file or process.", "context_left": "+ Figure 12 shows the checks used inside IsFileMalicious().", "context_right": "![botkill](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/botkiller1.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "+ Figure 12 shows the checks used inside IsFileMalicious().", "sentence_right": "![botkill](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/botkiller1.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "* Bot killer - Scans all running processes and Windows Startup registry entries [ \\\\Run\\\\ and \\\\RunOnce\\\\ ], then passes the file location path to module **IsFileMalicious()** to tag either the process or file as malicious and delete it accordingly.", "context_left": "*Figure 11: Process elevation.*", "context_right": "[Note: In case of a running process, it additionally checks for each process window visibility property.", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 11: Process elevation.*", "sentence_right": "[Note: In case of a running process, it additionally checks for each process window visibility property.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Second layer decryption**", "context_left": "In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final payload.", "context_right": "Here, the hard-coded pass variable \"*WcqqicsgTUaj\"* is used as a key.", "_context_left": "", "_context_right": "", "sentence_left": "In this dumped file, there is also a similar XOR routine to decrypt the data but with a different key to run the final payload.", "sentence_right": "Here, the hard-coded pass variable \"*WcqqicsgTUaj\"* is used as a key.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![basic_info](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/basic_info_SMTP.JPG)", "context_left": "The Stub starts its core stealing functionality by sending full victim machine information, as shown in Figure 15**,** to the attacker over SMTP port 587", "context_right": "*Figure 15: Basic machine information sent to the attacker.*", "_context_left": "", "_context_right": "", "sentence_left": "The Stub starts its core stealing functionality by sending full victim machine information, as shown in Figure 15**,** to the attacker over SMTP port 587", "sentence_right": "*Figure 15: Basic machine information sent to the attacker.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![hk_acnt](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/seller_detail.JPG)", "context_left": "These mechanisms makes this logger unique and popular on hacking forums.", "context_right": "*Figure 1: An image from the owner account.*", "_context_left": "", "_context_right": "", "sentence_left": "These mechanisms makes this logger unique and popular on hacking forums.", "sentence_right": "*Figure 1: An image from the owner account.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "file=open('enc2.bin','rb')", "context_left": "Python script to decrypt second level decryption:", "context_right": "cont=file.read()", "_context_left": "", "_context_right": "", "sentence_left": "Python script to decrypt second level decryption:", "sentence_right": "cont=file.read()", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![web_cam module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/webcam.JPG)", "context_left": "To send stolen images over SMTP, it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"**", "context_right": "*Figure 24: The webcam module.*", "_context_left": "", "_context_right": "", "sentence_left": "To send stolen images over SMTP, it reads the image path and attaches the .bmp image as an email attachment with a personalize the subject line, such as \"**Dear M00nD3v user Please find the attachment of Webcam. Regards M00nD3v\"**", "sentence_right": "*Figure 24: The webcam module.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "for i in fl:", "context_left": "hexval=[]", "context_right": "temp=hex(ord(i))", "_context_left": "", "_context_right": "", "sentence_left": "hexval=[]", "sentence_right": "temp=hex(ord(i))", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 9: AntiDebugger checks during the initialization process.*", "context_left": "![anit](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/antidebugr.JPG)", "context_right": "* Antivirus killer - Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10.", "_context_left": "", "_context_right": "", "sentence_left": "![anit](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/antidebugr.JPG)", "sentence_right": "* Antivirus killer - Uses Image File Execution Options (IFEO) to interfere with the executables shown in Figure 10.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "f.write(binstr)", "context_left": "f=open('fixed2','wb')", "context_right": "f.close()", "_context_left": "", "_context_right": "", "sentence_left": "f=open('fixed2','wb')", "sentence_right": "f.close()", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "temp='0'+temp", "context_left": "if len(temp) !=2:", "context_right": "hexval.append(temp)", "_context_left": "", "_context_right": "", "sentence_left": "if len(temp) !=2:", "sentence_right": "hexval.append(temp)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "index+=1", "context_left": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))   #Malware doesn’t use full key", "context_right": "hexval=[]", "_context_left": "", "_context_right": "", "sentence_left": "fl+=chr(ord(cont[i])^ord(xor\\_key[index%16]))   #Malware doesn’t use full key", "sentence_right": "hexval=[]", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Python Script to decrypt first level decryption:", "context_left": "***Appendix I :***", "context_right": "file=open('enc.bin','rb')", "_context_left": "", "_context_right": "", "sentence_left": "***Appendix I :***", "sentence_right": "file=open('enc.bin','rb')", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 12: Malicious checks of the file.*", "context_left": "![botkill](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/botkiller1.JPG)", "context_right": "Before starting to log the stored credentials and other personal data, it checks whether the malware was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory.", "_context_left": "", "_context_right": "", "sentence_left": "![botkill](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/botkiller1.JPG)", "sentence_right": "Before starting to log the stored credentials and other personal data, it checks whether the malware was previously installed or not on the victim's machine by looking for a specific file name with a combination of Processor Id and Volume Serial Number in the temp directory.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![processelv](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/process_elvation.JPG)", "context_left": "It is applicable to the \"Everyone\" group, so if anyone attempts to kill the process, it won't be allowed to terminate.", "context_right": "*Figure 11: Process elevation.*", "_context_left": "", "_context_right": "", "sentence_left": "It is applicable to the \"Everyone\" group, so if anyone attempts to kill the process, it won't be allowed to terminate.", "sentence_right": "*Figure 11: Process elevation.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "xor\\_key=xor\\_key[0:16]", "context_left": "\\x00g\\x00T\\x00U\\x00a\\x00j\\x00\"", "context_right": "fl=''", "_context_left": "", "_context_right": "", "sentence_left": "\\x00g\\x00T\\x00U\\x00a\\x00j\\x00\"", "sentence_right": "fl=''", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**IOCs:**", "context_left": "| T1183 | Image File Execution Options Injection |", "context_right": "dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "_context_left": "", "_context_right": "", "sentence_left": "| T1183 | Image File Execution Options Injection |", "sentence_right": "dab9565e03fae2c5c18c9071a713153a - Parent File (.Net)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Initialization details:", "context_left": "*Figure 7: Initialization phase*", "context_right": "* DependencyLoader - Downloads the DLL from m00nd3v[.]com/M00nD3v/Decryption/BouncyCastle[.]Crypto.dll and loads it in memory.", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 7: Initialization phase*", "sentence_right": "* DependencyLoader - Downloads the DLL from m00nd3v[.]com/M00nD3v/Decryption/BouncyCastle[.]Crypto.dll and loads it in memory.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "hexval=[]", "context_left": "index+=1", "context_right": "for i in fl:", "_context_left": "", "_context_right": "", "sentence_left": "index+=1", "sentence_right": "for i in fl:", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Package%20detail.JPG)", "context_left": "*Figure 2: Spam Mail*", "context_right": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/payment_method.JPG)", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 2: Spam Mail*", "sentence_right": "![package](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/payment_method.JPG)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "hexva=(\"\".join(hexval))", "context_left": "hexval.append(temp)", "context_right": "import binascii", "_context_left": "", "_context_right": "", "sentence_left": "hexval.append(temp)", "sentence_right": "import binascii", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "Each provider has a functionality to retrieve and decrypt the password for the application that is assigned to that provider.", "context_left": "Interestingly, the malware has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21.", "context_right": "![providerlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Provider_list.png)", "_context_left": "", "_context_right": "", "sentence_left": "Interestingly, the malware has three separate classes named \"ChromiumProvider\", \"MailProvider\", and \"MozillaProvider\" as shown in Figure 21.", "sentence_right": "![providerlist](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/Provider_list.png)", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 1: An image from the owner account.*", "context_left": "![hk_acnt](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/seller_detail.JPG)", "context_right": "**Delivery mechanism**", "_context_left": "", "_context_right": "", "sentence_left": "![hk_acnt](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/seller_detail.JPG)", "sentence_right": "**Delivery mechanism**", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "if len(temp) !=2:", "context_left": "temp=temp[2:]", "context_right": "temp='0'+temp", "_context_left": "", "_context_right": "", "sentence_left": "temp=temp[2:]", "sentence_right": "temp='0'+temp", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "*Figure 20: The core modules.*", "context_left": "![steal_module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/separate_thread.JPG)", "context_right": "**Password stealer:** M00nD3V Logger has the capability to steal passwords and cookies from all possible browsers and email clients, as well as FTP clients.", "_context_left": "", "_context_right": "", "sentence_left": "![steal_module](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/separate_thread.JPG)", "sentence_right": "**Password stealer:** M00nD3V Logger has the capability to steal passwords and cookies from all possible browsers and email clients, as well as FTP clients.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "**Delivery mechanism**", "context_left": "*Figure 1: An image from the owner account.*", "context_right": "During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a payload on the victim's machine.", "_context_left": "", "_context_right": "", "sentence_left": "*Figure 1: An image from the owner account.*", "sentence_right": "During our research, we found M00nD3V was delivered via spam mail or through a compromised website that drops a payload on the victim's machine.", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "![anit](/cdn-cgi/image/format=auto/sites/default/files/images/blogs/M00D3v/antidebugr.JPG)", "context_left": "If any are found, the malware terminates.", "context_right": "*Figure 9: AntiDebugger checks during the initialization process.*", "_context_left": "", "_context_right": "", "sentence_left": "If any are found, the malware terminates.", "sentence_right": "*Figure 9: AntiDebugger checks during the initialization process.*", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}
{"mention": "xor\\_key=\"W\\x00c\\x00q\\x00q\\x00i\\x00c\\x00s", "context_left": "file.close()", "context_right": "\\x00g\\x00T\\x00U\\x00a\\x00j\\x00\"", "_context_left": "", "_context_right": "", "sentence_left": "file.close()", "sentence_right": "\\x00g\\x00T\\x00U\\x00a\\x00j\\x00\"", "label": "No Annotation", "label_id": 1906, "label_title": "No Annotation", "label_link": "No Annotation", "entity_class": "CI", "entity_type": "TECHNIQUE", "document": "zscaler_2020-07-10_deep-dive-m00nd3v-logger"}